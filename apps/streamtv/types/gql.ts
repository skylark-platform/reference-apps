/* auto-generated by graphql-codegen */
/* eslint-disable eslint-comments/no-unlimited-disable */
/* eslint-disable */
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = {
  [K in keyof T]: T[K];
};
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & {
  [SubKey in K]?: Maybe<T[SubKey]>;
};
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & {
  [SubKey in K]: Maybe<T[SubKey]>;
};
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  AWSDate: any;
  AWSDateTime: any;
  AWSJSON: any;
  AWSURL: any;
};

export type AccountConfig = {
  __typename?: "AccountConfig";
  default_language?: Maybe<Scalars["String"]>;
};

export type AccountConfigInput = {
  default_language?: InputMaybe<Scalars["String"]>;
};

export type AccountDetails = {
  __typename?: "AccountDetails";
  account_id?: Maybe<Scalars["String"]>;
  config?: Maybe<AccountConfig>;
  skylark_version?: Maybe<Scalars["String"]>;
};

export enum AssetType {
  Main = "MAIN",
  Trailer = "TRAILER",
}

export type AssignAvailabilityInput = {
  create?: InputMaybe<Array<InputMaybe<AvailabilityInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type AssignDimensionGroupInput = {
  link?: InputMaybe<Array<InputMaybe<AssignDimensionInput>>>;
  unlink?: InputMaybe<Array<InputMaybe<AssignDimensionInput>>>;
};

export type AssignDimensionInput = {
  dimension_slug: Scalars["String"];
  value_slugs: Array<InputMaybe<Scalars["String"]>>;
};

export type Availability = VisibleObject & {
  __typename?: "Availability";
  _config?: Maybe<ObjectConfig>;
  _context?: Maybe<RequestContext>;
  _meta?: Maybe<_AvailabilityMeta>;
  dimensions?: Maybe<DimensionListing>;
  end?: Maybe<Scalars["AWSDateTime"]>;
  external_id?: Maybe<Scalars["String"]>;
  slug?: Maybe<Scalars["String"]>;
  start?: Maybe<Scalars["AWSDateTime"]>;
  timezone?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  uid: Scalars["String"];
};

export type AvailabilityDimensionsArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type AvailabilityInput = {
  dimensions?: InputMaybe<AssignDimensionGroupInput>;
  end?: InputMaybe<Scalars["AWSDateTime"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  relative_end?: InputMaybe<RelativeTimes>;
  slug?: InputMaybe<Scalars["String"]>;
  start?: InputMaybe<Scalars["AWSDateTime"]>;
  title?: InputMaybe<Scalars["String"]>;
};

export type AvailabilityListing = {
  __typename?: "AvailabilityListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<Availability>>>;
};

export type Brand = Metadata &
  VisibleObject & {
    __typename?: "Brand";
    _config?: Maybe<ObjectConfig>;
    _context?: Maybe<RequestContext>;
    _meta?: Maybe<_BrandMeta>;
    assets?: Maybe<SkylarkAssetListing>;
    availability?: Maybe<AvailabilityListing>;
    call_to_actions?: Maybe<CallToActionListing>;
    content_of?: Maybe<SetListing>;
    credits?: Maybe<CreditListing>;
    episodes?: Maybe<EpisodeListing>;
    external_id?: Maybe<Scalars["String"]>;
    genres?: Maybe<GenreListing>;
    images?: Maybe<SkylarkImageListing>;
    internal_title?: Maybe<Scalars["String"]>;
    movies?: Maybe<MovieListing>;
    ratings?: Maybe<RatingListing>;
    release_date?: Maybe<Scalars["AWSDate"]>;
    seasons?: Maybe<SeasonListing>;
    slug?: Maybe<Scalars["String"]>;
    synopsis?: Maybe<Scalars["String"]>;
    synopsis_short?: Maybe<Scalars["String"]>;
    tags?: Maybe<SkylarkTagListing>;
    themes?: Maybe<ThemeListing>;
    title?: Maybe<Scalars["String"]>;
    title_short?: Maybe<Scalars["String"]>;
    title_sort?: Maybe<Scalars["String"]>;
    uid: Scalars["String"];
  };

export type Brand_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type BrandAssetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type BrandAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type BrandCall_To_ActionsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type BrandContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type BrandCreditsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type BrandEpisodesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type BrandGenresArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type BrandImagesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type BrandMoviesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type BrandRatingsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type BrandSeasonsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type BrandTagsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type BrandThemesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type BrandCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  internal_title?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<BrandRelationships>;
  release_date?: InputMaybe<Scalars["AWSDate"]>;
  slug?: InputMaybe<Scalars["String"]>;
  synopsis?: InputMaybe<Scalars["String"]>;
  synopsis_short?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  title_short?: InputMaybe<Scalars["String"]>;
  title_sort?: InputMaybe<Scalars["String"]>;
};

export type BrandInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  internal_title?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<BrandRelationships>;
  release_date?: InputMaybe<Scalars["AWSDate"]>;
  slug?: InputMaybe<Scalars["String"]>;
  synopsis?: InputMaybe<Scalars["String"]>;
  synopsis_short?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  title_short?: InputMaybe<Scalars["String"]>;
  title_sort?: InputMaybe<Scalars["String"]>;
};

export type BrandListing = Listing & {
  __typename?: "BrandListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<Brand>>>;
};

export type BrandRelationshipInput = {
  config?: InputMaybe<RelationshipConfigInput>;
  create?: InputMaybe<Array<InputMaybe<BrandCreateInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type BrandRelationships = {
  assets?: InputMaybe<SkylarkAssetRelationshipInput>;
  call_to_actions?: InputMaybe<CallToActionRelationshipInput>;
  credits?: InputMaybe<CreditRelationshipInput>;
  episodes?: InputMaybe<EpisodeRelationshipInput>;
  genres?: InputMaybe<GenreRelationshipInput>;
  images?: InputMaybe<SkylarkImageRelationshipInput>;
  movies?: InputMaybe<MovieRelationshipInput>;
  ratings?: InputMaybe<RatingRelationshipInput>;
  seasons?: InputMaybe<SeasonRelationshipInput>;
  tags?: InputMaybe<SkylarkTagRelationshipInput>;
  themes?: InputMaybe<ThemeRelationshipInput>;
};

export type BrandSetCreate = {
  object?: InputMaybe<BrandInput>;
  position: Scalars["Int"];
};

export type BrandSetInput = {
  create?: InputMaybe<Array<InputMaybe<BrandSetCreate>>>;
  link?: InputMaybe<Array<InputMaybe<SetLink>>>;
  reposition?: InputMaybe<Array<InputMaybe<SetLink>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type CallToAction = Metadata &
  VisibleObject & {
    __typename?: "CallToAction";
    _config?: Maybe<ObjectConfig>;
    _context?: Maybe<RequestContext>;
    _meta?: Maybe<_CallToActionMeta>;
    availability?: Maybe<AvailabilityListing>;
    brands?: Maybe<BrandListing>;
    content_of?: Maybe<SetListing>;
    description?: Maybe<Scalars["String"]>;
    description_short?: Maybe<Scalars["String"]>;
    episodes?: Maybe<EpisodeListing>;
    external_id?: Maybe<Scalars["String"]>;
    images?: Maybe<SkylarkImageListing>;
    internal_title?: Maybe<Scalars["String"]>;
    movies?: Maybe<MovieListing>;
    seasons?: Maybe<SeasonListing>;
    sets?: Maybe<SkylarkSetListing>;
    slug?: Maybe<Scalars["String"]>;
    text?: Maybe<Scalars["String"]>;
    text_short?: Maybe<Scalars["String"]>;
    type?: Maybe<Scalars["String"]>;
    uid: Scalars["String"];
    url?: Maybe<Scalars["AWSURL"]>;
    url_path?: Maybe<Scalars["String"]>;
  };

export type CallToAction_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type CallToActionAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type CallToActionBrandsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type CallToActionContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type CallToActionEpisodesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type CallToActionImagesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type CallToActionMoviesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type CallToActionSeasonsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type CallToActionSetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type CallToActionCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  description?: InputMaybe<Scalars["String"]>;
  description_short?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  internal_title?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<CallToActionRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  text?: InputMaybe<Scalars["String"]>;
  text_short?: InputMaybe<Scalars["String"]>;
  type: CallToActionType;
  url?: InputMaybe<Scalars["AWSURL"]>;
  url_path?: InputMaybe<Scalars["String"]>;
};

export type CallToActionInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  description?: InputMaybe<Scalars["String"]>;
  description_short?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  internal_title?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<CallToActionRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  text?: InputMaybe<Scalars["String"]>;
  text_short?: InputMaybe<Scalars["String"]>;
  type?: InputMaybe<CallToActionType>;
  url?: InputMaybe<Scalars["AWSURL"]>;
  url_path?: InputMaybe<Scalars["String"]>;
};

export type CallToActionListing = Listing & {
  __typename?: "CallToActionListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<CallToAction>>>;
};

export type CallToActionRelationshipInput = {
  config?: InputMaybe<RelationshipConfigInput>;
  create?: InputMaybe<Array<InputMaybe<CallToActionCreateInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type CallToActionRelationships = {
  brands?: InputMaybe<BrandRelationshipInput>;
  episodes?: InputMaybe<EpisodeRelationshipInput>;
  images?: InputMaybe<SkylarkImageRelationshipInput>;
  movies?: InputMaybe<MovieRelationshipInput>;
  seasons?: InputMaybe<SeasonRelationshipInput>;
  sets?: InputMaybe<SkylarkSetRelationshipInput>;
};

export type CallToActionSetCreate = {
  object?: InputMaybe<CallToActionInput>;
  position: Scalars["Int"];
};

export type CallToActionSetInput = {
  create?: InputMaybe<Array<InputMaybe<CallToActionSetCreate>>>;
  link?: InputMaybe<Array<InputMaybe<SetLink>>>;
  reposition?: InputMaybe<Array<InputMaybe<SetLink>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export enum CallToActionType {
  ComingSoon = "COMING_SOON",
  LinkToRelatedObject = "LINK_TO_RELATED_OBJECT",
  LinkToUrl = "LINK_TO_URL",
  SignUp = "SIGN_UP",
}

export enum ConfigurationOperations {
  Create = "CREATE",
  Delete = "DELETE",
  Update = "UPDATE",
}

export type ConfigurationResponse = {
  __typename?: "ConfigurationResponse";
  messages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  version?: Maybe<Scalars["Int"]>;
};

export type CountResponse = {
  __typename?: "CountResponse";
  count?: Maybe<Scalars["Int"]>;
};

export type CreateObjectTypeInput = {
  fields?: InputMaybe<Array<InputMaybe<EditFieldInput>>>;
  is_set?: InputMaybe<Scalars["Boolean"]>;
  name: Scalars["String"];
  relationships?: InputMaybe<
    Array<InputMaybe<EditFixedObjectRelationshipInput>>
  >;
};

export type Credit = Metadata &
  VisibleObject & {
    __typename?: "Credit";
    _config?: Maybe<ObjectConfig>;
    _context?: Maybe<RequestContext>;
    _meta?: Maybe<_CreditMeta>;
    availability?: Maybe<AvailabilityListing>;
    brands?: Maybe<BrandListing>;
    character?: Maybe<Scalars["String"]>;
    content_of?: Maybe<SetListing>;
    episodes?: Maybe<EpisodeListing>;
    external_id?: Maybe<Scalars["String"]>;
    internal_title?: Maybe<Scalars["String"]>;
    movies?: Maybe<MovieListing>;
    people?: Maybe<PersonListing>;
    position?: Maybe<Scalars["Int"]>;
    roles?: Maybe<RoleListing>;
    seasons?: Maybe<SeasonListing>;
    sets?: Maybe<SkylarkSetListing>;
    slug?: Maybe<Scalars["String"]>;
    uid: Scalars["String"];
  };

export type Credit_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type CreditAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type CreditBrandsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type CreditContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type CreditEpisodesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type CreditMoviesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type CreditPeopleArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type CreditRolesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type CreditSeasonsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type CreditSetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type CreditCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  character?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  internal_title?: InputMaybe<Scalars["String"]>;
  position?: InputMaybe<Scalars["Int"]>;
  relationships?: InputMaybe<CreditRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
};

export type CreditInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  character?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  internal_title?: InputMaybe<Scalars["String"]>;
  position?: InputMaybe<Scalars["Int"]>;
  relationships?: InputMaybe<CreditRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
};

export type CreditListing = Listing & {
  __typename?: "CreditListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<Credit>>>;
};

export type CreditRelationshipInput = {
  config?: InputMaybe<RelationshipConfigInput>;
  create?: InputMaybe<Array<InputMaybe<CreditCreateInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type CreditRelationships = {
  brands?: InputMaybe<BrandRelationshipInput>;
  episodes?: InputMaybe<EpisodeRelationshipInput>;
  movies?: InputMaybe<MovieRelationshipInput>;
  people?: InputMaybe<PersonRelationshipInput>;
  roles?: InputMaybe<RoleRelationshipInput>;
  seasons?: InputMaybe<SeasonRelationshipInput>;
  sets?: InputMaybe<SkylarkSetRelationshipInput>;
};

export type CreditSetCreate = {
  object?: InputMaybe<CreditInput>;
  position: Scalars["Int"];
};

export type CreditSetInput = {
  create?: InputMaybe<Array<InputMaybe<CreditSetCreate>>>;
  link?: InputMaybe<Array<InputMaybe<SetLink>>>;
  reposition?: InputMaybe<Array<InputMaybe<SetLink>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type Dimension = {
  __typename?: "Dimension";
  _meta?: Maybe<_DimensionMeta>;
  availability?: Maybe<AvailabilityListing>;
  description?: Maybe<Scalars["String"]>;
  external_id?: Maybe<Scalars["String"]>;
  slug: Scalars["String"];
  title?: Maybe<Scalars["String"]>;
  uid: Scalars["String"];
  values?: Maybe<DimensionValueListing>;
};

export type DimensionAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type DimensionValuesArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  value_external_id?: InputMaybe<Scalars["String"]>;
  value_id?: InputMaybe<Scalars["String"]>;
};

export type DimensionInput = {
  description?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  slug: Scalars["String"];
  title?: InputMaybe<Scalars["String"]>;
};

export type DimensionListing = Listing & {
  __typename?: "DimensionListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<Dimension>>>;
};

export type DimensionValue = {
  __typename?: "DimensionValue";
  _meta?: Maybe<_DimensionMeta>;
  availability?: Maybe<AvailabilityListing>;
  description?: Maybe<Scalars["String"]>;
  dimension?: Maybe<Dimension>;
  external_id?: Maybe<Scalars["String"]>;
  slug: Scalars["String"];
  title?: Maybe<Scalars["String"]>;
  uid: Scalars["String"];
};

export type DimensionValueAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type DimensionValueListing = Listing & {
  __typename?: "DimensionValueListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<DimensionValue>>>;
};

export type EditEnumInput = {
  name: Scalars["String"];
  operation: ConfigurationOperations;
  values?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type EditFieldInput = {
  enum_name?: InputMaybe<Scalars["String"]>;
  is_translatable?: InputMaybe<Scalars["Boolean"]>;
  name: Scalars["String"];
  operation: ConfigurationOperations;
  required?: InputMaybe<Scalars["Boolean"]>;
  type?: InputMaybe<FieldTypes>;
};

export type EditFixedObjectRelationshipInput = {
  operation: ConfigurationOperations;
  relationship_name: Scalars["String"];
  reverse_relationship_name: Scalars["String"];
  to_class: ObjectTypes;
};

export type EditRelationshipInput = {
  from_class: ObjectTypes;
  operation: ConfigurationOperations;
  relationship_name: Scalars["String"];
  reverse_relationship_name: Scalars["String"];
  to_class: ObjectTypes;
};

export type Episode = Metadata &
  VisibleObject & {
    __typename?: "Episode";
    _config?: Maybe<ObjectConfig>;
    _context?: Maybe<RequestContext>;
    _meta?: Maybe<_EpisodeMeta>;
    assets?: Maybe<SkylarkAssetListing>;
    availability?: Maybe<AvailabilityListing>;
    brands?: Maybe<BrandListing>;
    call_to_actions?: Maybe<CallToActionListing>;
    content_of?: Maybe<SetListing>;
    credits?: Maybe<CreditListing>;
    episode_number?: Maybe<Scalars["Int"]>;
    external_id?: Maybe<Scalars["String"]>;
    genres?: Maybe<GenreListing>;
    images?: Maybe<SkylarkImageListing>;
    internal_title?: Maybe<Scalars["String"]>;
    ratings?: Maybe<RatingListing>;
    release_date?: Maybe<Scalars["AWSDate"]>;
    seasons?: Maybe<SeasonListing>;
    slug?: Maybe<Scalars["String"]>;
    synopsis?: Maybe<Scalars["String"]>;
    synopsis_short?: Maybe<Scalars["String"]>;
    tags?: Maybe<SkylarkTagListing>;
    themes?: Maybe<ThemeListing>;
    title?: Maybe<Scalars["String"]>;
    title_short?: Maybe<Scalars["String"]>;
    title_sort?: Maybe<Scalars["String"]>;
    uid: Scalars["String"];
    year_of_release?: Maybe<Scalars["Int"]>;
  };

export type Episode_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type EpisodeAssetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type EpisodeAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type EpisodeBrandsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type EpisodeCall_To_ActionsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type EpisodeContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type EpisodeCreditsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type EpisodeGenresArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type EpisodeImagesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type EpisodeRatingsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type EpisodeSeasonsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type EpisodeTagsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type EpisodeThemesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type EpisodeCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  episode_number?: InputMaybe<Scalars["Int"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  internal_title?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<EpisodeRelationships>;
  release_date?: InputMaybe<Scalars["AWSDate"]>;
  slug?: InputMaybe<Scalars["String"]>;
  synopsis?: InputMaybe<Scalars["String"]>;
  synopsis_short?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  title_short?: InputMaybe<Scalars["String"]>;
  title_sort?: InputMaybe<Scalars["String"]>;
  year_of_release?: InputMaybe<Scalars["Int"]>;
};

export type EpisodeInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  episode_number?: InputMaybe<Scalars["Int"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  internal_title?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<EpisodeRelationships>;
  release_date?: InputMaybe<Scalars["AWSDate"]>;
  slug?: InputMaybe<Scalars["String"]>;
  synopsis?: InputMaybe<Scalars["String"]>;
  synopsis_short?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  title_short?: InputMaybe<Scalars["String"]>;
  title_sort?: InputMaybe<Scalars["String"]>;
  year_of_release?: InputMaybe<Scalars["Int"]>;
};

export type EpisodeListing = Listing & {
  __typename?: "EpisodeListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<Episode>>>;
};

export type EpisodeRelationshipInput = {
  config?: InputMaybe<RelationshipConfigInput>;
  create?: InputMaybe<Array<InputMaybe<EpisodeCreateInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type EpisodeRelationships = {
  assets?: InputMaybe<SkylarkAssetRelationshipInput>;
  brands?: InputMaybe<BrandRelationshipInput>;
  call_to_actions?: InputMaybe<CallToActionRelationshipInput>;
  credits?: InputMaybe<CreditRelationshipInput>;
  genres?: InputMaybe<GenreRelationshipInput>;
  images?: InputMaybe<SkylarkImageRelationshipInput>;
  ratings?: InputMaybe<RatingRelationshipInput>;
  seasons?: InputMaybe<SeasonRelationshipInput>;
  tags?: InputMaybe<SkylarkTagRelationshipInput>;
  themes?: InputMaybe<ThemeRelationshipInput>;
};

export type EpisodeSetCreate = {
  object?: InputMaybe<EpisodeInput>;
  position: Scalars["Int"];
};

export type EpisodeSetInput = {
  create?: InputMaybe<Array<InputMaybe<EpisodeSetCreate>>>;
  link?: InputMaybe<Array<InputMaybe<SetLink>>>;
  reposition?: InputMaybe<Array<InputMaybe<SetLink>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type FieldConfig = {
  __typename?: "FieldConfig";
  name?: Maybe<Scalars["String"]>;
  ui_field_type?: Maybe<Scalars["String"]>;
  ui_position?: Maybe<Scalars["Int"]>;
};

export type FieldConfigInput = {
  name: Scalars["String"];
  ui_field_type?: InputMaybe<UiFieldTypes>;
  ui_position?: InputMaybe<Scalars["Int"]>;
};

export enum FieldTypes {
  Boolean = "BOOLEAN",
  Date = "DATE",
  Datetime = "DATETIME",
  Email = "EMAIL",
  Enum = "ENUM",
  Float = "FLOAT",
  Integer = "INTEGER",
  IpAddress = "IP_ADDRESS",
  Json = "JSON",
  Phone = "PHONE",
  String = "STRING",
  Time = "TIME",
  Timestamp = "TIMESTAMP",
  Url = "URL",
}

export type Genre = Metadata &
  VisibleObject & {
    __typename?: "Genre";
    _config?: Maybe<ObjectConfig>;
    _context?: Maybe<RequestContext>;
    _meta?: Maybe<_GenreMeta>;
    availability?: Maybe<AvailabilityListing>;
    brands?: Maybe<BrandListing>;
    content_of?: Maybe<SetListing>;
    episodes?: Maybe<EpisodeListing>;
    external_id?: Maybe<Scalars["String"]>;
    images?: Maybe<SkylarkImageListing>;
    internal_title?: Maybe<Scalars["String"]>;
    metadata_source?: Maybe<Scalars["String"]>;
    movies?: Maybe<MovieListing>;
    name?: Maybe<Scalars["String"]>;
    people?: Maybe<PersonListing>;
    seasons?: Maybe<SeasonListing>;
    sets?: Maybe<SkylarkSetListing>;
    slug?: Maybe<Scalars["String"]>;
    title_sort?: Maybe<Scalars["String"]>;
    uid: Scalars["String"];
  };

export type Genre_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type GenreAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type GenreBrandsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type GenreContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type GenreEpisodesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type GenreImagesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type GenreMoviesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type GenrePeopleArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type GenreSeasonsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type GenreSetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type GenreCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  internal_title?: InputMaybe<Scalars["String"]>;
  metadata_source?: InputMaybe<Scalars["String"]>;
  name?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<GenreRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  title_sort?: InputMaybe<Scalars["String"]>;
};

export type GenreInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  internal_title?: InputMaybe<Scalars["String"]>;
  metadata_source?: InputMaybe<Scalars["String"]>;
  name?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<GenreRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  title_sort?: InputMaybe<Scalars["String"]>;
};

export type GenreListing = Listing & {
  __typename?: "GenreListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<Genre>>>;
};

export type GenreRelationshipInput = {
  config?: InputMaybe<RelationshipConfigInput>;
  create?: InputMaybe<Array<InputMaybe<GenreCreateInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type GenreRelationships = {
  brands?: InputMaybe<BrandRelationshipInput>;
  episodes?: InputMaybe<EpisodeRelationshipInput>;
  images?: InputMaybe<SkylarkImageRelationshipInput>;
  movies?: InputMaybe<MovieRelationshipInput>;
  people?: InputMaybe<PersonRelationshipInput>;
  seasons?: InputMaybe<SeasonRelationshipInput>;
  sets?: InputMaybe<SkylarkSetRelationshipInput>;
};

export type GenreSetCreate = {
  object?: InputMaybe<GenreInput>;
  position: Scalars["Int"];
};

export type GenreSetInput = {
  create?: InputMaybe<Array<InputMaybe<GenreSetCreate>>>;
  link?: InputMaybe<Array<InputMaybe<SetLink>>>;
  reposition?: InputMaybe<Array<InputMaybe<SetLink>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type HiddenObject = {
  _context?: Maybe<RequestContext>;
  external_id?: Maybe<Scalars["String"]>;
  slug?: Maybe<Scalars["String"]>;
  uid: Scalars["String"];
};

export enum ImageType {
  Background = "BACKGROUND",
  Character = "CHARACTER",
  Feature = "FEATURE",
  Footer = "FOOTER",
  Header = "HEADER",
  Main = "MAIN",
  Poster = "POSTER",
  PostLive = "POST_LIVE",
  Preview = "PREVIEW",
  PreLive = "PRE_LIVE",
  Thumbnail = "THUMBNAIL",
}

export type Listing = {
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
};

export type MediaFile = {
  content_type?: Maybe<Scalars["String"]>;
  download_from_url?: Maybe<Scalars["String"]>;
  external_url?: Maybe<Scalars["String"]>;
  file_name?: Maybe<Scalars["String"]>;
  upload_url?: Maybe<Scalars["String"]>;
};

export type Metadata = {
  _config?: Maybe<ObjectConfig>;
  content_of?: Maybe<SetListing>;
  external_id?: Maybe<Scalars["String"]>;
  slug?: Maybe<Scalars["String"]>;
  uid: Scalars["String"];
};

export type MetadataContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type MetadataListing = Listing & {
  __typename?: "MetadataListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<SetContent>>>;
};

export type Movie = Metadata &
  VisibleObject & {
    __typename?: "Movie";
    _config?: Maybe<ObjectConfig>;
    _context?: Maybe<RequestContext>;
    _meta?: Maybe<_MovieMeta>;
    assets?: Maybe<SkylarkAssetListing>;
    availability?: Maybe<AvailabilityListing>;
    brands?: Maybe<BrandListing>;
    call_to_actions?: Maybe<CallToActionListing>;
    content_of?: Maybe<SetListing>;
    credits?: Maybe<CreditListing>;
    external_id?: Maybe<Scalars["String"]>;
    genres?: Maybe<GenreListing>;
    images?: Maybe<SkylarkImageListing>;
    internal_title?: Maybe<Scalars["String"]>;
    movie_number?: Maybe<Scalars["Int"]>;
    ratings?: Maybe<RatingListing>;
    release_date?: Maybe<Scalars["AWSDate"]>;
    slug?: Maybe<Scalars["String"]>;
    synopsis?: Maybe<Scalars["String"]>;
    synopsis_short?: Maybe<Scalars["String"]>;
    tags?: Maybe<SkylarkTagListing>;
    themes?: Maybe<ThemeListing>;
    title?: Maybe<Scalars["String"]>;
    title_short?: Maybe<Scalars["String"]>;
    title_sort?: Maybe<Scalars["String"]>;
    uid: Scalars["String"];
    year_of_release?: Maybe<Scalars["Int"]>;
  };

export type Movie_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type MovieAssetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type MovieAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type MovieBrandsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type MovieCall_To_ActionsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type MovieContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type MovieCreditsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type MovieGenresArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type MovieImagesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type MovieRatingsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type MovieTagsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type MovieThemesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type MovieCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  internal_title?: InputMaybe<Scalars["String"]>;
  movie_number?: InputMaybe<Scalars["Int"]>;
  relationships?: InputMaybe<MovieRelationships>;
  release_date?: InputMaybe<Scalars["AWSDate"]>;
  slug?: InputMaybe<Scalars["String"]>;
  synopsis?: InputMaybe<Scalars["String"]>;
  synopsis_short?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  title_short?: InputMaybe<Scalars["String"]>;
  title_sort?: InputMaybe<Scalars["String"]>;
  year_of_release?: InputMaybe<Scalars["Int"]>;
};

export type MovieInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  internal_title?: InputMaybe<Scalars["String"]>;
  movie_number?: InputMaybe<Scalars["Int"]>;
  relationships?: InputMaybe<MovieRelationships>;
  release_date?: InputMaybe<Scalars["AWSDate"]>;
  slug?: InputMaybe<Scalars["String"]>;
  synopsis?: InputMaybe<Scalars["String"]>;
  synopsis_short?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  title_short?: InputMaybe<Scalars["String"]>;
  title_sort?: InputMaybe<Scalars["String"]>;
  year_of_release?: InputMaybe<Scalars["Int"]>;
};

export type MovieListing = Listing & {
  __typename?: "MovieListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<Movie>>>;
};

export type MovieRelationshipInput = {
  config?: InputMaybe<RelationshipConfigInput>;
  create?: InputMaybe<Array<InputMaybe<MovieCreateInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type MovieRelationships = {
  assets?: InputMaybe<SkylarkAssetRelationshipInput>;
  brands?: InputMaybe<BrandRelationshipInput>;
  call_to_actions?: InputMaybe<CallToActionRelationshipInput>;
  credits?: InputMaybe<CreditRelationshipInput>;
  genres?: InputMaybe<GenreRelationshipInput>;
  images?: InputMaybe<SkylarkImageRelationshipInput>;
  ratings?: InputMaybe<RatingRelationshipInput>;
  tags?: InputMaybe<SkylarkTagRelationshipInput>;
  themes?: InputMaybe<ThemeRelationshipInput>;
};

export type MovieSetCreate = {
  object?: InputMaybe<MovieInput>;
  position: Scalars["Int"];
};

export type MovieSetInput = {
  create?: InputMaybe<Array<InputMaybe<MovieSetCreate>>>;
  link?: InputMaybe<Array<InputMaybe<SetLink>>>;
  reposition?: InputMaybe<Array<InputMaybe<SetLink>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type Mutation = {
  __typename?: "Mutation";
  activateConfigurationVersion?: Maybe<ConfigurationResponse>;
  createAvailability?: Maybe<Availability>;
  createBrand?: Maybe<Brand>;
  createCallToAction?: Maybe<CallToAction>;
  createCredit?: Maybe<Credit>;
  createDimension?: Maybe<Dimension>;
  createDimensionValue?: Maybe<DimensionValue>;
  createEpisode?: Maybe<Episode>;
  createGenre?: Maybe<Genre>;
  createMovie?: Maybe<Movie>;
  /** @deprecated Replaced with 'createObjectType' */
  createObjectConfiguration?: Maybe<ConfigurationResponse>;
  createObjectType?: Maybe<ConfigurationResponse>;
  createParentalGuidance?: Maybe<ParentalGuidance>;
  createPerson?: Maybe<Person>;
  createRating?: Maybe<Rating>;
  createRole?: Maybe<Role>;
  createSeason?: Maybe<Season>;
  createSkylarkAsset?: Maybe<SkylarkAsset>;
  createSkylarkEPGProgram?: Maybe<SkylarkEpgProgram>;
  createSkylarkFavoriteList?: Maybe<SkylarkFavoriteList>;
  createSkylarkImage?: Maybe<SkylarkImage>;
  createSkylarkLiveStream?: Maybe<SkylarkLiveStream>;
  createSkylarkSet?: Maybe<SkylarkSet>;
  createSkylarkTag?: Maybe<SkylarkTag>;
  createTheme?: Maybe<Theme>;
  deleteAvailability?: Maybe<Scalars["String"]>;
  deleteBrand?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteCallToAction?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteCredit?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteDimension?: Maybe<Scalars["String"]>;
  deleteDimensionValue?: Maybe<Scalars["String"]>;
  deleteEpisode?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteGenre?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteMovie?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteParentalGuidance?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deletePerson?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteRating?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteRole?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteSeason?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteSkylarkAsset?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteSkylarkEPGProgram?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteSkylarkFavoriteList?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteSkylarkImage?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteSkylarkLiveStream?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteSkylarkSet?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteSkylarkTag?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteTheme?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  editEnumConfiguration?: Maybe<ConfigurationResponse>;
  editFieldConfiguration?: Maybe<ConfigurationResponse>;
  editRelationshipConfiguration?: Maybe<ConfigurationResponse>;
  editSearchableFields?: Maybe<Array<Maybe<Scalars["String"]>>>;
  sendSearchInsight?: Maybe<Scalars["String"]>;
  setAccountConfiguration?: Maybe<AccountDetails>;
  /** @deprecated Replaced with 'setObjectTypeConfiguration' */
  setObjectConfiguration?: Maybe<ObjectConfig>;
  setObjectTypeConfiguration?: Maybe<ObjectConfig>;
  setRelationshipConfiguration?: Maybe<RelationshipConfig>;
  updateAvailability?: Maybe<Availability>;
  updateBrand?: Maybe<Brand>;
  updateCallToAction?: Maybe<CallToAction>;
  updateCredit?: Maybe<Credit>;
  updateDimension?: Maybe<Dimension>;
  updateDimensionValue?: Maybe<DimensionValue>;
  updateEpisode?: Maybe<Episode>;
  updateGenre?: Maybe<Genre>;
  updateMovie?: Maybe<Movie>;
  updateParentalGuidance?: Maybe<ParentalGuidance>;
  updatePerson?: Maybe<Person>;
  updateRating?: Maybe<Rating>;
  updateRole?: Maybe<Role>;
  updateSeason?: Maybe<Season>;
  updateSkylarkAsset?: Maybe<SkylarkAsset>;
  updateSkylarkEPGProgram?: Maybe<SkylarkEpgProgram>;
  updateSkylarkFavoriteList?: Maybe<SkylarkFavoriteList>;
  updateSkylarkImage?: Maybe<SkylarkImage>;
  updateSkylarkLiveStream?: Maybe<SkylarkLiveStream>;
  updateSkylarkSet?: Maybe<SkylarkSet>;
  updateSkylarkTag?: Maybe<SkylarkTag>;
  updateTheme?: Maybe<Theme>;
};

export type MutationActivateConfigurationVersionArgs = {
  version?: InputMaybe<Scalars["Int"]>;
};

export type MutationCreateAvailabilityArgs = {
  availability: AvailabilityInput;
};

export type MutationCreateBrandArgs = {
  brand?: InputMaybe<BrandCreateInput>;
  language?: InputMaybe<Scalars["String"]>;
};

export type MutationCreateCallToActionArgs = {
  call_to_action?: InputMaybe<CallToActionCreateInput>;
  language?: InputMaybe<Scalars["String"]>;
};

export type MutationCreateCreditArgs = {
  credit?: InputMaybe<CreditCreateInput>;
  language?: InputMaybe<Scalars["String"]>;
};

export type MutationCreateDimensionArgs = {
  dimension: DimensionInput;
};

export type MutationCreateDimensionValueArgs = {
  dimension_id?: InputMaybe<Scalars["String"]>;
  dimension_value: DimensionInput;
  external_id?: InputMaybe<Scalars["String"]>;
};

export type MutationCreateEpisodeArgs = {
  episode?: InputMaybe<EpisodeCreateInput>;
  language?: InputMaybe<Scalars["String"]>;
};

export type MutationCreateGenreArgs = {
  genre?: InputMaybe<GenreCreateInput>;
  language?: InputMaybe<Scalars["String"]>;
};

export type MutationCreateMovieArgs = {
  language?: InputMaybe<Scalars["String"]>;
  movie?: InputMaybe<MovieCreateInput>;
};

export type MutationCreateObjectConfigurationArgs = {
  objects?: InputMaybe<Array<InputMaybe<CreateObjectTypeInput>>>;
  version?: InputMaybe<Scalars["Int"]>;
};

export type MutationCreateObjectTypeArgs = {
  object_types?: InputMaybe<Array<InputMaybe<CreateObjectTypeInput>>>;
  version?: InputMaybe<Scalars["Int"]>;
};

export type MutationCreateParentalGuidanceArgs = {
  language?: InputMaybe<Scalars["String"]>;
  parental_guidance?: InputMaybe<ParentalGuidanceCreateInput>;
};

export type MutationCreatePersonArgs = {
  language?: InputMaybe<Scalars["String"]>;
  person?: InputMaybe<PersonCreateInput>;
};

export type MutationCreateRatingArgs = {
  language?: InputMaybe<Scalars["String"]>;
  rating?: InputMaybe<RatingCreateInput>;
};

export type MutationCreateRoleArgs = {
  language?: InputMaybe<Scalars["String"]>;
  role?: InputMaybe<RoleCreateInput>;
};

export type MutationCreateSeasonArgs = {
  language?: InputMaybe<Scalars["String"]>;
  season?: InputMaybe<SeasonCreateInput>;
};

export type MutationCreateSkylarkAssetArgs = {
  language?: InputMaybe<Scalars["String"]>;
  skylark_asset?: InputMaybe<SkylarkAssetCreateInput>;
};

export type MutationCreateSkylarkEpgProgramArgs = {
  language?: InputMaybe<Scalars["String"]>;
  skylark_epg_program?: InputMaybe<SkylarkEpgProgramCreateInput>;
};

export type MutationCreateSkylarkFavoriteListArgs = {
  language?: InputMaybe<Scalars["String"]>;
  skylark_favorite_list?: InputMaybe<SkylarkFavoriteListCreateInput>;
};

export type MutationCreateSkylarkImageArgs = {
  language?: InputMaybe<Scalars["String"]>;
  skylark_image?: InputMaybe<SkylarkImageCreateInput>;
};

export type MutationCreateSkylarkLiveStreamArgs = {
  language?: InputMaybe<Scalars["String"]>;
  skylark_live_stream?: InputMaybe<SkylarkLiveStreamCreateInput>;
};

export type MutationCreateSkylarkSetArgs = {
  language?: InputMaybe<Scalars["String"]>;
  skylark_set?: InputMaybe<SkylarkSetCreateInput>;
};

export type MutationCreateSkylarkTagArgs = {
  language?: InputMaybe<Scalars["String"]>;
  skylark_tag?: InputMaybe<SkylarkTagCreateInput>;
};

export type MutationCreateThemeArgs = {
  language?: InputMaybe<Scalars["String"]>;
  theme?: InputMaybe<ThemeCreateInput>;
};

export type MutationDeleteAvailabilityArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationDeleteBrandArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteCallToActionArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteCreditArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteDimensionArgs = {
  dimension_id?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
};

export type MutationDeleteDimensionValueArgs = {
  dimension_id?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  value_external_id?: InputMaybe<Scalars["String"]>;
  value_id?: InputMaybe<Scalars["String"]>;
};

export type MutationDeleteEpisodeArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteGenreArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteMovieArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteParentalGuidanceArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeletePersonArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteRatingArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteRoleArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteSeasonArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteSkylarkAssetArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteSkylarkEpgProgramArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteSkylarkFavoriteListArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationDeleteSkylarkImageArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteSkylarkLiveStreamArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteSkylarkSetArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationDeleteSkylarkTagArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteThemeArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationEditEnumConfigurationArgs = {
  enums?: InputMaybe<Array<InputMaybe<EditEnumInput>>>;
  version?: InputMaybe<Scalars["Int"]>;
};

export type MutationEditFieldConfigurationArgs = {
  fields: Array<InputMaybe<EditFieldInput>>;
  object_class: ObjectTypes;
  version?: InputMaybe<Scalars["Int"]>;
};

export type MutationEditRelationshipConfigurationArgs = {
  relationships?: InputMaybe<Array<InputMaybe<EditRelationshipInput>>>;
  version?: InputMaybe<Scalars["Int"]>;
};

export type MutationEditSearchableFieldsArgs = {
  fields: Array<InputMaybe<Scalars["String"]>>;
};

export type MutationSendSearchInsightArgs = {
  uid_clicked?: InputMaybe<Scalars["String"]>;
  user?: InputMaybe<Scalars["String"]>;
};

export type MutationSetAccountConfigurationArgs = {
  account_config?: InputMaybe<AccountConfigInput>;
};

export type MutationSetObjectConfigurationArgs = {
  object: VisibleObjectTypes;
  object_config?: InputMaybe<ObjectConfigInput>;
};

export type MutationSetObjectTypeConfigurationArgs = {
  object_type: VisibleObjectTypes;
  object_type_config?: InputMaybe<ObjectConfigInput>;
};

export type MutationSetRelationshipConfigurationArgs = {
  object: ObjectTypes;
  relationship_config: RelationshipConfigInput;
  relationship_name: Scalars["String"];
};

export type MutationUpdateAvailabilityArgs = {
  availability: AvailabilityInput;
  external_id?: InputMaybe<Scalars["String"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateBrandArgs = {
  brand?: InputMaybe<BrandInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateCallToActionArgs = {
  call_to_action?: InputMaybe<CallToActionInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateCreditArgs = {
  credit?: InputMaybe<CreditInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateDimensionArgs = {
  dimension: UpdateDimensionInput;
  dimension_id?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateDimensionValueArgs = {
  dimension_id?: InputMaybe<Scalars["String"]>;
  dimension_value: UpdateDimensionInput;
  external_id?: InputMaybe<Scalars["String"]>;
  value_external_id?: InputMaybe<Scalars["String"]>;
  value_id?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateEpisodeArgs = {
  episode?: InputMaybe<EpisodeInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateGenreArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  genre?: InputMaybe<GenreInput>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateMovieArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  movie?: InputMaybe<MovieInput>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateParentalGuidanceArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  parental_guidance?: InputMaybe<ParentalGuidanceInput>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdatePersonArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  person?: InputMaybe<PersonInput>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateRatingArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  rating?: InputMaybe<RatingInput>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateRoleArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  role?: InputMaybe<RoleInput>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateSeasonArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  season?: InputMaybe<SeasonInput>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateSkylarkAssetArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  skylark_asset?: InputMaybe<SkylarkAssetInput>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateSkylarkEpgProgramArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  skylark_epg_program?: InputMaybe<SkylarkEpgProgramInput>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateSkylarkFavoriteListArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  skylark_favorite_list?: InputMaybe<SkylarkFavoriteListInput>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateSkylarkImageArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  skylark_image?: InputMaybe<SkylarkImageInput>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateSkylarkLiveStreamArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  skylark_live_stream?: InputMaybe<SkylarkLiveStreamInput>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateSkylarkSetArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  skylark_set?: InputMaybe<SkylarkSetInput>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateSkylarkTagArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  skylark_tag?: InputMaybe<SkylarkTagInput>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateThemeArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  theme?: InputMaybe<ThemeInput>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type ObjectConfig = {
  __typename?: "ObjectConfig";
  colour?: Maybe<Scalars["String"]>;
  display_name?: Maybe<Scalars["String"]>;
  field_config?: Maybe<Array<Maybe<FieldConfig>>>;
  primary_field?: Maybe<Scalars["String"]>;
};

export type ObjectConfigInput = {
  colour?: InputMaybe<Scalars["String"]>;
  display_name?: InputMaybe<Scalars["String"]>;
  field_config?: InputMaybe<Array<InputMaybe<FieldConfigInput>>>;
  primary_field?: InputMaybe<Scalars["String"]>;
};

export type ObjectDeleteResponse = {
  __typename?: "ObjectDeleteResponse";
  global_version?: Maybe<Scalars["String"]>;
  language?: Maybe<Scalars["String"]>;
  language_version?: Maybe<Scalars["String"]>;
  message?: Maybe<Scalars["String"]>;
  removed_relationships?: Maybe<Array<Maybe<Scalars["String"]>>>;
  uid: Scalars["String"];
};

export enum ObjectTypes {
  Brand = "Brand",
  CallToAction = "CallToAction",
  Credit = "Credit",
  Episode = "Episode",
  Genre = "Genre",
  Movie = "Movie",
  ParentalGuidance = "ParentalGuidance",
  Person = "Person",
  Rating = "Rating",
  Role = "Role",
  Season = "Season",
  SkylarkAsset = "SkylarkAsset",
  SkylarkFavoriteList = "SkylarkFavoriteList",
  SkylarkImage = "SkylarkImage",
  SkylarkSet = "SkylarkSet",
  SkylarkTag = "SkylarkTag",
  Theme = "Theme",
}

export enum OrderDirections {
  Asc = "ASC",
  Desc = "DESC",
}

export type ParentalGuidance = Metadata &
  VisibleObject & {
    __typename?: "ParentalGuidance";
    _config?: Maybe<ObjectConfig>;
    _context?: Maybe<RequestContext>;
    _meta?: Maybe<_ParentalGuidanceMeta>;
    availability?: Maybe<AvailabilityListing>;
    content_of?: Maybe<SetListing>;
    external_id?: Maybe<Scalars["String"]>;
    internal_title?: Maybe<Scalars["String"]>;
    ratings?: Maybe<RatingListing>;
    reason?: Maybe<Scalars["String"]>;
    reason_sort?: Maybe<Scalars["String"]>;
    slug?: Maybe<Scalars["String"]>;
    uid: Scalars["String"];
  };

export type ParentalGuidance_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type ParentalGuidanceAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type ParentalGuidanceContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type ParentalGuidanceRatingsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type ParentalGuidanceCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  internal_title?: InputMaybe<Scalars["String"]>;
  reason?: InputMaybe<Scalars["String"]>;
  reason_sort?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<ParentalGuidanceRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
};

export type ParentalGuidanceInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  internal_title?: InputMaybe<Scalars["String"]>;
  reason?: InputMaybe<Scalars["String"]>;
  reason_sort?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<ParentalGuidanceRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
};

export type ParentalGuidanceListing = Listing & {
  __typename?: "ParentalGuidanceListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<ParentalGuidance>>>;
};

export type ParentalGuidanceRelationshipInput = {
  config?: InputMaybe<RelationshipConfigInput>;
  create?: InputMaybe<Array<InputMaybe<ParentalGuidanceCreateInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type ParentalGuidanceRelationships = {
  ratings?: InputMaybe<RatingRelationshipInput>;
};

export type ParentalGuidanceSetCreate = {
  object?: InputMaybe<ParentalGuidanceInput>;
  position: Scalars["Int"];
};

export type ParentalGuidanceSetInput = {
  create?: InputMaybe<Array<InputMaybe<ParentalGuidanceSetCreate>>>;
  link?: InputMaybe<Array<InputMaybe<SetLink>>>;
  reposition?: InputMaybe<Array<InputMaybe<SetLink>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type Person = Metadata &
  VisibleObject & {
    __typename?: "Person";
    _config?: Maybe<ObjectConfig>;
    _context?: Maybe<RequestContext>;
    _meta?: Maybe<_PersonMeta>;
    abbreviation?: Maybe<Scalars["String"]>;
    alias?: Maybe<Scalars["String"]>;
    availability?: Maybe<AvailabilityListing>;
    bio_long?: Maybe<Scalars["String"]>;
    bio_medium?: Maybe<Scalars["String"]>;
    bio_short?: Maybe<Scalars["String"]>;
    content_of?: Maybe<SetListing>;
    credits?: Maybe<CreditListing>;
    date_of_birth?: Maybe<Scalars["AWSDate"]>;
    external_id?: Maybe<Scalars["String"]>;
    genre?: Maybe<Scalars["String"]>;
    genres?: Maybe<GenreListing>;
    images?: Maybe<SkylarkImageListing>;
    name?: Maybe<Scalars["String"]>;
    name_sort?: Maybe<Scalars["String"]>;
    place_of_birth?: Maybe<Scalars["AWSDate"]>;
    slug?: Maybe<Scalars["String"]>;
    tags?: Maybe<SkylarkTagListing>;
    themes?: Maybe<ThemeListing>;
    uid: Scalars["String"];
  };

export type Person_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type PersonAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type PersonContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type PersonCreditsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type PersonGenresArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type PersonImagesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type PersonTagsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type PersonThemesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type PersonCreateInput = {
  abbreviation?: InputMaybe<Scalars["String"]>;
  alias?: InputMaybe<Scalars["String"]>;
  availability?: InputMaybe<AssignAvailabilityInput>;
  bio_long?: InputMaybe<Scalars["String"]>;
  bio_medium?: InputMaybe<Scalars["String"]>;
  bio_short?: InputMaybe<Scalars["String"]>;
  date_of_birth?: InputMaybe<Scalars["AWSDate"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  genre?: InputMaybe<Scalars["String"]>;
  name?: InputMaybe<Scalars["String"]>;
  name_sort?: InputMaybe<Scalars["String"]>;
  place_of_birth?: InputMaybe<Scalars["AWSDate"]>;
  relationships?: InputMaybe<PersonRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
};

export type PersonInput = {
  abbreviation?: InputMaybe<Scalars["String"]>;
  alias?: InputMaybe<Scalars["String"]>;
  availability?: InputMaybe<AssignAvailabilityInput>;
  bio_long?: InputMaybe<Scalars["String"]>;
  bio_medium?: InputMaybe<Scalars["String"]>;
  bio_short?: InputMaybe<Scalars["String"]>;
  date_of_birth?: InputMaybe<Scalars["AWSDate"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  genre?: InputMaybe<Scalars["String"]>;
  name?: InputMaybe<Scalars["String"]>;
  name_sort?: InputMaybe<Scalars["String"]>;
  place_of_birth?: InputMaybe<Scalars["AWSDate"]>;
  relationships?: InputMaybe<PersonRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
};

export type PersonListing = Listing & {
  __typename?: "PersonListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<Person>>>;
};

export type PersonRelationshipInput = {
  config?: InputMaybe<RelationshipConfigInput>;
  create?: InputMaybe<Array<InputMaybe<PersonCreateInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type PersonRelationships = {
  credits?: InputMaybe<CreditRelationshipInput>;
  genres?: InputMaybe<GenreRelationshipInput>;
  images?: InputMaybe<SkylarkImageRelationshipInput>;
  tags?: InputMaybe<SkylarkTagRelationshipInput>;
  themes?: InputMaybe<ThemeRelationshipInput>;
};

export type PersonSetCreate = {
  object?: InputMaybe<PersonInput>;
  position: Scalars["Int"];
};

export type PersonSetInput = {
  create?: InputMaybe<Array<InputMaybe<PersonSetCreate>>>;
  link?: InputMaybe<Array<InputMaybe<SetLink>>>;
  reposition?: InputMaybe<Array<InputMaybe<SetLink>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export enum PlaybackParentObjectTypes {
  SkylarkAsset = "SkylarkAsset",
  SkylarkEpgProgram = "SkylarkEPGProgram",
  SkylarkLiveStream = "SkylarkLiveStream",
}

export type PlaybackUrl = {
  __typename?: "PlaybackUrl";
  url?: Maybe<Scalars["String"]>;
  url_type?: Maybe<Scalars["String"]>;
};

export enum PublishStage {
  Archive = "ARCHIVE",
  Preview = "PREVIEW",
  Prod = "PROD",
}

export type Query = {
  __typename?: "Query";
  getAccount?: Maybe<AccountDetails>;
  getActivationStatus?: Maybe<ActivationStatus>;
  getAvailability?: Maybe<Availability>;
  getBrand?: Maybe<Brand>;
  getCallToAction?: Maybe<CallToAction>;
  getConfigurationSchema?: Maybe<Scalars["AWSJSON"]>;
  getConfigurationVersion?: Maybe<SchemaConfiguration>;
  getCredit?: Maybe<Credit>;
  getDimension?: Maybe<Dimension>;
  getDimensionCode?: Maybe<Scalars["String"]>;
  getEpisode?: Maybe<Episode>;
  getGenre?: Maybe<Genre>;
  getMovie?: Maybe<Movie>;
  /** @deprecated Replaced with 'getObjectTypeConfiguration' */
  getObjectConfiguration?: Maybe<ObjectConfig>;
  getObjectTypeConfiguration?: Maybe<ObjectConfig>;
  getParentalGuidance?: Maybe<ParentalGuidance>;
  getPerson?: Maybe<Person>;
  getRating?: Maybe<Rating>;
  getRole?: Maybe<Role>;
  getSearchableFields?: Maybe<Array<Maybe<Scalars["String"]>>>;
  getSeason?: Maybe<Season>;
  getSkylarkAsset?: Maybe<SkylarkAsset>;
  getSkylarkBackgroundTask?: Maybe<SkylarkBackgroundTask>;
  getSkylarkEPGProgram?: Maybe<SkylarkEpgProgram>;
  getSkylarkFavoriteList?: Maybe<SkylarkFavoriteList>;
  getSkylarkImage?: Maybe<SkylarkImage>;
  getSkylarkLiveStream?: Maybe<SkylarkLiveStream>;
  getSkylarkSet?: Maybe<SkylarkSet>;
  getSkylarkTag?: Maybe<SkylarkTag>;
  getTheme?: Maybe<Theme>;
  getUser?: Maybe<UserDetails>;
  listAvailability?: Maybe<AvailabilityListing>;
  listBrand?: Maybe<BrandListing>;
  listCallToAction?: Maybe<CallToActionListing>;
  listConfigurationVersions?: Maybe<SchemaConfigurationListing>;
  listCredit?: Maybe<CreditListing>;
  listDimensions?: Maybe<DimensionListing>;
  listEpisode?: Maybe<EpisodeListing>;
  listGenre?: Maybe<GenreListing>;
  listMovie?: Maybe<MovieListing>;
  listParentalGuidance?: Maybe<ParentalGuidanceListing>;
  listPerson?: Maybe<PersonListing>;
  listRating?: Maybe<RatingListing>;
  listRole?: Maybe<RoleListing>;
  listSeason?: Maybe<SeasonListing>;
  listSkylarkAsset?: Maybe<SkylarkAssetListing>;
  listSkylarkBackgroundTask?: Maybe<SkylarkBackgroundTaskListing>;
  listSkylarkEPGProgram?: Maybe<SkylarkEpgProgramListing>;
  listSkylarkImage?: Maybe<SkylarkImageListing>;
  listSkylarkLiveStream?: Maybe<SkylarkLiveStreamListing>;
  listSkylarkSet?: Maybe<SkylarkSetListing>;
  listSkylarkTag?: Maybe<SkylarkTagListing>;
  listTheme?: Maybe<ThemeListing>;
  search?: Maybe<SearchResultListing>;
};

export type QueryGetAvailabilityArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetBrandArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetCallToActionArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetConfigurationSchemaArgs = {
  query?: InputMaybe<Scalars["String"]>;
  version: Scalars["Int"];
};

export type QueryGetConfigurationVersionArgs = {
  version: Scalars["Int"];
};

export type QueryGetCreditArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetDimensionArgs = {
  dimension_id?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
};

export type QueryGetDimensionCodeArgs = {
  dimensions: Array<InputMaybe<UserDimension>>;
};

export type QueryGetEpisodeArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetGenreArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetMovieArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetObjectConfigurationArgs = {
  object: VisibleObjectTypes;
};

export type QueryGetObjectTypeConfigurationArgs = {
  object_type: VisibleObjectTypes;
};

export type QueryGetParentalGuidanceArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetPersonArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetRatingArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetRoleArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetSeasonArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetSkylarkAssetArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetSkylarkBackgroundTaskArgs = {
  task_id: Scalars["String"];
};

export type QueryGetSkylarkEpgProgramArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetSkylarkFavoriteListArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetSkylarkImageArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetSkylarkLiveStreamArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetSkylarkSetArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetSkylarkTagArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetThemeArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryListAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type QueryListBrandArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type QueryListCallToActionArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type QueryListCreditArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type QueryListDimensionsArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type QueryListEpisodeArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type QueryListGenreArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type QueryListMovieArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type QueryListParentalGuidanceArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type QueryListPersonArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type QueryListRatingArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type QueryListRoleArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type QueryListSeasonArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type QueryListSkylarkAssetArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type QueryListSkylarkBackgroundTaskArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order?: InputMaybe<OrderDirections>;
  status?: InputMaybe<SkylarkBackgroundTaskStatus>;
};

export type QueryListSkylarkEpgProgramArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type QueryListSkylarkImageArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type QueryListSkylarkLiveStreamArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type QueryListSkylarkSetArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type QueryListSkylarkTagArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type QueryListThemeArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type QuerySearchArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  highlight_results?: InputMaybe<Scalars["Boolean"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  limit_search_fields?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  offset?: InputMaybe<Scalars["Int"]>;
  query: Scalars["String"];
  types?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  typo_tolerance?: InputMaybe<TypoTolerance>;
};

export type Rating = Metadata &
  VisibleObject & {
    __typename?: "Rating";
    _config?: Maybe<ObjectConfig>;
    _context?: Maybe<RequestContext>;
    _meta?: Maybe<_RatingMeta>;
    assets?: Maybe<SkylarkAssetListing>;
    availability?: Maybe<AvailabilityListing>;
    brands?: Maybe<BrandListing>;
    content_of?: Maybe<SetListing>;
    description?: Maybe<Scalars["String"]>;
    episodes?: Maybe<EpisodeListing>;
    external_id?: Maybe<Scalars["String"]>;
    images?: Maybe<SkylarkImageListing>;
    internal_title?: Maybe<Scalars["String"]>;
    movies?: Maybe<MovieListing>;
    parental_guidance?: Maybe<ParentalGuidanceListing>;
    schema?: Maybe<Scalars["String"]>;
    seasons?: Maybe<SeasonListing>;
    sets?: Maybe<SkylarkSetListing>;
    slug?: Maybe<Scalars["String"]>;
    title?: Maybe<Scalars["String"]>;
    uid: Scalars["String"];
    value?: Maybe<Scalars["String"]>;
  };

export type Rating_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type RatingAssetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type RatingAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type RatingBrandsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type RatingContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type RatingEpisodesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type RatingImagesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type RatingMoviesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type RatingParental_GuidanceArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type RatingSeasonsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type RatingSetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type RatingCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  description?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  internal_title?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<RatingRelationships>;
  schema?: InputMaybe<Scalars["String"]>;
  slug?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  value?: InputMaybe<Scalars["String"]>;
};

export type RatingInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  description?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  internal_title?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<RatingRelationships>;
  schema?: InputMaybe<Scalars["String"]>;
  slug?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  value?: InputMaybe<Scalars["String"]>;
};

export type RatingListing = Listing & {
  __typename?: "RatingListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<Rating>>>;
};

export type RatingRelationshipInput = {
  config?: InputMaybe<RelationshipConfigInput>;
  create?: InputMaybe<Array<InputMaybe<RatingCreateInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type RatingRelationships = {
  assets?: InputMaybe<SkylarkAssetRelationshipInput>;
  brands?: InputMaybe<BrandRelationshipInput>;
  episodes?: InputMaybe<EpisodeRelationshipInput>;
  images?: InputMaybe<SkylarkImageRelationshipInput>;
  movies?: InputMaybe<MovieRelationshipInput>;
  parental_guidance?: InputMaybe<ParentalGuidanceRelationshipInput>;
  seasons?: InputMaybe<SeasonRelationshipInput>;
  sets?: InputMaybe<SkylarkSetRelationshipInput>;
};

export type RatingSetCreate = {
  object?: InputMaybe<RatingInput>;
  position: Scalars["Int"];
};

export type RatingSetInput = {
  create?: InputMaybe<Array<InputMaybe<RatingSetCreate>>>;
  link?: InputMaybe<Array<InputMaybe<SetLink>>>;
  reposition?: InputMaybe<Array<InputMaybe<SetLink>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type RelationshipConfig = {
  __typename?: "RelationshipConfig";
  default_sort_field?: Maybe<Scalars["String"]>;
};

export type RelationshipConfigInput = {
  default_sort_field?: InputMaybe<Scalars["String"]>;
};

export type RelativeTimes = {
  days?: InputMaybe<Scalars["Int"]>;
  hours?: InputMaybe<Scalars["Int"]>;
  minutes?: InputMaybe<Scalars["Int"]>;
  months?: InputMaybe<Scalars["Int"]>;
  seconds?: InputMaybe<Scalars["Int"]>;
  weeks?: InputMaybe<Scalars["Int"]>;
  years?: InputMaybe<Scalars["Int"]>;
};

export type RequestContext = {
  __typename?: "RequestContext";
  task_id?: Maybe<Scalars["String"]>;
  typename_highlight?: Maybe<Scalars["String"]>;
};

export type Role = Metadata &
  VisibleObject & {
    __typename?: "Role";
    _config?: Maybe<ObjectConfig>;
    _context?: Maybe<RequestContext>;
    _meta?: Maybe<_RoleMeta>;
    availability?: Maybe<AvailabilityListing>;
    content_of?: Maybe<SetListing>;
    credits?: Maybe<CreditListing>;
    external_id?: Maybe<Scalars["String"]>;
    internal_title?: Maybe<Scalars["String"]>;
    slug?: Maybe<Scalars["String"]>;
    title?: Maybe<Scalars["String"]>;
    title_sort?: Maybe<Scalars["String"]>;
    uid: Scalars["String"];
  };

export type Role_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type RoleAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type RoleContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type RoleCreditsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type RoleCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  internal_title?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<RoleRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  title_sort?: InputMaybe<Scalars["String"]>;
};

export type RoleInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  internal_title?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<RoleRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  title_sort?: InputMaybe<Scalars["String"]>;
};

export type RoleListing = Listing & {
  __typename?: "RoleListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<Role>>>;
};

export type RoleRelationshipInput = {
  config?: InputMaybe<RelationshipConfigInput>;
  create?: InputMaybe<Array<InputMaybe<RoleCreateInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type RoleRelationships = {
  credits?: InputMaybe<CreditRelationshipInput>;
};

export type RoleSetCreate = {
  object?: InputMaybe<RoleInput>;
  position: Scalars["Int"];
};

export type RoleSetInput = {
  create?: InputMaybe<Array<InputMaybe<RoleSetCreate>>>;
  link?: InputMaybe<Array<InputMaybe<SetLink>>>;
  reposition?: InputMaybe<Array<InputMaybe<SetLink>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type SchemaConfigEnumListing = {
  __typename?: "SchemaConfigEnumListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<SchemaConfigurationEnum>>>;
};

export type SchemaConfigFieldListing = {
  __typename?: "SchemaConfigFieldListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<SchemaConfigurationField>>>;
};

export type SchemaConfigObjectListing = {
  __typename?: "SchemaConfigObjectListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<SchemaConfigurationObject>>>;
};

export type SchemaConfigRelationshipListing = {
  __typename?: "SchemaConfigRelationshipListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<SchemaConfigurationRelationship>>>;
};

export type SchemaConfiguration = {
  __typename?: "SchemaConfiguration";
  active?: Maybe<Scalars["Boolean"]>;
  base_version?: Maybe<Scalars["Int"]>;
  configured_objects?: Maybe<SchemaConfigObjectListing>;
  enums?: Maybe<SchemaConfigEnumListing>;
  published?: Maybe<Scalars["Boolean"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type SchemaConfigurationConfigured_ObjectsArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  object_name?: InputMaybe<Scalars["String"]>;
};

export type SchemaConfigurationEnumsArgs = {
  enum_name?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SchemaConfigurationEnum = {
  __typename?: "SchemaConfigurationEnum";
  name?: Maybe<Scalars["String"]>;
  values?: Maybe<Array<Maybe<Scalars["String"]>>>;
};

export type SchemaConfigurationField = {
  __typename?: "SchemaConfigurationField";
  enum_name?: Maybe<Scalars["String"]>;
  is_translatable?: Maybe<Scalars["Boolean"]>;
  name?: Maybe<Scalars["String"]>;
  operation?: Maybe<Scalars["String"]>;
  required?: Maybe<Scalars["Boolean"]>;
  type?: Maybe<Scalars["String"]>;
};

export type SchemaConfigurationListing = {
  __typename?: "SchemaConfigurationListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<SchemaConfiguration>>>;
};

export type SchemaConfigurationObject = {
  __typename?: "SchemaConfigurationObject";
  fields?: Maybe<SchemaConfigFieldListing>;
  name?: Maybe<Scalars["String"]>;
  operation?: Maybe<Scalars["String"]>;
  relationships?: Maybe<SchemaConfigRelationshipListing>;
};

export type SchemaConfigurationObjectFieldsArgs = {
  field_name?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SchemaConfigurationObjectRelationshipsArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  relationship_name?: InputMaybe<Scalars["String"]>;
};

export type SchemaConfigurationRelationship = {
  __typename?: "SchemaConfigurationRelationship";
  from_class?: Maybe<Scalars["String"]>;
  operation?: Maybe<Scalars["String"]>;
  relationship_name?: Maybe<Scalars["String"]>;
  reverse_relationship_name?: Maybe<Scalars["String"]>;
  to_class?: Maybe<Scalars["String"]>;
};

export type SearchListing = {
  count?: Maybe<Scalars["Int"]>;
};

export type SearchResultListing = SearchListing & {
  __typename?: "SearchResultListing";
  count?: Maybe<Scalars["Int"]>;
  objects?: Maybe<Array<Maybe<VisibleObject>>>;
  total_count?: Maybe<Scalars["Int"]>;
};

export type Season = Metadata &
  VisibleObject & {
    __typename?: "Season";
    _config?: Maybe<ObjectConfig>;
    _context?: Maybe<RequestContext>;
    _meta?: Maybe<_SeasonMeta>;
    assets?: Maybe<SkylarkAssetListing>;
    availability?: Maybe<AvailabilityListing>;
    brands?: Maybe<BrandListing>;
    call_to_actions?: Maybe<CallToActionListing>;
    content_of?: Maybe<SetListing>;
    credits?: Maybe<CreditListing>;
    episodes?: Maybe<EpisodeListing>;
    external_id?: Maybe<Scalars["String"]>;
    genres?: Maybe<GenreListing>;
    images?: Maybe<SkylarkImageListing>;
    internal_title?: Maybe<Scalars["String"]>;
    number_of_episodes?: Maybe<Scalars["Int"]>;
    preferred_image_type?: Maybe<Scalars["String"]>;
    ratings?: Maybe<RatingListing>;
    release_date?: Maybe<Scalars["AWSDate"]>;
    season_number?: Maybe<Scalars["Int"]>;
    slug?: Maybe<Scalars["String"]>;
    synopsis?: Maybe<Scalars["String"]>;
    synopsis_short?: Maybe<Scalars["String"]>;
    tags?: Maybe<SkylarkTagListing>;
    themes?: Maybe<ThemeListing>;
    title?: Maybe<Scalars["String"]>;
    title_short?: Maybe<Scalars["String"]>;
    title_sort?: Maybe<Scalars["String"]>;
    uid: Scalars["String"];
    year_of_release?: Maybe<Scalars["Int"]>;
  };

export type Season_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type SeasonAssetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SeasonAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SeasonBrandsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SeasonCall_To_ActionsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SeasonContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SeasonCreditsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SeasonEpisodesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SeasonGenresArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SeasonImagesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SeasonRatingsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SeasonTagsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SeasonThemesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SeasonCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  internal_title?: InputMaybe<Scalars["String"]>;
  number_of_episodes?: InputMaybe<Scalars["Int"]>;
  preferred_image_type?: InputMaybe<ImageType>;
  relationships?: InputMaybe<SeasonRelationships>;
  release_date?: InputMaybe<Scalars["AWSDate"]>;
  season_number?: InputMaybe<Scalars["Int"]>;
  slug?: InputMaybe<Scalars["String"]>;
  synopsis?: InputMaybe<Scalars["String"]>;
  synopsis_short?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  title_short?: InputMaybe<Scalars["String"]>;
  title_sort?: InputMaybe<Scalars["String"]>;
  year_of_release?: InputMaybe<Scalars["Int"]>;
};

export type SeasonInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  internal_title?: InputMaybe<Scalars["String"]>;
  number_of_episodes?: InputMaybe<Scalars["Int"]>;
  preferred_image_type?: InputMaybe<ImageType>;
  relationships?: InputMaybe<SeasonRelationships>;
  release_date?: InputMaybe<Scalars["AWSDate"]>;
  season_number?: InputMaybe<Scalars["Int"]>;
  slug?: InputMaybe<Scalars["String"]>;
  synopsis?: InputMaybe<Scalars["String"]>;
  synopsis_short?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  title_short?: InputMaybe<Scalars["String"]>;
  title_sort?: InputMaybe<Scalars["String"]>;
  year_of_release?: InputMaybe<Scalars["Int"]>;
};

export type SeasonListing = Listing & {
  __typename?: "SeasonListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<Season>>>;
};

export type SeasonRelationshipInput = {
  config?: InputMaybe<RelationshipConfigInput>;
  create?: InputMaybe<Array<InputMaybe<SeasonCreateInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type SeasonRelationships = {
  assets?: InputMaybe<SkylarkAssetRelationshipInput>;
  brands?: InputMaybe<BrandRelationshipInput>;
  call_to_actions?: InputMaybe<CallToActionRelationshipInput>;
  credits?: InputMaybe<CreditRelationshipInput>;
  episodes?: InputMaybe<EpisodeRelationshipInput>;
  genres?: InputMaybe<GenreRelationshipInput>;
  images?: InputMaybe<SkylarkImageRelationshipInput>;
  ratings?: InputMaybe<RatingRelationshipInput>;
  tags?: InputMaybe<SkylarkTagRelationshipInput>;
  themes?: InputMaybe<ThemeRelationshipInput>;
};

export type SeasonSetCreate = {
  object?: InputMaybe<SeasonInput>;
  position: Scalars["Int"];
};

export type SeasonSetInput = {
  create?: InputMaybe<Array<InputMaybe<SeasonSetCreate>>>;
  link?: InputMaybe<Array<InputMaybe<SetLink>>>;
  reposition?: InputMaybe<Array<InputMaybe<SetLink>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type Set = {
  content?: Maybe<MetadataListing>;
};

export type SetContentArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order?: InputMaybe<OrderDirections>;
};

export type SetContent = {
  __typename?: "SetContent";
  object?: Maybe<Metadata>;
  position?: Maybe<Scalars["Int"]>;
};

export type SetContentRelationships = {
  Brand?: InputMaybe<BrandSetInput>;
  CallToAction?: InputMaybe<CallToActionSetInput>;
  Credit?: InputMaybe<CreditSetInput>;
  Episode?: InputMaybe<EpisodeSetInput>;
  Genre?: InputMaybe<GenreSetInput>;
  Movie?: InputMaybe<MovieSetInput>;
  ParentalGuidance?: InputMaybe<ParentalGuidanceSetInput>;
  Person?: InputMaybe<PersonSetInput>;
  Rating?: InputMaybe<RatingSetInput>;
  Role?: InputMaybe<RoleSetInput>;
  Season?: InputMaybe<SeasonSetInput>;
  SkylarkAsset?: InputMaybe<SkylarkAssetSetInput>;
  SkylarkEPGProgram?: InputMaybe<SkylarkEpgProgramSetInput>;
  SkylarkFavoriteList?: InputMaybe<SkylarkFavoriteListSetInput>;
  SkylarkImage?: InputMaybe<SkylarkImageSetInput>;
  SkylarkLiveStream?: InputMaybe<SkylarkLiveStreamSetInput>;
  SkylarkSet?: InputMaybe<SubSkylarkSetInput>;
  SkylarkTag?: InputMaybe<SkylarkTagSetInput>;
  Theme?: InputMaybe<ThemeSetInput>;
};

export type SetLink = {
  position: Scalars["Int"];
  uid: Scalars["String"];
};

export type SetListing = {
  __typename?: "SetListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<Set>>>;
};

export enum SetType {
  Collection = "COLLECTION",
  Grid = "GRID",
  Page = "PAGE",
  Rail = "RAIL",
  RailInset = "RAIL_INSET",
  RailMovie = "RAIL_MOVIE",
  RailPortrait = "RAIL_PORTRAIT",
  RailWithSynopsis = "RAIL_WITH_SYNOPSIS",
  Slider = "SLIDER",
}

export type SkylarkAsset = Metadata &
  VisibleObject & {
    __typename?: "SkylarkAsset";
    _config?: Maybe<ObjectConfig>;
    _context?: Maybe<RequestContext>;
    _meta?: Maybe<_SkylarkAssetMeta>;
    availability?: Maybe<AvailabilityListing>;
    brands?: Maybe<BrandListing>;
    content_of?: Maybe<SetListing>;
    duration?: Maybe<Scalars["Int"]>;
    episodes?: Maybe<EpisodeListing>;
    external_id?: Maybe<Scalars["String"]>;
    images?: Maybe<SkylarkImageListing>;
    ingest_file?: Maybe<Scalars["String"]>;
    internal_title?: Maybe<Scalars["String"]>;
    movies?: Maybe<MovieListing>;
    ratings?: Maybe<RatingListing>;
    release_date?: Maybe<Scalars["String"]>;
    seasons?: Maybe<SeasonListing>;
    sets?: Maybe<SkylarkSetListing>;
    slug?: Maybe<Scalars["String"]>;
    tags?: Maybe<SkylarkTagListing>;
    title?: Maybe<Scalars["String"]>;
    title_sort?: Maybe<Scalars["String"]>;
    type?: Maybe<Scalars["String"]>;
    uid: Scalars["String"];
    url?: Maybe<Scalars["String"]>;
  };

export type SkylarkAsset_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type SkylarkAssetAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkAssetBrandsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkAssetContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkAssetEpisodesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkAssetImagesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkAssetMoviesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkAssetRatingsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkAssetSeasonsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkAssetSetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkAssetTagsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkAssetCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  duration?: InputMaybe<Scalars["Int"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  ingest_file?: InputMaybe<Scalars["String"]>;
  internal_title?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkAssetRelationships>;
  release_date?: InputMaybe<Scalars["AWSDate"]>;
  slug?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  title_sort?: InputMaybe<Scalars["String"]>;
  type?: InputMaybe<AssetType>;
  url?: InputMaybe<Scalars["AWSURL"]>;
};

export type SkylarkAssetInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  duration?: InputMaybe<Scalars["Int"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  ingest_file?: InputMaybe<Scalars["String"]>;
  internal_title?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkAssetRelationships>;
  release_date?: InputMaybe<Scalars["AWSDate"]>;
  slug?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  title_sort?: InputMaybe<Scalars["String"]>;
  type?: InputMaybe<AssetType>;
  url?: InputMaybe<Scalars["AWSURL"]>;
};

export type SkylarkAssetListing = Listing & {
  __typename?: "SkylarkAssetListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<SkylarkAsset>>>;
};

export type SkylarkAssetRelationshipInput = {
  create?: InputMaybe<Array<InputMaybe<SkylarkAssetInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type SkylarkAssetRelationships = {
  brands?: InputMaybe<BrandRelationshipInput>;
  episodes?: InputMaybe<EpisodeRelationshipInput>;
  images?: InputMaybe<SkylarkImageRelationshipInput>;
  movies?: InputMaybe<MovieRelationshipInput>;
  ratings?: InputMaybe<RatingRelationshipInput>;
  seasons?: InputMaybe<SeasonRelationshipInput>;
  sets?: InputMaybe<SkylarkSetRelationshipInput>;
  tags?: InputMaybe<SkylarkTagRelationshipInput>;
};

export type SkylarkAssetSetCreate = {
  object?: InputMaybe<SkylarkAssetInput>;
  position: Scalars["Int"];
};

export type SkylarkAssetSetInput = {
  create?: InputMaybe<Array<InputMaybe<SkylarkAssetSetCreate>>>;
  link?: InputMaybe<Array<InputMaybe<SetLink>>>;
  reposition?: InputMaybe<Array<InputMaybe<SetLink>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type SkylarkBackgroundTask = {
  __typename?: "SkylarkBackgroundTask";
  created_at?: Maybe<Scalars["String"]>;
  messages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  object_uid?: Maybe<Scalars["String"]>;
  status?: Maybe<SkylarkBackgroundTaskStatus>;
  task_id?: Maybe<Scalars["String"]>;
  task_type?: Maybe<Scalars["String"]>;
  updated_at?: Maybe<Scalars["String"]>;
};

export type SkylarkBackgroundTaskListing = {
  __typename?: "SkylarkBackgroundTaskListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<SkylarkBackgroundTask>>>;
};

export enum SkylarkBackgroundTaskStatus {
  Complete = "COMPLETE",
  Failed = "FAILED",
  InProgress = "IN_PROGRESS",
  Queued = "QUEUED",
}

export type SkylarkEpgProgram = Metadata &
  VisibleObject & {
    __typename?: "SkylarkEPGProgram";
    _config?: Maybe<ObjectConfig>;
    _context?: Maybe<RequestContext>;
    _meta?: Maybe<_SkylarkEpgProgramMeta>;
    availability?: Maybe<AvailabilityListing>;
    content_of?: Maybe<SetListing>;
    external_id?: Maybe<Scalars["String"]>;
    images?: Maybe<SkylarkImageListing>;
    internal_title?: Maybe<Scalars["String"]>;
    live_streams?: Maybe<SkylarkLiveStreamListing>;
    name?: Maybe<Scalars["String"]>;
    name_sort?: Maybe<Scalars["String"]>;
    slug?: Maybe<Scalars["String"]>;
    tags?: Maybe<SkylarkTagListing>;
    uid: Scalars["String"];
    url?: Maybe<Scalars["String"]>;
  };

export type SkylarkEpgProgram_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type SkylarkEpgProgramAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkEpgProgramContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkEpgProgramImagesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkEpgProgramLive_StreamsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkEpgProgramTagsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkEpgProgramCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  internal_title?: InputMaybe<Scalars["String"]>;
  name?: InputMaybe<Scalars["String"]>;
  name_sort?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkEpgProgramRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  url?: InputMaybe<Scalars["AWSURL"]>;
};

export type SkylarkEpgProgramInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  internal_title?: InputMaybe<Scalars["String"]>;
  name?: InputMaybe<Scalars["String"]>;
  name_sort?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkEpgProgramRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  url?: InputMaybe<Scalars["AWSURL"]>;
};

export type SkylarkEpgProgramListing = Listing & {
  __typename?: "SkylarkEPGProgramListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<SkylarkEpgProgram>>>;
};

export type SkylarkEpgProgramRelationshipInput = {
  create?: InputMaybe<Array<InputMaybe<SkylarkEpgProgramInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type SkylarkEpgProgramRelationships = {
  images?: InputMaybe<SkylarkImageRelationshipInput>;
  live_streams?: InputMaybe<SkylarkLiveStreamRelationshipInput>;
  tags?: InputMaybe<SkylarkTagRelationshipInput>;
};

export type SkylarkEpgProgramSetCreate = {
  object?: InputMaybe<SkylarkEpgProgramInput>;
  position: Scalars["Int"];
};

export type SkylarkEpgProgramSetInput = {
  create?: InputMaybe<Array<InputMaybe<SkylarkEpgProgramSetCreate>>>;
  link?: InputMaybe<Array<InputMaybe<SetLink>>>;
  reposition?: InputMaybe<Array<InputMaybe<SetLink>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type SkylarkFavoriteList = HiddenObject &
  Metadata &
  Set & {
    __typename?: "SkylarkFavoriteList";
    _config?: Maybe<ObjectConfig>;
    _context?: Maybe<RequestContext>;
    _meta?: Maybe<_SkylarkTagMeta>;
    availability?: Maybe<AvailabilityListing>;
    content?: Maybe<MetadataListing>;
    content_of?: Maybe<SetListing>;
    external_id?: Maybe<Scalars["String"]>;
    slug?: Maybe<Scalars["String"]>;
    uid: Scalars["String"];
  };

export type SkylarkFavoriteList_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type SkylarkFavoriteListAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkFavoriteListContentArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order?: InputMaybe<OrderDirections>;
};

export type SkylarkFavoriteListContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkFavoriteListCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  content?: InputMaybe<SetContentRelationships>;
  external_id?: InputMaybe<Scalars["String"]>;
  slug?: InputMaybe<Scalars["String"]>;
};

export type SkylarkFavoriteListInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  content?: InputMaybe<SetContentRelationships>;
  external_id?: InputMaybe<Scalars["String"]>;
  slug?: InputMaybe<Scalars["String"]>;
};

export type SkylarkFavoriteListSetCreate = {
  object?: InputMaybe<SkylarkFavoriteListInput>;
  position: Scalars["Int"];
};

export type SkylarkFavoriteListSetInput = {
  create?: InputMaybe<Array<InputMaybe<SkylarkFavoriteListSetCreate>>>;
  link?: InputMaybe<Array<InputMaybe<SetLink>>>;
  reposition?: InputMaybe<Array<InputMaybe<SetLink>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type SkylarkImage = MediaFile &
  Metadata &
  VisibleObject & {
    __typename?: "SkylarkImage";
    _config?: Maybe<ObjectConfig>;
    _context?: Maybe<RequestContext>;
    _meta?: Maybe<_SkylarkImageMeta>;
    alt_text?: Maybe<Scalars["String"]>;
    assets?: Maybe<SkylarkAssetListing>;
    availability?: Maybe<AvailabilityListing>;
    brands?: Maybe<BrandListing>;
    call_to_actions?: Maybe<CallToActionListing>;
    content_of?: Maybe<SetListing>;
    content_type?: Maybe<Scalars["String"]>;
    description?: Maybe<Scalars["String"]>;
    download_from_url?: Maybe<Scalars["String"]>;
    epg_programs?: Maybe<SkylarkEpgProgramListing>;
    episodes?: Maybe<EpisodeListing>;
    external_id?: Maybe<Scalars["String"]>;
    external_url?: Maybe<Scalars["String"]>;
    file_name?: Maybe<Scalars["String"]>;
    genres?: Maybe<GenreListing>;
    internal_title?: Maybe<Scalars["String"]>;
    live_streams?: Maybe<SkylarkLiveStreamListing>;
    movies?: Maybe<MovieListing>;
    people?: Maybe<PersonListing>;
    ratings?: Maybe<RatingListing>;
    seasons?: Maybe<SeasonListing>;
    sets?: Maybe<SkylarkSetListing>;
    slug?: Maybe<Scalars["String"]>;
    tags?: Maybe<SkylarkTagListing>;
    themes?: Maybe<ThemeListing>;
    title?: Maybe<Scalars["String"]>;
    type?: Maybe<Scalars["String"]>;
    uid: Scalars["String"];
    upload_url?: Maybe<Scalars["String"]>;
    url?: Maybe<Scalars["String"]>;
  };

export type SkylarkImage_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type SkylarkImageAssetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkImageAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkImageBrandsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkImageCall_To_ActionsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkImageContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkImageEpg_ProgramsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkImageEpisodesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkImageGenresArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkImageLive_StreamsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkImageMoviesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkImagePeopleArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkImageRatingsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkImageSeasonsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkImageSetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkImageTagsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkImageThemesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkImageCreateInput = {
  alt_text?: InputMaybe<Scalars["String"]>;
  availability?: InputMaybe<AssignAvailabilityInput>;
  content_type?: InputMaybe<Scalars["String"]>;
  description?: InputMaybe<Scalars["String"]>;
  download_from_url?: InputMaybe<Scalars["AWSURL"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  external_url?: InputMaybe<Scalars["AWSURL"]>;
  file_name?: InputMaybe<Scalars["String"]>;
  internal_title?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkImageRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  type?: InputMaybe<ImageType>;
};

export type SkylarkImageInput = {
  alt_text?: InputMaybe<Scalars["String"]>;
  availability?: InputMaybe<AssignAvailabilityInput>;
  content_type?: InputMaybe<Scalars["String"]>;
  description?: InputMaybe<Scalars["String"]>;
  download_from_url?: InputMaybe<Scalars["AWSURL"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  external_url?: InputMaybe<Scalars["AWSURL"]>;
  file_name?: InputMaybe<Scalars["String"]>;
  internal_title?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkImageRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  type?: InputMaybe<ImageType>;
};

export type SkylarkImageListing = Listing & {
  __typename?: "SkylarkImageListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<SkylarkImage>>>;
};

export type SkylarkImageRelationshipInput = {
  create?: InputMaybe<Array<InputMaybe<SkylarkImageInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type SkylarkImageRelationships = {
  assets?: InputMaybe<SkylarkAssetRelationshipInput>;
  brands?: InputMaybe<BrandRelationshipInput>;
  call_to_actions?: InputMaybe<CallToActionRelationshipInput>;
  epg_programs?: InputMaybe<SkylarkEpgProgramRelationshipInput>;
  episodes?: InputMaybe<EpisodeRelationshipInput>;
  genres?: InputMaybe<GenreRelationshipInput>;
  live_streams?: InputMaybe<SkylarkLiveStreamRelationshipInput>;
  movies?: InputMaybe<MovieRelationshipInput>;
  people?: InputMaybe<PersonRelationshipInput>;
  ratings?: InputMaybe<RatingRelationshipInput>;
  seasons?: InputMaybe<SeasonRelationshipInput>;
  sets?: InputMaybe<SkylarkSetRelationshipInput>;
  tags?: InputMaybe<SkylarkTagRelationshipInput>;
  themes?: InputMaybe<ThemeRelationshipInput>;
};

export type SkylarkImageSetCreate = {
  object?: InputMaybe<SkylarkImageInput>;
  position: Scalars["Int"];
};

export type SkylarkImageSetInput = {
  create?: InputMaybe<Array<InputMaybe<SkylarkImageSetCreate>>>;
  link?: InputMaybe<Array<InputMaybe<SetLink>>>;
  reposition?: InputMaybe<Array<InputMaybe<SetLink>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type SkylarkLiveStream = Metadata &
  VisibleObject & {
    __typename?: "SkylarkLiveStream";
    _config?: Maybe<ObjectConfig>;
    _context?: Maybe<RequestContext>;
    _meta?: Maybe<_SkylarkLiveStreamMeta>;
    availability?: Maybe<AvailabilityListing>;
    content_of?: Maybe<SetListing>;
    epg_programs?: Maybe<SkylarkEpgProgramListing>;
    external_id?: Maybe<Scalars["String"]>;
    images?: Maybe<SkylarkImageListing>;
    internal_title?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
    name_sort?: Maybe<Scalars["String"]>;
    slug?: Maybe<Scalars["String"]>;
    tags?: Maybe<SkylarkTagListing>;
    uid: Scalars["String"];
    url?: Maybe<Scalars["String"]>;
  };

export type SkylarkLiveStream_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type SkylarkLiveStreamAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkLiveStreamContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkLiveStreamEpg_ProgramsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkLiveStreamImagesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkLiveStreamTagsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkLiveStreamCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  internal_title?: InputMaybe<Scalars["String"]>;
  name?: InputMaybe<Scalars["String"]>;
  name_sort?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkLiveStreamRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  url?: InputMaybe<Scalars["AWSURL"]>;
};

export type SkylarkLiveStreamInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  internal_title?: InputMaybe<Scalars["String"]>;
  name?: InputMaybe<Scalars["String"]>;
  name_sort?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkLiveStreamRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  url?: InputMaybe<Scalars["AWSURL"]>;
};

export type SkylarkLiveStreamListing = Listing & {
  __typename?: "SkylarkLiveStreamListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<SkylarkLiveStream>>>;
};

export type SkylarkLiveStreamRelationshipInput = {
  create?: InputMaybe<Array<InputMaybe<SkylarkLiveStreamInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type SkylarkLiveStreamRelationships = {
  epg_programs?: InputMaybe<SkylarkEpgProgramRelationshipInput>;
  images?: InputMaybe<SkylarkImageRelationshipInput>;
  tags?: InputMaybe<SkylarkTagRelationshipInput>;
};

export type SkylarkLiveStreamSetCreate = {
  object?: InputMaybe<SkylarkLiveStreamInput>;
  position: Scalars["Int"];
};

export type SkylarkLiveStreamSetInput = {
  create?: InputMaybe<Array<InputMaybe<SkylarkLiveStreamSetCreate>>>;
  link?: InputMaybe<Array<InputMaybe<SetLink>>>;
  reposition?: InputMaybe<Array<InputMaybe<SetLink>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type SkylarkSet = Metadata &
  Set &
  VisibleObject & {
    __typename?: "SkylarkSet";
    _config?: Maybe<ObjectConfig>;
    _context?: Maybe<RequestContext>;
    _meta?: Maybe<_SkylarkSetMeta>;
    assets?: Maybe<SkylarkAssetListing>;
    availability?: Maybe<AvailabilityListing>;
    call_to_actions?: Maybe<CallToActionListing>;
    content?: Maybe<MetadataListing>;
    content_of?: Maybe<SetListing>;
    credits?: Maybe<CreditListing>;
    description?: Maybe<Scalars["String"]>;
    external_id?: Maybe<Scalars["String"]>;
    genres?: Maybe<GenreListing>;
    images?: Maybe<SkylarkImageListing>;
    internal_title?: Maybe<Scalars["String"]>;
    ratings?: Maybe<RatingListing>;
    release_date?: Maybe<Scalars["String"]>;
    slug?: Maybe<Scalars["String"]>;
    synopsis?: Maybe<Scalars["String"]>;
    synopsis_short?: Maybe<Scalars["String"]>;
    tags?: Maybe<SkylarkTagListing>;
    themes?: Maybe<ThemeListing>;
    title?: Maybe<Scalars["String"]>;
    title_short?: Maybe<Scalars["String"]>;
    title_sort?: Maybe<Scalars["String"]>;
    type?: Maybe<Scalars["String"]>;
    uid: Scalars["String"];
  };

export type SkylarkSet_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type SkylarkSetAssetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkSetAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkSetCall_To_ActionsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkSetContentArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order?: InputMaybe<OrderDirections>;
};

export type SkylarkSetContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkSetCreditsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkSetGenresArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkSetImagesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkSetRatingsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkSetTagsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkSetThemesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkSetCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  content?: InputMaybe<SetContentRelationships>;
  description?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  internal_title?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkSetRelationships>;
  release_date?: InputMaybe<Scalars["AWSDate"]>;
  slug?: InputMaybe<Scalars["String"]>;
  synopsis?: InputMaybe<Scalars["String"]>;
  synopsis_short?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  title_short?: InputMaybe<Scalars["String"]>;
  title_sort?: InputMaybe<Scalars["String"]>;
  type?: InputMaybe<SetType>;
};

export type SkylarkSetInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  content?: InputMaybe<SetContentRelationships>;
  description?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  internal_title?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkSetRelationships>;
  release_date?: InputMaybe<Scalars["AWSDate"]>;
  slug?: InputMaybe<Scalars["String"]>;
  synopsis?: InputMaybe<Scalars["String"]>;
  synopsis_short?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  title_short?: InputMaybe<Scalars["String"]>;
  title_sort?: InputMaybe<Scalars["String"]>;
  type?: InputMaybe<SetType>;
};

export type SkylarkSetListing = {
  __typename?: "SkylarkSetListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<SkylarkSet>>>;
};

export type SkylarkSetRelationshipInput = {
  create?: InputMaybe<Array<InputMaybe<SkylarkSetInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type SkylarkSetRelationships = {
  assets?: InputMaybe<SkylarkAssetRelationshipInput>;
  call_to_actions?: InputMaybe<CallToActionRelationshipInput>;
  credits?: InputMaybe<CreditRelationshipInput>;
  genres?: InputMaybe<GenreRelationshipInput>;
  images?: InputMaybe<SkylarkImageRelationshipInput>;
  ratings?: InputMaybe<RatingRelationshipInput>;
  tags?: InputMaybe<SkylarkTagRelationshipInput>;
  themes?: InputMaybe<ThemeRelationshipInput>;
};

export type SkylarkTag = Metadata &
  VisibleObject & {
    __typename?: "SkylarkTag";
    _config?: Maybe<ObjectConfig>;
    _context?: Maybe<RequestContext>;
    _meta?: Maybe<_SkylarkTagMeta>;
    assets?: Maybe<SkylarkAssetListing>;
    availability?: Maybe<AvailabilityListing>;
    brands?: Maybe<BrandListing>;
    content_of?: Maybe<SetListing>;
    epg_programs?: Maybe<SkylarkEpgProgramListing>;
    episodes?: Maybe<EpisodeListing>;
    external_id?: Maybe<Scalars["String"]>;
    images?: Maybe<SkylarkImageListing>;
    live_streams?: Maybe<SkylarkLiveStreamListing>;
    movies?: Maybe<MovieListing>;
    name?: Maybe<Scalars["String"]>;
    name_sort?: Maybe<Scalars["String"]>;
    people?: Maybe<PersonListing>;
    seasons?: Maybe<SeasonListing>;
    sets?: Maybe<SkylarkSetListing>;
    slug?: Maybe<Scalars["String"]>;
    type?: Maybe<Scalars["String"]>;
    uid: Scalars["String"];
  };

export type SkylarkTag_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type SkylarkTagAssetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkTagAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkTagBrandsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkTagContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkTagEpg_ProgramsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkTagEpisodesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkTagImagesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkTagLive_StreamsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkTagMoviesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkTagPeopleArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkTagSeasonsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkTagSetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type SkylarkTagCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  name?: InputMaybe<Scalars["String"]>;
  name_sort?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkTagRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  type?: InputMaybe<TagType>;
};

export type SkylarkTagInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  name?: InputMaybe<Scalars["String"]>;
  name_sort?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkTagRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  type?: InputMaybe<TagType>;
};

export type SkylarkTagListing = Listing & {
  __typename?: "SkylarkTagListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<SkylarkTag>>>;
};

export type SkylarkTagRelationshipInput = {
  create?: InputMaybe<Array<InputMaybe<SkylarkTagInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type SkylarkTagRelationships = {
  assets?: InputMaybe<SkylarkAssetRelationshipInput>;
  brands?: InputMaybe<BrandRelationshipInput>;
  epg_programs?: InputMaybe<SkylarkEpgProgramRelationshipInput>;
  episodes?: InputMaybe<EpisodeRelationshipInput>;
  images?: InputMaybe<SkylarkImageRelationshipInput>;
  live_streams?: InputMaybe<SkylarkLiveStreamRelationshipInput>;
  movies?: InputMaybe<MovieRelationshipInput>;
  people?: InputMaybe<PersonRelationshipInput>;
  seasons?: InputMaybe<SeasonRelationshipInput>;
  sets?: InputMaybe<SkylarkSetRelationshipInput>;
};

export type SkylarkTagSetCreate = {
  object?: InputMaybe<SkylarkTagInput>;
  position: Scalars["Int"];
};

export type SkylarkTagSetInput = {
  create?: InputMaybe<Array<InputMaybe<SkylarkTagSetCreate>>>;
  link?: InputMaybe<Array<InputMaybe<SetLink>>>;
  reposition?: InputMaybe<Array<InputMaybe<SetLink>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type SubSkylarkSetCreate = {
  object?: InputMaybe<SkylarkSetInput>;
  position: Scalars["Int"];
};

export type SubSkylarkSetInput = {
  create?: InputMaybe<Array<InputMaybe<SubSkylarkSetCreate>>>;
  link?: InputMaybe<Array<InputMaybe<SetLink>>>;
  reposition?: InputMaybe<Array<InputMaybe<SetLink>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export enum TagType {
  Default = "DEFAULT",
}

export type Theme = Metadata &
  VisibleObject & {
    __typename?: "Theme";
    _config?: Maybe<ObjectConfig>;
    _context?: Maybe<RequestContext>;
    _meta?: Maybe<_ThemeMeta>;
    availability?: Maybe<AvailabilityListing>;
    brands?: Maybe<BrandListing>;
    content_of?: Maybe<SetListing>;
    episodes?: Maybe<EpisodeListing>;
    external_id?: Maybe<Scalars["String"]>;
    images?: Maybe<SkylarkImageListing>;
    internal_title?: Maybe<Scalars["String"]>;
    metadata_source?: Maybe<Scalars["String"]>;
    movies?: Maybe<MovieListing>;
    name?: Maybe<Scalars["String"]>;
    name_sort?: Maybe<Scalars["String"]>;
    people?: Maybe<PersonListing>;
    seasons?: Maybe<SeasonListing>;
    sets?: Maybe<SkylarkSetListing>;
    slug?: Maybe<Scalars["String"]>;
    uid: Scalars["String"];
  };

export type Theme_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type ThemeAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type ThemeBrandsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type ThemeContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type ThemeEpisodesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type ThemeImagesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type ThemeMoviesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type ThemePeopleArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type ThemeSeasonsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type ThemeSetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order_direction?: InputMaybe<OrderDirections>;
};

export type ThemeCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  internal_title?: InputMaybe<Scalars["String"]>;
  metadata_source?: InputMaybe<Scalars["String"]>;
  name?: InputMaybe<Scalars["String"]>;
  name_sort?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<ThemeRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
};

export type ThemeInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  internal_title?: InputMaybe<Scalars["String"]>;
  metadata_source?: InputMaybe<Scalars["String"]>;
  name?: InputMaybe<Scalars["String"]>;
  name_sort?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<ThemeRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
};

export type ThemeListing = Listing & {
  __typename?: "ThemeListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<Theme>>>;
};

export type ThemeRelationshipInput = {
  config?: InputMaybe<RelationshipConfigInput>;
  create?: InputMaybe<Array<InputMaybe<ThemeCreateInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type ThemeRelationships = {
  brands?: InputMaybe<BrandRelationshipInput>;
  episodes?: InputMaybe<EpisodeRelationshipInput>;
  images?: InputMaybe<SkylarkImageRelationshipInput>;
  movies?: InputMaybe<MovieRelationshipInput>;
  people?: InputMaybe<PersonRelationshipInput>;
  seasons?: InputMaybe<SeasonRelationshipInput>;
  sets?: InputMaybe<SkylarkSetRelationshipInput>;
};

export type ThemeSetCreate = {
  object?: InputMaybe<ThemeInput>;
  position: Scalars["Int"];
};

export type ThemeSetInput = {
  create?: InputMaybe<Array<InputMaybe<ThemeSetCreate>>>;
  link?: InputMaybe<Array<InputMaybe<SetLink>>>;
  reposition?: InputMaybe<Array<InputMaybe<SetLink>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export enum TypoTolerance {
  Minimal = "MINIMAL",
  Off = "OFF",
  On = "ON",
  Strict = "STRICT",
}

export enum UiFieldTypes {
  Colourpicker = "COLOURPICKER",
  String = "STRING",
  Textarea = "TEXTAREA",
  Wysiwyg = "WYSIWYG",
}

export type UpdateDimensionInput = {
  description?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
};

export type UserDimension = {
  dimension: Scalars["String"];
  value: Scalars["String"];
};

export type VisibleObject = {
  _context?: Maybe<RequestContext>;
  external_id?: Maybe<Scalars["String"]>;
  slug?: Maybe<Scalars["String"]>;
  uid: Scalars["String"];
};

export enum VisibleObjectTypes {
  Availability = "Availability",
  Brand = "Brand",
  CallToAction = "CallToAction",
  Credit = "Credit",
  Episode = "Episode",
  Genre = "Genre",
  Movie = "Movie",
  ParentalGuidance = "ParentalGuidance",
  Person = "Person",
  Rating = "Rating",
  Role = "Role",
  Season = "Season",
  SkylarkAsset = "SkylarkAsset",
  SkylarkEpgProgram = "SkylarkEPGProgram",
  SkylarkImage = "SkylarkImage",
  SkylarkLiveStream = "SkylarkLiveStream",
  SkylarkSet = "SkylarkSet",
  SkylarkTag = "SkylarkTag",
  Theme = "Theme",
}

export type _Audit = {
  __typename?: "_Audit";
  account?: Maybe<Scalars["String"]>;
  date?: Maybe<Scalars["String"]>;
  user?: Maybe<Scalars["String"]>;
};

export type _AvailabilityMeta = {
  __typename?: "_AvailabilityMeta";
  created?: Maybe<_Audit>;
  modified?: Maybe<_Audit>;
};

export type _BrandGlobal = _Global & {
  __typename?: "_BrandGlobal";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_BrandGlobal>>>;
  internal_title?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  release_date?: Maybe<Scalars["AWSDate"]>;
  title_sort?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _BrandLanguage = _Language & {
  __typename?: "_BrandLanguage";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_BrandLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  synopsis?: Maybe<Scalars["String"]>;
  synopsis_short?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  title_short?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _BrandMeta = {
  __typename?: "_BrandMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_BrandGlobal>;
  language_data?: Maybe<_BrandLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _CallToActionGlobal = _Global & {
  __typename?: "_CallToActionGlobal";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_CallToActionGlobal>>>;
  internal_title?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  type?: Maybe<Scalars["String"]>;
  url?: Maybe<Scalars["AWSURL"]>;
  url_path?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _CallToActionLanguage = _Language & {
  __typename?: "_CallToActionLanguage";
  created?: Maybe<_Audit>;
  description?: Maybe<Scalars["String"]>;
  description_short?: Maybe<Scalars["String"]>;
  history?: Maybe<Array<Maybe<_CallToActionLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  text?: Maybe<Scalars["String"]>;
  text_short?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _CallToActionMeta = {
  __typename?: "_CallToActionMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_CallToActionGlobal>;
  language_data?: Maybe<_CallToActionLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _CreditGlobal = _Global & {
  __typename?: "_CreditGlobal";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_CreditGlobal>>>;
  internal_title?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  position?: Maybe<Scalars["Int"]>;
  publish_stage?: Maybe<PublishStage>;
  version?: Maybe<Scalars["Int"]>;
};

export type _CreditLanguage = _Language & {
  __typename?: "_CreditLanguage";
  character?: Maybe<Scalars["String"]>;
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_CreditLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _CreditMeta = {
  __typename?: "_CreditMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_CreditGlobal>;
  language_data?: Maybe<_CreditLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _DimensionMeta = {
  __typename?: "_DimensionMeta";
  created?: Maybe<_Audit>;
  modified?: Maybe<_Audit>;
};

export type _DimensionValueMeta = {
  __typename?: "_DimensionValueMeta";
  created?: Maybe<_Audit>;
  modified?: Maybe<_Audit>;
};

export type _EpisodeGlobal = _Global & {
  __typename?: "_EpisodeGlobal";
  created?: Maybe<_Audit>;
  episode_number?: Maybe<Scalars["Int"]>;
  history?: Maybe<Array<Maybe<_EpisodeGlobal>>>;
  internal_title?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  release_date?: Maybe<Scalars["AWSDate"]>;
  title_sort?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
  year_of_release?: Maybe<Scalars["Int"]>;
};

export type _EpisodeLanguage = _Language & {
  __typename?: "_EpisodeLanguage";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_EpisodeLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  synopsis?: Maybe<Scalars["String"]>;
  synopsis_short?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  title_short?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _EpisodeMeta = {
  __typename?: "_EpisodeMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_EpisodeGlobal>;
  language_data?: Maybe<_EpisodeLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _FieldConfig = {
  __typename?: "_FieldConfig";
  name: Scalars["String"];
};

export type _GenreGlobal = _Global & {
  __typename?: "_GenreGlobal";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_GenreGlobal>>>;
  internal_title?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  title_sort?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _GenreLanguage = _Language & {
  __typename?: "_GenreLanguage";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_GenreLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  metadata_source?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  name?: Maybe<Scalars["String"]>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _GenreMeta = {
  __typename?: "_GenreMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_GenreGlobal>;
  language_data?: Maybe<_GenreLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _Global = {
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_Global>>>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  version?: Maybe<Scalars["Int"]>;
};

export type _Language = {
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_Language>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _MovieGlobal = _Global & {
  __typename?: "_MovieGlobal";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_MovieGlobal>>>;
  internal_title?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  movie_number?: Maybe<Scalars["Int"]>;
  publish_stage?: Maybe<PublishStage>;
  release_date?: Maybe<Scalars["AWSDate"]>;
  title_sort?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
  year_of_release?: Maybe<Scalars["Int"]>;
};

export type _MovieLanguage = _Language & {
  __typename?: "_MovieLanguage";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_MovieLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  synopsis?: Maybe<Scalars["String"]>;
  synopsis_short?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  title_short?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _MovieMeta = {
  __typename?: "_MovieMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_MovieGlobal>;
  language_data?: Maybe<_MovieLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _ParentalGuidanceGlobal = _Global & {
  __typename?: "_ParentalGuidanceGlobal";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_ParentalGuidanceGlobal>>>;
  internal_title?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  reason_sort?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _ParentalGuidanceLanguage = _Language & {
  __typename?: "_ParentalGuidanceLanguage";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_ParentalGuidanceLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  reason?: Maybe<Scalars["String"]>;
  slug?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _ParentalGuidanceMeta = {
  __typename?: "_ParentalGuidanceMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_ParentalGuidanceGlobal>;
  language_data?: Maybe<_ParentalGuidanceLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _PersonGlobal = _Global & {
  __typename?: "_PersonGlobal";
  created?: Maybe<_Audit>;
  date_of_birth?: Maybe<Scalars["AWSDate"]>;
  history?: Maybe<Array<Maybe<_PersonGlobal>>>;
  modified?: Maybe<_Audit>;
  name_sort?: Maybe<Scalars["String"]>;
  place_of_birth?: Maybe<Scalars["AWSDate"]>;
  publish_stage?: Maybe<PublishStage>;
  version?: Maybe<Scalars["Int"]>;
};

export type _PersonLanguage = _Language & {
  __typename?: "_PersonLanguage";
  abbreviation?: Maybe<Scalars["String"]>;
  alias?: Maybe<Scalars["String"]>;
  bio_long?: Maybe<Scalars["String"]>;
  bio_medium?: Maybe<Scalars["String"]>;
  bio_short?: Maybe<Scalars["String"]>;
  created?: Maybe<_Audit>;
  genre?: Maybe<Scalars["String"]>;
  history?: Maybe<Array<Maybe<_PersonLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  name?: Maybe<Scalars["String"]>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _PersonMeta = {
  __typename?: "_PersonMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_PersonGlobal>;
  language_data?: Maybe<_PersonLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _RatingGlobal = _Global & {
  __typename?: "_RatingGlobal";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_RatingGlobal>>>;
  internal_title?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  schema?: Maybe<Scalars["String"]>;
  value?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _RatingLanguage = _Language & {
  __typename?: "_RatingLanguage";
  created?: Maybe<_Audit>;
  description?: Maybe<Scalars["String"]>;
  history?: Maybe<Array<Maybe<_RatingLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _RatingMeta = {
  __typename?: "_RatingMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_RatingGlobal>;
  language_data?: Maybe<_RatingLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _RoleGlobal = _Global & {
  __typename?: "_RoleGlobal";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_RoleGlobal>>>;
  internal_title?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  title_sort?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _RoleLanguage = _Language & {
  __typename?: "_RoleLanguage";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_RoleLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _RoleMeta = {
  __typename?: "_RoleMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_RoleGlobal>;
  language_data?: Maybe<_RoleLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _SeasonGlobal = _Global & {
  __typename?: "_SeasonGlobal";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_SeasonGlobal>>>;
  internal_title?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  number_of_episodes?: Maybe<Scalars["Int"]>;
  preferred_image_type?: Maybe<Scalars["String"]>;
  publish_stage?: Maybe<PublishStage>;
  release_date?: Maybe<Scalars["AWSDate"]>;
  season_number?: Maybe<Scalars["Int"]>;
  title_sort?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
  year_of_release?: Maybe<Scalars["Int"]>;
};

export type _SeasonLanguage = _Language & {
  __typename?: "_SeasonLanguage";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_SeasonLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  synopsis?: Maybe<Scalars["String"]>;
  synopsis_short?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  title_short?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SeasonMeta = {
  __typename?: "_SeasonMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_SeasonGlobal>;
  language_data?: Maybe<_SeasonLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _SkylarkAssetGlobal = _Global & {
  __typename?: "_SkylarkAssetGlobal";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_SkylarkAssetGlobal>>>;
  ingest_file?: Maybe<Scalars["String"]>;
  internal_title?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  release_date?: Maybe<Scalars["String"]>;
  title_sort?: Maybe<Scalars["String"]>;
  type?: Maybe<Scalars["String"]>;
  url?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkAssetLanguage = _Language & {
  __typename?: "_SkylarkAssetLanguage";
  created?: Maybe<_Audit>;
  duration?: Maybe<Scalars["Int"]>;
  history?: Maybe<Array<Maybe<_SkylarkAssetLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkAssetMeta = {
  __typename?: "_SkylarkAssetMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_SkylarkAssetGlobal>;
  language_data?: Maybe<_SkylarkAssetLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _SkylarkEpgProgramGlobal = _Global & {
  __typename?: "_SkylarkEPGProgramGlobal";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_SkylarkEpgProgramGlobal>>>;
  internal_title?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  name_sort?: Maybe<Scalars["String"]>;
  publish_stage?: Maybe<PublishStage>;
  url?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkEpgProgramLanguage = _Language & {
  __typename?: "_SkylarkEPGProgramLanguage";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_SkylarkEpgProgramLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  name?: Maybe<Scalars["String"]>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkEpgProgramMeta = {
  __typename?: "_SkylarkEPGProgramMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_SkylarkEpgProgramGlobal>;
  language_data?: Maybe<_SkylarkEpgProgramLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _SkylarkFavoriteListGlobal = _Global & {
  __typename?: "_SkylarkFavoriteListGlobal";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_SkylarkFavoriteListGlobal>>>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkFavoriteListLanguage = _Language & {
  __typename?: "_SkylarkFavoriteListLanguage";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_SkylarkFavoriteListLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkFavoriteListMeta = {
  __typename?: "_SkylarkFavoriteListMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_SkylarkFavoriteListGlobal>;
  language_data?: Maybe<_SkylarkFavoriteListLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _SkylarkImageGlobal = _Global & {
  __typename?: "_SkylarkImageGlobal";
  content_type?: Maybe<Scalars["String"]>;
  created?: Maybe<_Audit>;
  download_from_url?: Maybe<Scalars["String"]>;
  external_url?: Maybe<Scalars["String"]>;
  file_name?: Maybe<Scalars["String"]>;
  history?: Maybe<Array<Maybe<_SkylarkImageGlobal>>>;
  internal_title?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  type?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkImageLanguage = _Language & {
  __typename?: "_SkylarkImageLanguage";
  alt_text?: Maybe<Scalars["String"]>;
  created?: Maybe<_Audit>;
  description?: Maybe<Scalars["String"]>;
  history?: Maybe<Array<Maybe<_SkylarkImageLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkImageMeta = {
  __typename?: "_SkylarkImageMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_SkylarkImageGlobal>;
  language_data?: Maybe<_SkylarkImageLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _SkylarkLiveStreamGlobal = _Global & {
  __typename?: "_SkylarkLiveStreamGlobal";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_SkylarkLiveStreamGlobal>>>;
  internal_title?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  name_sort?: Maybe<Scalars["String"]>;
  publish_stage?: Maybe<PublishStage>;
  url?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkLiveStreamLanguage = _Language & {
  __typename?: "_SkylarkLiveStreamLanguage";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_SkylarkLiveStreamLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  name?: Maybe<Scalars["String"]>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkLiveStreamMeta = {
  __typename?: "_SkylarkLiveStreamMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_SkylarkLiveStreamGlobal>;
  language_data?: Maybe<_SkylarkLiveStreamLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _SkylarkSetGlobal = _Global & {
  __typename?: "_SkylarkSetGlobal";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_SkylarkSetGlobal>>>;
  internal_title?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  release_date?: Maybe<Scalars["String"]>;
  title_sort?: Maybe<Scalars["String"]>;
  type?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkSetLanguage = _Language & {
  __typename?: "_SkylarkSetLanguage";
  created?: Maybe<_Audit>;
  description?: Maybe<Scalars["String"]>;
  history?: Maybe<Array<Maybe<_SkylarkSetLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  synopsis?: Maybe<Scalars["String"]>;
  synopsis_short?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  title_short?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkSetMeta = {
  __typename?: "_SkylarkSetMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_SkylarkSetGlobal>;
  language_data?: Maybe<_SkylarkSetLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _SkylarkTagGlobal = _Global & {
  __typename?: "_SkylarkTagGlobal";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_SkylarkTagGlobal>>>;
  modified?: Maybe<_Audit>;
  name_sort?: Maybe<Scalars["String"]>;
  publish_stage?: Maybe<PublishStage>;
  type?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkTagLanguage = _Language & {
  __typename?: "_SkylarkTagLanguage";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_SkylarkTagLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  name?: Maybe<Scalars["String"]>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkTagMeta = {
  __typename?: "_SkylarkTagMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_SkylarkTagGlobal>;
  language_data?: Maybe<_SkylarkTagLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _ThemeGlobal = _Global & {
  __typename?: "_ThemeGlobal";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_ThemeGlobal>>>;
  internal_title?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  name_sort?: Maybe<Scalars["String"]>;
  publish_stage?: Maybe<PublishStage>;
  version?: Maybe<Scalars["Int"]>;
};

export type _ThemeLanguage = _Language & {
  __typename?: "_ThemeLanguage";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_ThemeLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  metadata_source?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  name?: Maybe<Scalars["String"]>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _ThemeMeta = {
  __typename?: "_ThemeMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_ThemeGlobal>;
  language_data?: Maybe<_ThemeLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type ActivationStatus = {
  __typename?: "activationStatus";
  active_version?: Maybe<Scalars["String"]>;
  update_in_progress?: Maybe<Scalars["Boolean"]>;
  update_started_at?: Maybe<Scalars["String"]>;
};

export type UserDetails = {
  __typename?: "userDetails";
  account?: Maybe<Scalars["String"]>;
  permissions?: Maybe<Array<Maybe<Scalars["String"]>>>;
  role?: Maybe<Scalars["String"]>;
};

/* eslint-enable */
