/* auto-generated by graphql-codegen */
/* eslint-disable eslint-comments/no-unlimited-disable */
/* eslint-disable */
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = {
  [K in keyof T]: T[K];
};
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & {
  [SubKey in K]?: Maybe<T[SubKey]>;
};
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & {
  [SubKey in K]: Maybe<T[SubKey]>;
};
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  AWSDate: any;
  AWSDateTime: any;
  AWSJSON: any;
  AWSURL: any;
};

export enum AssetType {
  Main = "MAIN",
  Trailer = "TRAILER",
}

export type AssignAvailabilityInput = {
  create?: InputMaybe<Array<InputMaybe<AvailabilityInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type AssignDimensionGroupInput = {
  link?: InputMaybe<Array<InputMaybe<AssignDimensionInput>>>;
  unlink?: InputMaybe<Array<InputMaybe<AssignDimensionInput>>>;
};

export type AssignDimensionInput = {
  dimension_slug: Scalars["String"];
  value_slugs: Array<InputMaybe<Scalars["String"]>>;
};

export type Availability = VisibleObject & {
  __typename?: "Availability";
  _config?: Maybe<ObjectConfig>;
  _meta?: Maybe<_AvailabilityMeta>;
  dimensions?: Maybe<DimensionListing>;
  end?: Maybe<Scalars["AWSDateTime"]>;
  external_id?: Maybe<Scalars["String"]>;
  slug?: Maybe<Scalars["String"]>;
  start?: Maybe<Scalars["AWSDateTime"]>;
  timezone?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  uid: Scalars["String"];
};

export type AvailabilityDimensionsArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type AvailabilityInput = {
  dimensions?: InputMaybe<AssignDimensionGroupInput>;
  end?: InputMaybe<Scalars["AWSDateTime"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  slug?: InputMaybe<Scalars["String"]>;
  start?: InputMaybe<Scalars["AWSDateTime"]>;
  title?: InputMaybe<Scalars["String"]>;
};

export type AvailabilityListing = {
  __typename?: "AvailabilityListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<Availability>>>;
};

export type Brand = Metadata &
  VisibleObject & {
    __typename?: "Brand";
    _config?: Maybe<ObjectConfig>;
    _meta?: Maybe<_BrandMeta>;
    assets?: Maybe<SkylarkAssetListing>;
    availability?: Maybe<AvailabilityListing>;
    content_of?: Maybe<SetListing>;
    credits?: Maybe<CreditListing>;
    episodes?: Maybe<EpisodeListing>;
    external_id?: Maybe<Scalars["String"]>;
    genres?: Maybe<GenreListing>;
    images?: Maybe<SkylarkImageListing>;
    movies?: Maybe<MovieListing>;
    ratings?: Maybe<RatingListing>;
    release_date?: Maybe<Scalars["AWSDate"]>;
    seasons?: Maybe<SeasonListing>;
    slug?: Maybe<Scalars["String"]>;
    synopsis?: Maybe<Scalars["String"]>;
    synopsis_short?: Maybe<Scalars["String"]>;
    tags?: Maybe<SkylarkTagListing>;
    themes?: Maybe<ThemeListing>;
    title?: Maybe<Scalars["String"]>;
    title_short?: Maybe<Scalars["String"]>;
    title_sort?: Maybe<Scalars["String"]>;
    uid: Scalars["String"];
  };

export type Brand_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type BrandAssetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type BrandAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type BrandContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type BrandCreditsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type BrandEpisodesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type BrandGenresArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type BrandImagesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type BrandMoviesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type BrandRatingsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type BrandSeasonsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type BrandTagsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type BrandThemesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type BrandCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<BrandRelationships>;
  release_date?: InputMaybe<Scalars["AWSDate"]>;
  slug?: InputMaybe<Scalars["String"]>;
  synopsis?: InputMaybe<Scalars["String"]>;
  synopsis_short?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  title_short?: InputMaybe<Scalars["String"]>;
  title_sort?: InputMaybe<Scalars["String"]>;
};

export type BrandInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<BrandRelationships>;
  release_date?: InputMaybe<Scalars["AWSDate"]>;
  slug?: InputMaybe<Scalars["String"]>;
  synopsis?: InputMaybe<Scalars["String"]>;
  synopsis_short?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  title_short?: InputMaybe<Scalars["String"]>;
  title_sort?: InputMaybe<Scalars["String"]>;
};

export type BrandListing = Listing & {
  __typename?: "BrandListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<Brand>>>;
};

export type BrandRelationshipInput = {
  create?: InputMaybe<Array<InputMaybe<BrandCreateInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type BrandRelationships = {
  assets?: InputMaybe<SkylarkAssetRelationshipInput>;
  credits?: InputMaybe<CreditRelationshipInput>;
  episodes?: InputMaybe<EpisodeRelationshipInput>;
  genres?: InputMaybe<GenreRelationshipInput>;
  images?: InputMaybe<SkylarkImageRelationshipInput>;
  movies?: InputMaybe<MovieRelationshipInput>;
  ratings?: InputMaybe<RatingRelationshipInput>;
  seasons?: InputMaybe<SeasonRelationshipInput>;
  tags?: InputMaybe<SkylarkTagRelationshipInput>;
  themes?: InputMaybe<ThemeRelationshipInput>;
};

export type BrandSetCreate = {
  object?: InputMaybe<BrandInput>;
  position: Scalars["Int"];
};

export type BrandSetInput = {
  create?: InputMaybe<Array<InputMaybe<BrandSetCreate>>>;
  link?: InputMaybe<Array<InputMaybe<SetLink>>>;
  reposition?: InputMaybe<Array<InputMaybe<SetLink>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export enum ConfigurationOperations {
  Create = "CREATE",
  Delete = "DELETE",
  Update = "UPDATE",
}

export type ConfigurationResponse = {
  __typename?: "ConfigurationResponse";
  messages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  version?: Maybe<Scalars["Int"]>;
};

export type CountResponse = {
  __typename?: "CountResponse";
  count?: Maybe<Scalars["Int"]>;
};

export type CreateObjectInput = {
  fields?: InputMaybe<Array<InputMaybe<EditFieldInput>>>;
  is_set?: InputMaybe<Scalars["Boolean"]>;
  name: Scalars["String"];
  relationships?: InputMaybe<
    Array<InputMaybe<EditFixedObjectRelationshipInput>>
  >;
};

export type Credit = Metadata &
  VisibleObject & {
    __typename?: "Credit";
    _config?: Maybe<ObjectConfig>;
    _meta?: Maybe<_CreditMeta>;
    availability?: Maybe<AvailabilityListing>;
    brands?: Maybe<BrandListing>;
    character?: Maybe<Scalars["String"]>;
    content_of?: Maybe<SetListing>;
    episodes?: Maybe<EpisodeListing>;
    external_id?: Maybe<Scalars["String"]>;
    movies?: Maybe<MovieListing>;
    people?: Maybe<PersonListing>;
    position?: Maybe<Scalars["Int"]>;
    roles?: Maybe<RoleListing>;
    seasons?: Maybe<SeasonListing>;
    sets?: Maybe<SkylarkSetListing>;
    slug?: Maybe<Scalars["String"]>;
    uid: Scalars["String"];
  };

export type Credit_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type CreditAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type CreditBrandsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type CreditContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type CreditEpisodesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type CreditMoviesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type CreditPeopleArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type CreditRolesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type CreditSeasonsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type CreditSetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type CreditCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  character?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  position?: InputMaybe<Scalars["Int"]>;
  relationships?: InputMaybe<CreditRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
};

export type CreditInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  character?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  position?: InputMaybe<Scalars["Int"]>;
  relationships?: InputMaybe<CreditRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
};

export type CreditListing = Listing & {
  __typename?: "CreditListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<Credit>>>;
};

export type CreditRelationshipInput = {
  create?: InputMaybe<Array<InputMaybe<CreditCreateInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type CreditRelationships = {
  brands?: InputMaybe<BrandRelationshipInput>;
  episodes?: InputMaybe<EpisodeRelationshipInput>;
  movies?: InputMaybe<MovieRelationshipInput>;
  people?: InputMaybe<PersonRelationshipInput>;
  roles?: InputMaybe<RoleRelationshipInput>;
  seasons?: InputMaybe<SeasonRelationshipInput>;
  sets?: InputMaybe<SkylarkSetRelationshipInput>;
};

export type CreditSetCreate = {
  object?: InputMaybe<CreditInput>;
  position: Scalars["Int"];
};

export type CreditSetInput = {
  create?: InputMaybe<Array<InputMaybe<CreditSetCreate>>>;
  link?: InputMaybe<Array<InputMaybe<SetLink>>>;
  reposition?: InputMaybe<Array<InputMaybe<SetLink>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type Dimension = {
  __typename?: "Dimension";
  _meta?: Maybe<_DimensionMeta>;
  availability?: Maybe<AvailabilityListing>;
  description?: Maybe<Scalars["String"]>;
  external_id?: Maybe<Scalars["String"]>;
  slug: Scalars["String"];
  title?: Maybe<Scalars["String"]>;
  uid: Scalars["String"];
  values?: Maybe<DimensionValueListing>;
};

export type DimensionAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type DimensionValuesArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  value_external_id?: InputMaybe<Scalars["String"]>;
  value_id?: InputMaybe<Scalars["String"]>;
};

export type DimensionInput = {
  description?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  slug: Scalars["String"];
  title?: InputMaybe<Scalars["String"]>;
};

export type DimensionListing = Listing & {
  __typename?: "DimensionListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<Dimension>>>;
};

export type DimensionValue = {
  __typename?: "DimensionValue";
  _meta?: Maybe<_DimensionMeta>;
  availability?: Maybe<AvailabilityListing>;
  description?: Maybe<Scalars["String"]>;
  dimension?: Maybe<Dimension>;
  external_id?: Maybe<Scalars["String"]>;
  slug: Scalars["String"];
  title?: Maybe<Scalars["String"]>;
  uid: Scalars["String"];
};

export type DimensionValueAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type DimensionValueListing = Listing & {
  __typename?: "DimensionValueListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<DimensionValue>>>;
};

export type EditEnumInput = {
  name: Scalars["String"];
  operation: ConfigurationOperations;
  values?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type EditFieldInput = {
  enum_name?: InputMaybe<Scalars["String"]>;
  is_translatable?: InputMaybe<Scalars["Boolean"]>;
  name: Scalars["String"];
  operation: ConfigurationOperations;
  required?: InputMaybe<Scalars["Boolean"]>;
  type?: InputMaybe<FieldTypes>;
};

export type EditFixedObjectRelationshipInput = {
  operation: ConfigurationOperations;
  relationship_name: Scalars["String"];
  reverse_relationship_name: Scalars["String"];
  to_class: ObjectTypes;
};

export type EditRelationshipInput = {
  from_class: ObjectTypes;
  operation: ConfigurationOperations;
  relationship_name: Scalars["String"];
  reverse_relationship_name: Scalars["String"];
  to_class: ObjectTypes;
};

export type Episode = Metadata &
  VisibleObject & {
    __typename?: "Episode";
    _config?: Maybe<ObjectConfig>;
    _meta?: Maybe<_EpisodeMeta>;
    assets?: Maybe<SkylarkAssetListing>;
    availability?: Maybe<AvailabilityListing>;
    brands?: Maybe<BrandListing>;
    content_of?: Maybe<SetListing>;
    credits?: Maybe<CreditListing>;
    episode_number?: Maybe<Scalars["Int"]>;
    external_id?: Maybe<Scalars["String"]>;
    genres?: Maybe<GenreListing>;
    images?: Maybe<SkylarkImageListing>;
    ratings?: Maybe<RatingListing>;
    release_date?: Maybe<Scalars["AWSDate"]>;
    seasons?: Maybe<SeasonListing>;
    slug?: Maybe<Scalars["String"]>;
    synopsis?: Maybe<Scalars["String"]>;
    synopsis_short?: Maybe<Scalars["String"]>;
    tags?: Maybe<SkylarkTagListing>;
    themes?: Maybe<ThemeListing>;
    title?: Maybe<Scalars["String"]>;
    title_short?: Maybe<Scalars["String"]>;
    title_sort?: Maybe<Scalars["String"]>;
    uid: Scalars["String"];
  };

export type Episode_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type EpisodeAssetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type EpisodeAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type EpisodeBrandsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type EpisodeContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type EpisodeCreditsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type EpisodeGenresArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type EpisodeImagesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type EpisodeRatingsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type EpisodeSeasonsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type EpisodeTagsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type EpisodeThemesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type EpisodeCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  episode_number?: InputMaybe<Scalars["Int"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<EpisodeRelationships>;
  release_date?: InputMaybe<Scalars["AWSDate"]>;
  slug?: InputMaybe<Scalars["String"]>;
  synopsis?: InputMaybe<Scalars["String"]>;
  synopsis_short?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  title_short?: InputMaybe<Scalars["String"]>;
  title_sort?: InputMaybe<Scalars["String"]>;
};

export type EpisodeInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  episode_number?: InputMaybe<Scalars["Int"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<EpisodeRelationships>;
  release_date?: InputMaybe<Scalars["AWSDate"]>;
  slug?: InputMaybe<Scalars["String"]>;
  synopsis?: InputMaybe<Scalars["String"]>;
  synopsis_short?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  title_short?: InputMaybe<Scalars["String"]>;
  title_sort?: InputMaybe<Scalars["String"]>;
};

export type EpisodeListing = Listing & {
  __typename?: "EpisodeListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<Episode>>>;
};

export type EpisodeRelationshipInput = {
  create?: InputMaybe<Array<InputMaybe<EpisodeCreateInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type EpisodeRelationships = {
  assets?: InputMaybe<SkylarkAssetRelationshipInput>;
  brands?: InputMaybe<BrandRelationshipInput>;
  credits?: InputMaybe<CreditRelationshipInput>;
  genres?: InputMaybe<GenreRelationshipInput>;
  images?: InputMaybe<SkylarkImageRelationshipInput>;
  ratings?: InputMaybe<RatingRelationshipInput>;
  seasons?: InputMaybe<SeasonRelationshipInput>;
  tags?: InputMaybe<SkylarkTagRelationshipInput>;
  themes?: InputMaybe<ThemeRelationshipInput>;
};

export type EpisodeSetCreate = {
  object?: InputMaybe<EpisodeInput>;
  position: Scalars["Int"];
};

export type EpisodeSetInput = {
  create?: InputMaybe<Array<InputMaybe<EpisodeSetCreate>>>;
  link?: InputMaybe<Array<InputMaybe<SetLink>>>;
  reposition?: InputMaybe<Array<InputMaybe<SetLink>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export enum FieldTypes {
  Boolean = "BOOLEAN",
  Date = "DATE",
  Datetime = "DATETIME",
  Email = "EMAIL",
  Enum = "ENUM",
  Float = "FLOAT",
  Integer = "INTEGER",
  IpAddress = "IP_ADDRESS",
  Json = "JSON",
  Phone = "PHONE",
  String = "STRING",
  Time = "TIME",
  Timestamp = "TIMESTAMP",
  Url = "URL",
}

export type Genre = Metadata &
  VisibleObject & {
    __typename?: "Genre";
    _config?: Maybe<ObjectConfig>;
    _meta?: Maybe<_GenreMeta>;
    availability?: Maybe<AvailabilityListing>;
    brands?: Maybe<BrandListing>;
    content_of?: Maybe<SetListing>;
    episodes?: Maybe<EpisodeListing>;
    external_id?: Maybe<Scalars["String"]>;
    images?: Maybe<SkylarkImageListing>;
    metadata_source?: Maybe<Scalars["String"]>;
    movies?: Maybe<MovieListing>;
    name?: Maybe<Scalars["String"]>;
    people?: Maybe<PersonListing>;
    seasons?: Maybe<SeasonListing>;
    sets?: Maybe<SkylarkSetListing>;
    slug?: Maybe<Scalars["String"]>;
    uid: Scalars["String"];
  };

export type Genre_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type GenreAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type GenreBrandsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type GenreContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type GenreEpisodesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type GenreImagesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type GenreMoviesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type GenrePeopleArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type GenreSeasonsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type GenreSetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type GenreCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  metadata_source?: InputMaybe<Scalars["String"]>;
  name?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<GenreRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
};

export type GenreInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  metadata_source?: InputMaybe<Scalars["String"]>;
  name?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<GenreRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
};

export type GenreListing = Listing & {
  __typename?: "GenreListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<Genre>>>;
};

export type GenreRelationshipInput = {
  create?: InputMaybe<Array<InputMaybe<GenreCreateInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type GenreRelationships = {
  brands?: InputMaybe<BrandRelationshipInput>;
  episodes?: InputMaybe<EpisodeRelationshipInput>;
  images?: InputMaybe<SkylarkImageRelationshipInput>;
  movies?: InputMaybe<MovieRelationshipInput>;
  people?: InputMaybe<PersonRelationshipInput>;
  seasons?: InputMaybe<SeasonRelationshipInput>;
  sets?: InputMaybe<SkylarkSetRelationshipInput>;
};

export type GenreSetCreate = {
  object?: InputMaybe<GenreInput>;
  position: Scalars["Int"];
};

export type GenreSetInput = {
  create?: InputMaybe<Array<InputMaybe<GenreSetCreate>>>;
  link?: InputMaybe<Array<InputMaybe<SetLink>>>;
  reposition?: InputMaybe<Array<InputMaybe<SetLink>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type HiddenObject = {
  external_id?: Maybe<Scalars["String"]>;
  slug?: Maybe<Scalars["String"]>;
  uid: Scalars["String"];
};

export enum ImageType {
  Background = "BACKGROUND",
  Feature = "FEATURE",
  Footer = "FOOTER",
  Header = "HEADER",
  Landscape = "LANDSCAPE",
  Main = "MAIN",
  Poster = "POSTER",
  PostLive = "POST_LIVE",
  Preview = "PREVIEW",
  PreLive = "PRE_LIVE",
  Thumbnail = "THUMBNAIL",
}

export type Listing = {
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
};

export type MediaFile = {
  content_type?: Maybe<Scalars["String"]>;
  download_from_url?: Maybe<Scalars["String"]>;
  external_url?: Maybe<Scalars["String"]>;
  file_name?: Maybe<Scalars["String"]>;
  upload_url?: Maybe<Scalars["String"]>;
};

export type Metadata = {
  _config?: Maybe<ObjectConfig>;
  content_of?: Maybe<SetListing>;
  external_id?: Maybe<Scalars["String"]>;
  slug?: Maybe<Scalars["String"]>;
  uid: Scalars["String"];
};

export type MetadataContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type MetadataListing = Listing & {
  __typename?: "MetadataListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<SetContent>>>;
};

export type Movie = Metadata &
  VisibleObject & {
    __typename?: "Movie";
    _config?: Maybe<ObjectConfig>;
    _meta?: Maybe<_MovieMeta>;
    assets?: Maybe<SkylarkAssetListing>;
    availability?: Maybe<AvailabilityListing>;
    brands?: Maybe<BrandListing>;
    content_of?: Maybe<SetListing>;
    credits?: Maybe<CreditListing>;
    external_id?: Maybe<Scalars["String"]>;
    genres?: Maybe<GenreListing>;
    images?: Maybe<SkylarkImageListing>;
    ratings?: Maybe<RatingListing>;
    release_date?: Maybe<Scalars["AWSDate"]>;
    slug?: Maybe<Scalars["String"]>;
    synopsis?: Maybe<Scalars["String"]>;
    synopsis_short?: Maybe<Scalars["String"]>;
    tags?: Maybe<SkylarkTagListing>;
    themes?: Maybe<ThemeListing>;
    title?: Maybe<Scalars["String"]>;
    title_short?: Maybe<Scalars["String"]>;
    title_sort?: Maybe<Scalars["String"]>;
    uid: Scalars["String"];
    year_of_release?: Maybe<Scalars["Int"]>;
  };

export type Movie_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type MovieAssetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type MovieAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type MovieBrandsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type MovieContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type MovieCreditsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type MovieGenresArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type MovieImagesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type MovieRatingsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type MovieTagsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type MovieThemesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type MovieCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<MovieRelationships>;
  release_date?: InputMaybe<Scalars["AWSDate"]>;
  slug?: InputMaybe<Scalars["String"]>;
  synopsis?: InputMaybe<Scalars["String"]>;
  synopsis_short?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  title_short?: InputMaybe<Scalars["String"]>;
  title_sort?: InputMaybe<Scalars["String"]>;
  year_of_release?: InputMaybe<Scalars["Int"]>;
};

export type MovieInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<MovieRelationships>;
  release_date?: InputMaybe<Scalars["AWSDate"]>;
  slug?: InputMaybe<Scalars["String"]>;
  synopsis?: InputMaybe<Scalars["String"]>;
  synopsis_short?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  title_short?: InputMaybe<Scalars["String"]>;
  title_sort?: InputMaybe<Scalars["String"]>;
  year_of_release?: InputMaybe<Scalars["Int"]>;
};

export type MovieListing = Listing & {
  __typename?: "MovieListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<Movie>>>;
};

export type MovieRelationshipInput = {
  create?: InputMaybe<Array<InputMaybe<MovieCreateInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type MovieRelationships = {
  assets?: InputMaybe<SkylarkAssetRelationshipInput>;
  brands?: InputMaybe<BrandRelationshipInput>;
  credits?: InputMaybe<CreditRelationshipInput>;
  genres?: InputMaybe<GenreRelationshipInput>;
  images?: InputMaybe<SkylarkImageRelationshipInput>;
  ratings?: InputMaybe<RatingRelationshipInput>;
  tags?: InputMaybe<SkylarkTagRelationshipInput>;
  themes?: InputMaybe<ThemeRelationshipInput>;
};

export type MovieSetCreate = {
  object?: InputMaybe<MovieInput>;
  position: Scalars["Int"];
};

export type MovieSetInput = {
  create?: InputMaybe<Array<InputMaybe<MovieSetCreate>>>;
  link?: InputMaybe<Array<InputMaybe<SetLink>>>;
  reposition?: InputMaybe<Array<InputMaybe<SetLink>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type Mutation = {
  __typename?: "Mutation";
  activateConfigurationVersion?: Maybe<ConfigurationResponse>;
  createAvailability?: Maybe<Availability>;
  createBrand?: Maybe<Brand>;
  createCredit?: Maybe<Credit>;
  createDimension?: Maybe<Dimension>;
  createDimensionValue?: Maybe<DimensionValue>;
  createEpisode?: Maybe<Episode>;
  createGenre?: Maybe<Genre>;
  createMovie?: Maybe<Movie>;
  createObjectConfiguration?: Maybe<ConfigurationResponse>;
  createParentalGuidance?: Maybe<ParentalGuidance>;
  createPerson?: Maybe<Person>;
  createRating?: Maybe<Rating>;
  createRole?: Maybe<Role>;
  createSeason?: Maybe<Season>;
  createSkylarkAsset?: Maybe<SkylarkAsset>;
  createSkylarkAudioTrack?: Maybe<SkylarkAudioTrack>;
  createSkylarkChannel?: Maybe<SkylarkChannel>;
  createSkylarkDRMProvider?: Maybe<SkylarkDrmProvider>;
  createSkylarkEPGProgramme?: Maybe<SkylarkEpgProgramme>;
  createSkylarkImage?: Maybe<SkylarkImage>;
  createSkylarkPlaybackDetail?: Maybe<SkylarkPlaybackDetail>;
  createSkylarkPlaybackDetailAttribute?: Maybe<SkylarkPlaybackDetailAttribute>;
  createSkylarkPlaybackProvider?: Maybe<SkylarkPlaybackProvider>;
  createSkylarkPlaybackURLTemplate?: Maybe<SkylarkPlaybackUrlTemplate>;
  createSkylarkProviderCredential?: Maybe<SkylarkProviderCredential>;
  createSkylarkSet?: Maybe<SkylarkSet>;
  createSkylarkTag?: Maybe<SkylarkTag>;
  createSkylarkTextTrack?: Maybe<SkylarkTextTrack>;
  createSkylarkVideoTrack?: Maybe<SkylarkVideoTrack>;
  createTheme?: Maybe<Theme>;
  deleteAvailability?: Maybe<Scalars["String"]>;
  deleteBrand?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteCredit?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteDimension?: Maybe<Scalars["String"]>;
  deleteDimensionValue?: Maybe<Scalars["String"]>;
  deleteEpisode?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteGenre?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteMovie?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteParentalGuidance?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deletePerson?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteRating?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteRole?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteSeason?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteSkylarkAsset?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteSkylarkAudioTrack?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteSkylarkChannel?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteSkylarkDRMProvider?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteSkylarkEPGProgramme?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteSkylarkImage?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteSkylarkPlaybackDetail?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteSkylarkPlaybackDetailAttribute?: Maybe<
    Array<Maybe<ObjectDeleteResponse>>
  >;
  deleteSkylarkPlaybackProvider?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteSkylarkPlaybackURLTemplate?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteSkylarkProviderCredential?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteSkylarkSet?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteSkylarkTag?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteSkylarkTextTrack?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteSkylarkVideoTrack?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  deleteTheme?: Maybe<Array<Maybe<ObjectDeleteResponse>>>;
  editEnumConfiguration?: Maybe<ConfigurationResponse>;
  editFieldConfiguration?: Maybe<ConfigurationResponse>;
  editRelationshipConfiguration?: Maybe<ConfigurationResponse>;
  editSearchableFields?: Maybe<Array<Maybe<Scalars["String"]>>>;
  setObjectConfiguration?: Maybe<ObjectConfig>;
  updateAvailability?: Maybe<Availability>;
  updateBrand?: Maybe<Brand>;
  updateCredit?: Maybe<Credit>;
  updateDimension?: Maybe<Dimension>;
  updateDimensionValue?: Maybe<DimensionValue>;
  updateEpisode?: Maybe<Episode>;
  updateGenre?: Maybe<Genre>;
  updateMovie?: Maybe<Movie>;
  updateParentalGuidance?: Maybe<ParentalGuidance>;
  updatePerson?: Maybe<Person>;
  updateRating?: Maybe<Rating>;
  updateRole?: Maybe<Role>;
  updateSeason?: Maybe<Season>;
  updateSkylarkAsset?: Maybe<SkylarkAsset>;
  updateSkylarkAudioTrack?: Maybe<SkylarkAudioTrack>;
  updateSkylarkChannel?: Maybe<SkylarkChannel>;
  updateSkylarkDRMProvider?: Maybe<SkylarkDrmProvider>;
  updateSkylarkEPGProgramme?: Maybe<SkylarkEpgProgramme>;
  updateSkylarkImage?: Maybe<SkylarkImage>;
  updateSkylarkPlaybackDetail?: Maybe<SkylarkPlaybackDetail>;
  updateSkylarkPlaybackDetailAttribute?: Maybe<SkylarkPlaybackDetailAttribute>;
  updateSkylarkPlaybackProvider?: Maybe<SkylarkPlaybackProvider>;
  updateSkylarkPlaybackURLTemplate?: Maybe<SkylarkPlaybackUrlTemplate>;
  updateSkylarkProviderCredential?: Maybe<SkylarkProviderCredential>;
  updateSkylarkSet?: Maybe<SkylarkSet>;
  updateSkylarkTag?: Maybe<SkylarkTag>;
  updateSkylarkTextTrack?: Maybe<SkylarkTextTrack>;
  updateSkylarkVideoTrack?: Maybe<SkylarkVideoTrack>;
  updateTheme?: Maybe<Theme>;
};

export type MutationActivateConfigurationVersionArgs = {
  version?: InputMaybe<Scalars["Int"]>;
};

export type MutationCreateAvailabilityArgs = {
  availability: AvailabilityInput;
};

export type MutationCreateBrandArgs = {
  brand?: InputMaybe<BrandCreateInput>;
  language?: InputMaybe<Scalars["String"]>;
};

export type MutationCreateCreditArgs = {
  credit?: InputMaybe<CreditCreateInput>;
  language?: InputMaybe<Scalars["String"]>;
};

export type MutationCreateDimensionArgs = {
  dimension: DimensionInput;
};

export type MutationCreateDimensionValueArgs = {
  dimension_id?: InputMaybe<Scalars["String"]>;
  dimension_value: DimensionInput;
  external_id?: InputMaybe<Scalars["String"]>;
};

export type MutationCreateEpisodeArgs = {
  episode?: InputMaybe<EpisodeCreateInput>;
  language?: InputMaybe<Scalars["String"]>;
};

export type MutationCreateGenreArgs = {
  genre?: InputMaybe<GenreCreateInput>;
  language?: InputMaybe<Scalars["String"]>;
};

export type MutationCreateMovieArgs = {
  language?: InputMaybe<Scalars["String"]>;
  movie?: InputMaybe<MovieCreateInput>;
};

export type MutationCreateObjectConfigurationArgs = {
  objects?: InputMaybe<Array<InputMaybe<CreateObjectInput>>>;
  version?: InputMaybe<Scalars["Int"]>;
};

export type MutationCreateParentalGuidanceArgs = {
  language?: InputMaybe<Scalars["String"]>;
  parental_guidance?: InputMaybe<ParentalGuidanceCreateInput>;
};

export type MutationCreatePersonArgs = {
  language?: InputMaybe<Scalars["String"]>;
  person?: InputMaybe<PersonCreateInput>;
};

export type MutationCreateRatingArgs = {
  language?: InputMaybe<Scalars["String"]>;
  rating?: InputMaybe<RatingCreateInput>;
};

export type MutationCreateRoleArgs = {
  language?: InputMaybe<Scalars["String"]>;
  role?: InputMaybe<RoleCreateInput>;
};

export type MutationCreateSeasonArgs = {
  language?: InputMaybe<Scalars["String"]>;
  season?: InputMaybe<SeasonCreateInput>;
};

export type MutationCreateSkylarkAssetArgs = {
  language?: InputMaybe<Scalars["String"]>;
  skylark_asset?: InputMaybe<SkylarkAssetCreateInput>;
};

export type MutationCreateSkylarkAudioTrackArgs = {
  language?: InputMaybe<Scalars["String"]>;
  skylark_audio_track?: InputMaybe<SkylarkAudioTrackCreateInput>;
};

export type MutationCreateSkylarkChannelArgs = {
  language?: InputMaybe<Scalars["String"]>;
  skylark_channel?: InputMaybe<SkylarkChannelCreateInput>;
};

export type MutationCreateSkylarkDrmProviderArgs = {
  language?: InputMaybe<Scalars["String"]>;
  skylark_drm_provider?: InputMaybe<SkylarkDrmProviderCreateInput>;
};

export type MutationCreateSkylarkEpgProgrammeArgs = {
  language?: InputMaybe<Scalars["String"]>;
  skylark_epg_programme?: InputMaybe<SkylarkEpgProgrammeCreateInput>;
};

export type MutationCreateSkylarkImageArgs = {
  language?: InputMaybe<Scalars["String"]>;
  skylark_image?: InputMaybe<SkylarkImageCreateInput>;
};

export type MutationCreateSkylarkPlaybackDetailArgs = {
  language?: InputMaybe<Scalars["String"]>;
  skylark_playback_detail?: InputMaybe<SkylarkPlaybackDetailCreateInput>;
};

export type MutationCreateSkylarkPlaybackDetailAttributeArgs = {
  language?: InputMaybe<Scalars["String"]>;
  skylark_playback_detail_attribute?: InputMaybe<SkylarkPlaybackDetailAttributeCreateInput>;
};

export type MutationCreateSkylarkPlaybackProviderArgs = {
  language?: InputMaybe<Scalars["String"]>;
  skylark_playback_provider?: InputMaybe<SkylarkPlaybackProviderCreateInput>;
};

export type MutationCreateSkylarkPlaybackUrlTemplateArgs = {
  language?: InputMaybe<Scalars["String"]>;
  skylark_playback_url_template?: InputMaybe<SkylarkPlaybackUrlTemplateCreateInput>;
};

export type MutationCreateSkylarkProviderCredentialArgs = {
  language?: InputMaybe<Scalars["String"]>;
  skylark_provider_credential?: InputMaybe<SkylarkProviderCredentialCreateInput>;
};

export type MutationCreateSkylarkSetArgs = {
  language?: InputMaybe<Scalars["String"]>;
  skylark_set?: InputMaybe<SkylarkSetCreateInput>;
};

export type MutationCreateSkylarkTagArgs = {
  language?: InputMaybe<Scalars["String"]>;
  skylark_tag?: InputMaybe<SkylarkTagCreateInput>;
};

export type MutationCreateSkylarkTextTrackArgs = {
  language?: InputMaybe<Scalars["String"]>;
  skylark_text_track?: InputMaybe<SkylarkTextTrackCreateInput>;
};

export type MutationCreateSkylarkVideoTrackArgs = {
  language?: InputMaybe<Scalars["String"]>;
  skylark_video_track?: InputMaybe<SkylarkVideoTrackCreateInput>;
};

export type MutationCreateThemeArgs = {
  language?: InputMaybe<Scalars["String"]>;
  theme?: InputMaybe<ThemeCreateInput>;
};

export type MutationDeleteAvailabilityArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationDeleteBrandArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteCreditArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteDimensionArgs = {
  dimension_id?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
};

export type MutationDeleteDimensionValueArgs = {
  dimension_id?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  value_external_id?: InputMaybe<Scalars["String"]>;
  value_id?: InputMaybe<Scalars["String"]>;
};

export type MutationDeleteEpisodeArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteGenreArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteMovieArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteParentalGuidanceArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeletePersonArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteRatingArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteRoleArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteSeasonArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteSkylarkAssetArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteSkylarkAudioTrackArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteSkylarkChannelArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteSkylarkDrmProviderArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteSkylarkEpgProgrammeArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteSkylarkImageArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteSkylarkPlaybackDetailArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteSkylarkPlaybackDetailAttributeArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteSkylarkPlaybackProviderArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteSkylarkPlaybackUrlTemplateArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteSkylarkProviderCredentialArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteSkylarkSetArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationDeleteSkylarkTagArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteSkylarkTextTrackArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteSkylarkVideoTrackArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationDeleteThemeArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type MutationEditEnumConfigurationArgs = {
  enums?: InputMaybe<Array<InputMaybe<EditEnumInput>>>;
  version?: InputMaybe<Scalars["Int"]>;
};

export type MutationEditFieldConfigurationArgs = {
  fields: Array<InputMaybe<EditFieldInput>>;
  object_class: ObjectTypes;
  version?: InputMaybe<Scalars["Int"]>;
};

export type MutationEditRelationshipConfigurationArgs = {
  relationships?: InputMaybe<Array<InputMaybe<EditRelationshipInput>>>;
  version?: InputMaybe<Scalars["Int"]>;
};

export type MutationEditSearchableFieldsArgs = {
  fields: Array<InputMaybe<Scalars["String"]>>;
};

export type MutationSetObjectConfigurationArgs = {
  object: VisibleObjectTypes;
  object_config?: InputMaybe<ObjectConfigInput>;
};

export type MutationUpdateAvailabilityArgs = {
  availability: AvailabilityInput;
  external_id?: InputMaybe<Scalars["String"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateBrandArgs = {
  brand?: InputMaybe<BrandInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateCreditArgs = {
  credit?: InputMaybe<CreditInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateDimensionArgs = {
  dimension: UpdateDimensionInput;
  dimension_id?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateDimensionValueArgs = {
  dimension_id?: InputMaybe<Scalars["String"]>;
  dimension_value: UpdateDimensionInput;
  external_id?: InputMaybe<Scalars["String"]>;
  value_external_id?: InputMaybe<Scalars["String"]>;
  value_id?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateEpisodeArgs = {
  episode?: InputMaybe<EpisodeInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateGenreArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  genre?: InputMaybe<GenreInput>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateMovieArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  movie?: InputMaybe<MovieInput>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateParentalGuidanceArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  parental_guidance?: InputMaybe<ParentalGuidanceInput>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdatePersonArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  person?: InputMaybe<PersonInput>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateRatingArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  rating?: InputMaybe<RatingInput>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateRoleArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  role?: InputMaybe<RoleInput>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateSeasonArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  season?: InputMaybe<SeasonInput>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateSkylarkAssetArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  skylark_asset?: InputMaybe<SkylarkAssetInput>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateSkylarkAudioTrackArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  skylark_audio_track?: InputMaybe<SkylarkAudioTrackInput>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateSkylarkChannelArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  skylark_channel?: InputMaybe<SkylarkChannelInput>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateSkylarkDrmProviderArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  skylark_drm_provider?: InputMaybe<SkylarkDrmProviderInput>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateSkylarkEpgProgrammeArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  skylark_epg_programme?: InputMaybe<SkylarkEpgProgrammeInput>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateSkylarkImageArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  skylark_image?: InputMaybe<SkylarkImageInput>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateSkylarkPlaybackDetailArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  skylark_playback_detail?: InputMaybe<SkylarkPlaybackDetailInput>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateSkylarkPlaybackDetailAttributeArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  skylark_playback_detail_attribute?: InputMaybe<SkylarkPlaybackDetailAttributeInput>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateSkylarkPlaybackProviderArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  skylark_playback_provider?: InputMaybe<SkylarkPlaybackProviderInput>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateSkylarkPlaybackUrlTemplateArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  skylark_playback_url_template?: InputMaybe<SkylarkPlaybackUrlTemplateInput>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateSkylarkProviderCredentialArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  skylark_provider_credential?: InputMaybe<SkylarkProviderCredentialInput>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateSkylarkSetArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  skylark_set?: InputMaybe<SkylarkSetInput>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateSkylarkTagArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  skylark_tag?: InputMaybe<SkylarkTagInput>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateSkylarkTextTrackArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  skylark_text_track?: InputMaybe<SkylarkTextTrackInput>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateSkylarkVideoTrackArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  skylark_video_track?: InputMaybe<SkylarkVideoTrackInput>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type MutationUpdateThemeArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
  theme?: InputMaybe<ThemeInput>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type ObjectConfig = {
  __typename?: "ObjectConfig";
  colour?: Maybe<Scalars["String"]>;
  display_name?: Maybe<Scalars["String"]>;
  primary_field?: Maybe<Scalars["String"]>;
};

export type ObjectConfigInput = {
  colour?: InputMaybe<Scalars["String"]>;
  display_name?: InputMaybe<Scalars["String"]>;
  primary_field?: InputMaybe<Scalars["String"]>;
};

export type ObjectDeleteResponse = {
  __typename?: "ObjectDeleteResponse";
  global_version?: Maybe<Scalars["String"]>;
  language?: Maybe<Scalars["String"]>;
  language_version?: Maybe<Scalars["String"]>;
  message?: Maybe<Scalars["String"]>;
  removed_relationships?: Maybe<Array<Maybe<Scalars["String"]>>>;
  uid: Scalars["String"];
};

export enum ObjectTypes {
  Brand = "Brand",
  Credit = "Credit",
  Episode = "Episode",
  Genre = "Genre",
  Movie = "Movie",
  ParentalGuidance = "ParentalGuidance",
  Person = "Person",
  Rating = "Rating",
  Role = "Role",
  Season = "Season",
  SkylarkAsset = "SkylarkAsset",
  SkylarkImage = "SkylarkImage",
  SkylarkSet = "SkylarkSet",
  SkylarkTag = "SkylarkTag",
  Theme = "Theme",
}

export enum OrderDirections {
  Asc = "ASC",
  Desc = "DESC",
}

export type ParentalGuidance = Metadata &
  VisibleObject & {
    __typename?: "ParentalGuidance";
    _config?: Maybe<ObjectConfig>;
    _meta?: Maybe<_ParentalGuidanceMeta>;
    availability?: Maybe<AvailabilityListing>;
    content_of?: Maybe<SetListing>;
    external_id?: Maybe<Scalars["String"]>;
    ratings?: Maybe<RatingListing>;
    reason?: Maybe<Scalars["String"]>;
    slug?: Maybe<Scalars["String"]>;
    uid: Scalars["String"];
  };

export type ParentalGuidance_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type ParentalGuidanceAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type ParentalGuidanceContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type ParentalGuidanceRatingsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type ParentalGuidanceCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  reason?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<ParentalGuidanceRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
};

export type ParentalGuidanceInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  reason?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<ParentalGuidanceRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
};

export type ParentalGuidanceListing = Listing & {
  __typename?: "ParentalGuidanceListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<ParentalGuidance>>>;
};

export type ParentalGuidanceRelationshipInput = {
  create?: InputMaybe<Array<InputMaybe<ParentalGuidanceCreateInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type ParentalGuidanceRelationships = {
  ratings?: InputMaybe<RatingRelationshipInput>;
};

export type ParentalGuidanceSetCreate = {
  object?: InputMaybe<ParentalGuidanceInput>;
  position: Scalars["Int"];
};

export type ParentalGuidanceSetInput = {
  create?: InputMaybe<Array<InputMaybe<ParentalGuidanceSetCreate>>>;
  link?: InputMaybe<Array<InputMaybe<SetLink>>>;
  reposition?: InputMaybe<Array<InputMaybe<SetLink>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type Person = Metadata &
  VisibleObject & {
    __typename?: "Person";
    _config?: Maybe<ObjectConfig>;
    _meta?: Maybe<_PersonMeta>;
    abbreviation?: Maybe<Scalars["String"]>;
    alias?: Maybe<Scalars["String"]>;
    availability?: Maybe<AvailabilityListing>;
    bio_long?: Maybe<Scalars["String"]>;
    bio_medium?: Maybe<Scalars["String"]>;
    bio_short?: Maybe<Scalars["String"]>;
    content_of?: Maybe<SetListing>;
    credits?: Maybe<CreditListing>;
    date_of_birth?: Maybe<Scalars["AWSDate"]>;
    external_id?: Maybe<Scalars["String"]>;
    genre?: Maybe<Scalars["String"]>;
    genres?: Maybe<GenreListing>;
    images?: Maybe<SkylarkImageListing>;
    name?: Maybe<Scalars["String"]>;
    name_sort?: Maybe<Scalars["String"]>;
    place_of_birth?: Maybe<Scalars["AWSDate"]>;
    slug?: Maybe<Scalars["String"]>;
    tags?: Maybe<SkylarkTagListing>;
    themes?: Maybe<ThemeListing>;
    uid: Scalars["String"];
  };

export type Person_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type PersonAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type PersonContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type PersonCreditsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type PersonGenresArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type PersonImagesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type PersonTagsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type PersonThemesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type PersonCreateInput = {
  abbreviation?: InputMaybe<Scalars["String"]>;
  alias?: InputMaybe<Scalars["String"]>;
  availability?: InputMaybe<AssignAvailabilityInput>;
  bio_long?: InputMaybe<Scalars["String"]>;
  bio_medium?: InputMaybe<Scalars["String"]>;
  bio_short?: InputMaybe<Scalars["String"]>;
  date_of_birth?: InputMaybe<Scalars["AWSDate"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  genre?: InputMaybe<Scalars["String"]>;
  name?: InputMaybe<Scalars["String"]>;
  name_sort?: InputMaybe<Scalars["String"]>;
  place_of_birth?: InputMaybe<Scalars["AWSDate"]>;
  relationships?: InputMaybe<PersonRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
};

export type PersonInput = {
  abbreviation?: InputMaybe<Scalars["String"]>;
  alias?: InputMaybe<Scalars["String"]>;
  availability?: InputMaybe<AssignAvailabilityInput>;
  bio_long?: InputMaybe<Scalars["String"]>;
  bio_medium?: InputMaybe<Scalars["String"]>;
  bio_short?: InputMaybe<Scalars["String"]>;
  date_of_birth?: InputMaybe<Scalars["AWSDate"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  genre?: InputMaybe<Scalars["String"]>;
  name?: InputMaybe<Scalars["String"]>;
  name_sort?: InputMaybe<Scalars["String"]>;
  place_of_birth?: InputMaybe<Scalars["AWSDate"]>;
  relationships?: InputMaybe<PersonRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
};

export type PersonListing = Listing & {
  __typename?: "PersonListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<Person>>>;
};

export type PersonRelationshipInput = {
  create?: InputMaybe<Array<InputMaybe<PersonCreateInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type PersonRelationships = {
  credits?: InputMaybe<CreditRelationshipInput>;
  genres?: InputMaybe<GenreRelationshipInput>;
  images?: InputMaybe<SkylarkImageRelationshipInput>;
  tags?: InputMaybe<SkylarkTagRelationshipInput>;
  themes?: InputMaybe<ThemeRelationshipInput>;
};

export type PersonSetCreate = {
  object?: InputMaybe<PersonInput>;
  position: Scalars["Int"];
};

export type PersonSetInput = {
  create?: InputMaybe<Array<InputMaybe<PersonSetCreate>>>;
  link?: InputMaybe<Array<InputMaybe<SetLink>>>;
  reposition?: InputMaybe<Array<InputMaybe<SetLink>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export enum PlaybackType {
  Live = "LIVE",
  Vod = "VOD",
}

export enum PublishStage {
  Archive = "ARCHIVE",
  Preview = "PREVIEW",
  Prod = "PROD",
}

export type Query = {
  __typename?: "Query";
  getAccount?: Maybe<AccountDetails>;
  getActivationStatus?: Maybe<ActivationStatus>;
  getAvailability?: Maybe<Availability>;
  getBrand?: Maybe<Brand>;
  getConfigurationSchema?: Maybe<Scalars["AWSJSON"]>;
  getConfigurationVersion?: Maybe<SchemaConfiguration>;
  getCredit?: Maybe<Credit>;
  getDimension?: Maybe<Dimension>;
  getDimensionCode?: Maybe<Scalars["String"]>;
  getEpisode?: Maybe<Episode>;
  getGenre?: Maybe<Genre>;
  getMovie?: Maybe<Movie>;
  getObjectConfiguration?: Maybe<ObjectConfig>;
  getParentalGuidance?: Maybe<ParentalGuidance>;
  getPerson?: Maybe<Person>;
  getRating?: Maybe<Rating>;
  getRole?: Maybe<Role>;
  getSearchableFields?: Maybe<Array<Maybe<Scalars["String"]>>>;
  getSeason?: Maybe<Season>;
  getSkylarkAsset?: Maybe<SkylarkAsset>;
  getSkylarkAudioTrack?: Maybe<SkylarkAudioTrack>;
  getSkylarkChannel?: Maybe<SkylarkChannel>;
  getSkylarkDRMProvider?: Maybe<SkylarkDrmProvider>;
  getSkylarkEPGProgramme?: Maybe<SkylarkEpgProgramme>;
  getSkylarkImage?: Maybe<SkylarkImage>;
  getSkylarkPlaybackDetail?: Maybe<SkylarkPlaybackDetail>;
  getSkylarkPlaybackDetailAttribute?: Maybe<SkylarkPlaybackDetailAttribute>;
  getSkylarkPlaybackProvider?: Maybe<SkylarkPlaybackProvider>;
  getSkylarkPlaybackURLTemplate?: Maybe<SkylarkPlaybackUrlTemplate>;
  getSkylarkSet?: Maybe<SkylarkSet>;
  getSkylarkTag?: Maybe<SkylarkTag>;
  getSkylarkTextTrack?: Maybe<SkylarkTextTrack>;
  getSkylarkVideoTrack?: Maybe<SkylarkVideoTrack>;
  getTheme?: Maybe<Theme>;
  getUser?: Maybe<UserDetails>;
  listAvailability?: Maybe<AvailabilityListing>;
  listBrand?: Maybe<BrandListing>;
  listConfigurationVersions?: Maybe<SchemaConfigurationListing>;
  listCredit?: Maybe<CreditListing>;
  listDimensions?: Maybe<DimensionListing>;
  listEpisode?: Maybe<EpisodeListing>;
  listGenre?: Maybe<GenreListing>;
  listMovie?: Maybe<MovieListing>;
  listParentalGuidance?: Maybe<ParentalGuidanceListing>;
  listPerson?: Maybe<PersonListing>;
  listRating?: Maybe<RatingListing>;
  listRole?: Maybe<RoleListing>;
  listSeason?: Maybe<SeasonListing>;
  listSkylarkAsset?: Maybe<SkylarkAssetListing>;
  listSkylarkAudioTrack?: Maybe<SkylarkAudioTrackListing>;
  listSkylarkChannel?: Maybe<SkylarkChannelListing>;
  listSkylarkDRMProvider?: Maybe<SkylarkDrmProviderListing>;
  listSkylarkEPGProgramme?: Maybe<SkylarkEpgProgrammeListing>;
  listSkylarkImage?: Maybe<SkylarkImageListing>;
  listSkylarkPlaybackDetail?: Maybe<SkylarkPlaybackDetailListing>;
  listSkylarkPlaybackDetailAttribute?: Maybe<SkylarkPlaybackDetailAttributeListing>;
  listSkylarkPlaybackProvider?: Maybe<SkylarkPlaybackProviderListing>;
  listSkylarkPlaybackURLTemplate?: Maybe<SkylarkPlaybackUrlTemplateListing>;
  listSkylarkSet?: Maybe<SkylarkSetListing>;
  listSkylarkTag?: Maybe<SkylarkTagListing>;
  listSkylarkTextTrack?: Maybe<SkylarkTextTrackListing>;
  listSkylarkVideoTrack?: Maybe<SkylarkVideoTrackListing>;
  listTheme?: Maybe<ThemeListing>;
  search?: Maybe<SearchResultListing>;
};

export type QueryGetAvailabilityArgs = {
  external_id?: InputMaybe<Scalars["String"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetBrandArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["String"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetConfigurationSchemaArgs = {
  query?: InputMaybe<Scalars["String"]>;
  version: Scalars["Int"];
};

export type QueryGetConfigurationVersionArgs = {
  version: Scalars["Int"];
};

export type QueryGetCreditArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["String"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetDimensionArgs = {
  dimension_id?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
};

export type QueryGetDimensionCodeArgs = {
  dimensions: Array<InputMaybe<UserDimension>>;
};

export type QueryGetEpisodeArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["String"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetGenreArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["String"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetMovieArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["String"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetObjectConfigurationArgs = {
  object: VisibleObjectTypes;
};

export type QueryGetParentalGuidanceArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["String"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetPersonArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["String"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetRatingArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["String"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetRoleArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["String"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetSeasonArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["String"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetSkylarkAssetArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["AWSDateTime"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetSkylarkAudioTrackArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["AWSDateTime"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetSkylarkChannelArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["AWSDateTime"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetSkylarkDrmProviderArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["AWSDateTime"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetSkylarkEpgProgrammeArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["AWSDateTime"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetSkylarkImageArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["AWSDateTime"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetSkylarkPlaybackDetailArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["AWSDateTime"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetSkylarkPlaybackDetailAttributeArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["AWSDateTime"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetSkylarkPlaybackProviderArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["AWSDateTime"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetSkylarkPlaybackUrlTemplateArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["AWSDateTime"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetSkylarkSetArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["AWSDateTime"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetSkylarkTagArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["AWSDateTime"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetSkylarkTextTrackArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["AWSDateTime"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetSkylarkVideoTrackArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["AWSDateTime"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryGetThemeArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  external_id?: InputMaybe<Scalars["String"]>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["String"]>;
  uid?: InputMaybe<Scalars["String"]>;
};

export type QueryListAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type QueryListBrandArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["String"]>;
};

export type QueryListCreditArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["String"]>;
};

export type QueryListDimensionsArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type QueryListEpisodeArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["String"]>;
};

export type QueryListGenreArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["String"]>;
};

export type QueryListMovieArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["String"]>;
};

export type QueryListParentalGuidanceArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["String"]>;
};

export type QueryListPersonArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["String"]>;
};

export type QueryListRatingArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["String"]>;
};

export type QueryListRoleArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["String"]>;
};

export type QueryListSeasonArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["String"]>;
};

export type QueryListSkylarkAssetArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["AWSDateTime"]>;
};

export type QueryListSkylarkAudioTrackArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["AWSDateTime"]>;
};

export type QueryListSkylarkChannelArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["AWSDateTime"]>;
};

export type QueryListSkylarkDrmProviderArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["AWSDateTime"]>;
};

export type QueryListSkylarkEpgProgrammeArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["AWSDateTime"]>;
};

export type QueryListSkylarkImageArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["AWSDateTime"]>;
};

export type QueryListSkylarkPlaybackDetailArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["AWSDateTime"]>;
};

export type QueryListSkylarkPlaybackDetailAttributeArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["AWSDateTime"]>;
};

export type QueryListSkylarkPlaybackProviderArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["AWSDateTime"]>;
};

export type QueryListSkylarkPlaybackUrlTemplateArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["AWSDateTime"]>;
};

export type QueryListSkylarkSetArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["AWSDateTime"]>;
};

export type QueryListSkylarkTagArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["AWSDateTime"]>;
};

export type QueryListSkylarkTextTrackArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["AWSDateTime"]>;
};

export type QueryListSkylarkVideoTrackArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["AWSDateTime"]>;
};

export type QueryListThemeArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  time_travel?: InputMaybe<Scalars["String"]>;
};

export type QuerySearchArgs = {
  dimensions?: InputMaybe<Array<InputMaybe<UserDimension>>>;
  ignore_availability?: InputMaybe<Scalars["Boolean"]>;
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  offset?: InputMaybe<Scalars["Int"]>;
  query: Scalars["String"];
  time_travel?: InputMaybe<Scalars["AWSDateTime"]>;
};

export type Rating = Metadata &
  VisibleObject & {
    __typename?: "Rating";
    _config?: Maybe<ObjectConfig>;
    _meta?: Maybe<_RatingMeta>;
    assets?: Maybe<SkylarkAssetListing>;
    availability?: Maybe<AvailabilityListing>;
    brands?: Maybe<BrandListing>;
    content_of?: Maybe<SetListing>;
    description?: Maybe<Scalars["String"]>;
    episodes?: Maybe<EpisodeListing>;
    external_id?: Maybe<Scalars["String"]>;
    images?: Maybe<SkylarkImageListing>;
    movies?: Maybe<MovieListing>;
    parental_guidance?: Maybe<ParentalGuidanceListing>;
    schema?: Maybe<Scalars["String"]>;
    seasons?: Maybe<SeasonListing>;
    sets?: Maybe<SkylarkSetListing>;
    slug?: Maybe<Scalars["String"]>;
    title?: Maybe<Scalars["String"]>;
    uid: Scalars["String"];
    value?: Maybe<Scalars["String"]>;
  };

export type Rating_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type RatingAssetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type RatingAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type RatingBrandsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type RatingContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type RatingEpisodesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type RatingImagesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type RatingMoviesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type RatingParental_GuidanceArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type RatingSeasonsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type RatingSetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type RatingCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  description?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<RatingRelationships>;
  schema?: InputMaybe<Scalars["String"]>;
  slug?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  value?: InputMaybe<Scalars["String"]>;
};

export type RatingInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  description?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<RatingRelationships>;
  schema?: InputMaybe<Scalars["String"]>;
  slug?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  value?: InputMaybe<Scalars["String"]>;
};

export type RatingListing = Listing & {
  __typename?: "RatingListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<Rating>>>;
};

export type RatingRelationshipInput = {
  create?: InputMaybe<Array<InputMaybe<RatingCreateInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type RatingRelationships = {
  assets?: InputMaybe<SkylarkAssetRelationshipInput>;
  brands?: InputMaybe<BrandRelationshipInput>;
  episodes?: InputMaybe<EpisodeRelationshipInput>;
  images?: InputMaybe<SkylarkImageRelationshipInput>;
  movies?: InputMaybe<MovieRelationshipInput>;
  parental_guidance?: InputMaybe<ParentalGuidanceRelationshipInput>;
  seasons?: InputMaybe<SeasonRelationshipInput>;
  sets?: InputMaybe<SkylarkSetRelationshipInput>;
};

export type RatingSetCreate = {
  object?: InputMaybe<RatingInput>;
  position: Scalars["Int"];
};

export type RatingSetInput = {
  create?: InputMaybe<Array<InputMaybe<RatingSetCreate>>>;
  link?: InputMaybe<Array<InputMaybe<SetLink>>>;
  reposition?: InputMaybe<Array<InputMaybe<SetLink>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type Role = Metadata &
  VisibleObject & {
    __typename?: "Role";
    _config?: Maybe<ObjectConfig>;
    _meta?: Maybe<_RoleMeta>;
    availability?: Maybe<AvailabilityListing>;
    content_of?: Maybe<SetListing>;
    credits?: Maybe<CreditListing>;
    external_id?: Maybe<Scalars["String"]>;
    slug?: Maybe<Scalars["String"]>;
    title?: Maybe<Scalars["String"]>;
    uid: Scalars["String"];
  };

export type Role_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type RoleAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type RoleContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type RoleCreditsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type RoleCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<RoleRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
};

export type RoleInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<RoleRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
};

export type RoleListing = Listing & {
  __typename?: "RoleListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<Role>>>;
};

export type RoleRelationshipInput = {
  create?: InputMaybe<Array<InputMaybe<RoleCreateInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type RoleRelationships = {
  credits?: InputMaybe<CreditRelationshipInput>;
};

export type RoleSetCreate = {
  object?: InputMaybe<RoleInput>;
  position: Scalars["Int"];
};

export type RoleSetInput = {
  create?: InputMaybe<Array<InputMaybe<RoleSetCreate>>>;
  link?: InputMaybe<Array<InputMaybe<SetLink>>>;
  reposition?: InputMaybe<Array<InputMaybe<SetLink>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type SchemaConfigEnumListing = {
  __typename?: "SchemaConfigEnumListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<SchemaConfigurationEnum>>>;
};

export type SchemaConfigFieldListing = {
  __typename?: "SchemaConfigFieldListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<SchemaConfigurationField>>>;
};

export type SchemaConfigObjectListing = {
  __typename?: "SchemaConfigObjectListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<SchemaConfigurationObject>>>;
};

export type SchemaConfigRelationshipListing = {
  __typename?: "SchemaConfigRelationshipListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<SchemaConfigurationRelationship>>>;
};

export type SchemaConfiguration = {
  __typename?: "SchemaConfiguration";
  active?: Maybe<Scalars["Boolean"]>;
  base_version?: Maybe<Scalars["Int"]>;
  configured_objects?: Maybe<SchemaConfigObjectListing>;
  enums?: Maybe<SchemaConfigEnumListing>;
  published?: Maybe<Scalars["Boolean"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type SchemaConfigurationConfigured_ObjectsArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  object_name?: InputMaybe<Scalars["String"]>;
};

export type SchemaConfigurationEnumsArgs = {
  enum_name?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SchemaConfigurationEnum = {
  __typename?: "SchemaConfigurationEnum";
  name?: Maybe<Scalars["String"]>;
  values?: Maybe<Array<Maybe<Scalars["String"]>>>;
};

export type SchemaConfigurationField = {
  __typename?: "SchemaConfigurationField";
  enum_name?: Maybe<Scalars["String"]>;
  is_translatable?: Maybe<Scalars["Boolean"]>;
  name?: Maybe<Scalars["String"]>;
  operation?: Maybe<Scalars["String"]>;
  required?: Maybe<Scalars["Boolean"]>;
  type?: Maybe<Scalars["String"]>;
};

export type SchemaConfigurationListing = {
  __typename?: "SchemaConfigurationListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<SchemaConfiguration>>>;
};

export type SchemaConfigurationObject = {
  __typename?: "SchemaConfigurationObject";
  fields?: Maybe<SchemaConfigFieldListing>;
  name?: Maybe<Scalars["String"]>;
  operation?: Maybe<Scalars["String"]>;
  relationships?: Maybe<SchemaConfigRelationshipListing>;
};

export type SchemaConfigurationObjectFieldsArgs = {
  field_name?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SchemaConfigurationObjectRelationshipsArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  relationship_name?: InputMaybe<Scalars["String"]>;
};

export type SchemaConfigurationRelationship = {
  __typename?: "SchemaConfigurationRelationship";
  from_class?: Maybe<Scalars["String"]>;
  operation?: Maybe<Scalars["String"]>;
  relationship_name?: Maybe<Scalars["String"]>;
  reverse_relationship_name?: Maybe<Scalars["String"]>;
  to_class?: Maybe<Scalars["String"]>;
};

export type SearchListing = {
  count?: Maybe<Scalars["Int"]>;
};

export type SearchResultListing = SearchListing & {
  __typename?: "SearchResultListing";
  count?: Maybe<Scalars["Int"]>;
  objects?: Maybe<Array<Maybe<VisibleObject>>>;
  total_count?: Maybe<Scalars["Int"]>;
};

export type Season = Metadata &
  VisibleObject & {
    __typename?: "Season";
    _config?: Maybe<ObjectConfig>;
    _meta?: Maybe<_SeasonMeta>;
    assets?: Maybe<SkylarkAssetListing>;
    availability?: Maybe<AvailabilityListing>;
    brands?: Maybe<BrandListing>;
    content_of?: Maybe<SetListing>;
    credits?: Maybe<CreditListing>;
    episodes?: Maybe<EpisodeListing>;
    external_id?: Maybe<Scalars["String"]>;
    genres?: Maybe<GenreListing>;
    images?: Maybe<SkylarkImageListing>;
    number_of_episodes?: Maybe<Scalars["Int"]>;
    ratings?: Maybe<RatingListing>;
    release_date?: Maybe<Scalars["AWSDate"]>;
    season_number?: Maybe<Scalars["Int"]>;
    slug?: Maybe<Scalars["String"]>;
    synopsis?: Maybe<Scalars["String"]>;
    synopsis_short?: Maybe<Scalars["String"]>;
    tags?: Maybe<SkylarkTagListing>;
    themes?: Maybe<ThemeListing>;
    title?: Maybe<Scalars["String"]>;
    title_short?: Maybe<Scalars["String"]>;
    title_sort?: Maybe<Scalars["String"]>;
    uid: Scalars["String"];
  };

export type Season_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type SeasonAssetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SeasonAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SeasonBrandsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SeasonContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SeasonCreditsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SeasonEpisodesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SeasonGenresArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SeasonImagesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SeasonRatingsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SeasonTagsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SeasonThemesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SeasonCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  number_of_episodes?: InputMaybe<Scalars["Int"]>;
  relationships?: InputMaybe<SeasonRelationships>;
  release_date?: InputMaybe<Scalars["AWSDate"]>;
  season_number?: InputMaybe<Scalars["Int"]>;
  slug?: InputMaybe<Scalars["String"]>;
  synopsis?: InputMaybe<Scalars["String"]>;
  synopsis_short?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  title_short?: InputMaybe<Scalars["String"]>;
  title_sort?: InputMaybe<Scalars["String"]>;
};

export type SeasonInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  number_of_episodes?: InputMaybe<Scalars["Int"]>;
  relationships?: InputMaybe<SeasonRelationships>;
  release_date?: InputMaybe<Scalars["AWSDate"]>;
  season_number?: InputMaybe<Scalars["Int"]>;
  slug?: InputMaybe<Scalars["String"]>;
  synopsis?: InputMaybe<Scalars["String"]>;
  synopsis_short?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  title_short?: InputMaybe<Scalars["String"]>;
  title_sort?: InputMaybe<Scalars["String"]>;
};

export type SeasonListing = Listing & {
  __typename?: "SeasonListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<Season>>>;
};

export type SeasonRelationshipInput = {
  create?: InputMaybe<Array<InputMaybe<SeasonCreateInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type SeasonRelationships = {
  assets?: InputMaybe<SkylarkAssetRelationshipInput>;
  brands?: InputMaybe<BrandRelationshipInput>;
  credits?: InputMaybe<CreditRelationshipInput>;
  episodes?: InputMaybe<EpisodeRelationshipInput>;
  genres?: InputMaybe<GenreRelationshipInput>;
  images?: InputMaybe<SkylarkImageRelationshipInput>;
  ratings?: InputMaybe<RatingRelationshipInput>;
  tags?: InputMaybe<SkylarkTagRelationshipInput>;
  themes?: InputMaybe<ThemeRelationshipInput>;
};

export type SeasonSetCreate = {
  object?: InputMaybe<SeasonInput>;
  position: Scalars["Int"];
};

export type SeasonSetInput = {
  create?: InputMaybe<Array<InputMaybe<SeasonSetCreate>>>;
  link?: InputMaybe<Array<InputMaybe<SetLink>>>;
  reposition?: InputMaybe<Array<InputMaybe<SetLink>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type Set = {
  content?: Maybe<MetadataListing>;
};

export type SetContentArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order?: InputMaybe<OrderDirections>;
};

export type SetContent = {
  __typename?: "SetContent";
  object?: Maybe<Metadata>;
  position?: Maybe<Scalars["Int"]>;
};

export type SetContentRelationships = {
  Brand?: InputMaybe<BrandSetInput>;
  Credit?: InputMaybe<CreditSetInput>;
  Episode?: InputMaybe<EpisodeSetInput>;
  Genre?: InputMaybe<GenreSetInput>;
  Movie?: InputMaybe<MovieSetInput>;
  ParentalGuidance?: InputMaybe<ParentalGuidanceSetInput>;
  Person?: InputMaybe<PersonSetInput>;
  Rating?: InputMaybe<RatingSetInput>;
  Role?: InputMaybe<RoleSetInput>;
  Season?: InputMaybe<SeasonSetInput>;
  SkylarkAsset?: InputMaybe<SkylarkAssetSetInput>;
  SkylarkChannel?: InputMaybe<SkylarkChannelSetInput>;
  SkylarkEPGProgramme?: InputMaybe<SkylarkEpgProgrammeSetInput>;
  SkylarkImage?: InputMaybe<SkylarkImageSetInput>;
  SkylarkSet?: InputMaybe<SubSkylarkSetInput>;
  SkylarkTag?: InputMaybe<SkylarkTagSetInput>;
  Theme?: InputMaybe<ThemeSetInput>;
};

export type SetLink = {
  position: Scalars["Int"];
  uid: Scalars["String"];
};

export type SetListing = {
  __typename?: "SetListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<Set>>>;
};

export enum SetType {
  Collection = "COLLECTION",
  Page = "PAGE",
  Rail = "RAIL",
  Slider = "SLIDER",
}

export type SkylarkAsset = Metadata &
  VisibleObject & {
    __typename?: "SkylarkAsset";
    _config?: Maybe<ObjectConfig>;
    _meta?: Maybe<_SkylarkAssetMeta>;
    audio_tracks?: Maybe<SkylarkAudioTrackListing>;
    availability?: Maybe<AvailabilityListing>;
    brands?: Maybe<BrandListing>;
    content_of?: Maybe<SetListing>;
    drm_providers?: Maybe<SkylarkDrmProviderListing>;
    duration?: Maybe<Scalars["Int"]>;
    episodes?: Maybe<EpisodeListing>;
    external_id?: Maybe<Scalars["String"]>;
    images?: Maybe<SkylarkImageListing>;
    ingest_file?: Maybe<Scalars["String"]>;
    movies?: Maybe<MovieListing>;
    playback_details?: Maybe<SkylarkPlaybackDetailListing>;
    playback_providers?: Maybe<SkylarkPlaybackProviderListing>;
    ratings?: Maybe<RatingListing>;
    release_date?: Maybe<Scalars["String"]>;
    seasons?: Maybe<SeasonListing>;
    sets?: Maybe<SkylarkSetListing>;
    slug?: Maybe<Scalars["String"]>;
    tags?: Maybe<SkylarkTagListing>;
    text_tracks?: Maybe<SkylarkTextTrackListing>;
    title?: Maybe<Scalars["String"]>;
    type?: Maybe<Scalars["String"]>;
    uid: Scalars["String"];
    url?: Maybe<Scalars["String"]>;
    video_tracks?: Maybe<SkylarkVideoTrackListing>;
  };

export type SkylarkAsset_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type SkylarkAssetAudio_TracksArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkAssetAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkAssetBrandsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkAssetContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkAssetDrm_ProvidersArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkAssetEpisodesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkAssetImagesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkAssetMoviesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkAssetPlayback_DetailsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkAssetPlayback_ProvidersArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkAssetRatingsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkAssetSeasonsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkAssetSetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkAssetTagsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkAssetText_TracksArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkAssetVideo_TracksArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkAssetCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  duration?: InputMaybe<Scalars["Int"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  ingest_file?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkAssetRelationships>;
  release_date?: InputMaybe<Scalars["AWSDate"]>;
  slug?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  type?: InputMaybe<AssetType>;
  url?: InputMaybe<Scalars["AWSURL"]>;
};

export type SkylarkAssetInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  duration?: InputMaybe<Scalars["Int"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  ingest_file?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkAssetRelationships>;
  release_date?: InputMaybe<Scalars["AWSDate"]>;
  slug?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  type?: InputMaybe<AssetType>;
  url?: InputMaybe<Scalars["AWSURL"]>;
};

export type SkylarkAssetListing = Listing & {
  __typename?: "SkylarkAssetListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<SkylarkAsset>>>;
};

export type SkylarkAssetRelationshipInput = {
  create?: InputMaybe<Array<InputMaybe<SkylarkAssetInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type SkylarkAssetRelationships = {
  audio_tracks?: InputMaybe<SkylarkAudioTrackRelationshipInput>;
  brands?: InputMaybe<BrandRelationshipInput>;
  drm_providers?: InputMaybe<SkylarkDrmProviderRelationshipInput>;
  episodes?: InputMaybe<EpisodeRelationshipInput>;
  images?: InputMaybe<SkylarkImageRelationshipInput>;
  movies?: InputMaybe<MovieRelationshipInput>;
  playback_details?: InputMaybe<SkylarkPlaybackDetailRelationshipInput>;
  playback_providers?: InputMaybe<SkylarkPlaybackProviderRelationshipInput>;
  ratings?: InputMaybe<RatingRelationshipInput>;
  seasons?: InputMaybe<SeasonRelationshipInput>;
  sets?: InputMaybe<SkylarkSetRelationshipInput>;
  tags?: InputMaybe<SkylarkTagRelationshipInput>;
  text_tracks?: InputMaybe<SkylarkTextTrackRelationshipInput>;
  video_tracks?: InputMaybe<SkylarkVideoTrackRelationshipInput>;
};

export type SkylarkAssetSetCreate = {
  object?: InputMaybe<SkylarkAssetInput>;
  position: Scalars["Int"];
};

export type SkylarkAssetSetInput = {
  create?: InputMaybe<Array<InputMaybe<SkylarkAssetSetCreate>>>;
  link?: InputMaybe<Array<InputMaybe<SetLink>>>;
  reposition?: InputMaybe<Array<InputMaybe<SetLink>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type SkylarkAudioTrack = HiddenObject & {
  __typename?: "SkylarkAudioTrack";
  _config?: Maybe<ObjectConfig>;
  _meta?: Maybe<_SkylarkAudioTrackMeta>;
  assets?: Maybe<SkylarkAssetListing>;
  availability?: Maybe<AvailabilityListing>;
  bitrate?: Maybe<Scalars["Int"]>;
  channels?: Maybe<Scalars["Float"]>;
  codec?: Maybe<Scalars["String"]>;
  epg_programmes?: Maybe<SkylarkEpgProgrammeListing>;
  external_id?: Maybe<Scalars["String"]>;
  format?: Maybe<Scalars["String"]>;
  language_code?: Maybe<Scalars["String"]>;
  slug?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  uid: Scalars["String"];
};

export type SkylarkAudioTrack_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type SkylarkAudioTrackAssetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkAudioTrackAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkAudioTrackEpg_ProgrammesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkAudioTrackCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  bitrate?: InputMaybe<Scalars["Int"]>;
  channels?: InputMaybe<Scalars["Float"]>;
  codec?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  format?: InputMaybe<Scalars["String"]>;
  language_code?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkAudioTrackRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
};

export type SkylarkAudioTrackInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  bitrate?: InputMaybe<Scalars["Int"]>;
  channels?: InputMaybe<Scalars["Float"]>;
  codec?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  format?: InputMaybe<Scalars["String"]>;
  language_code?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkAudioTrackRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
};

export type SkylarkAudioTrackListing = Listing & {
  __typename?: "SkylarkAudioTrackListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<SkylarkAudioTrack>>>;
};

export type SkylarkAudioTrackRelationshipInput = {
  create?: InputMaybe<Array<InputMaybe<SkylarkAudioTrackInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type SkylarkAudioTrackRelationships = {
  assets?: InputMaybe<SkylarkAssetRelationshipInput>;
  epg_programmes?: InputMaybe<SkylarkEpgProgrammeRelationshipInput>;
};

export type SkylarkChannel = Metadata &
  VisibleObject & {
    __typename?: "SkylarkChannel";
    _config?: Maybe<ObjectConfig>;
    _meta?: Maybe<_SkylarkChannelMeta>;
    availability?: Maybe<AvailabilityListing>;
    content_of?: Maybe<SetListing>;
    epg_programmes?: Maybe<SkylarkEpgProgrammeListing>;
    external_id?: Maybe<Scalars["String"]>;
    images?: Maybe<SkylarkImageListing>;
    name?: Maybe<Scalars["String"]>;
    playback_details?: Maybe<SkylarkPlaybackDetailListing>;
    slug?: Maybe<Scalars["String"]>;
    tags?: Maybe<SkylarkTagListing>;
    uid: Scalars["String"];
    url?: Maybe<Scalars["String"]>;
  };

export type SkylarkChannel_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type SkylarkChannelAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkChannelContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkChannelEpg_ProgrammesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkChannelImagesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkChannelPlayback_DetailsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkChannelTagsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkChannelCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  name?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkChannelRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  url?: InputMaybe<Scalars["AWSURL"]>;
};

export type SkylarkChannelInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  name?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkChannelRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  url?: InputMaybe<Scalars["AWSURL"]>;
};

export type SkylarkChannelListing = Listing & {
  __typename?: "SkylarkChannelListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<SkylarkChannel>>>;
};

export type SkylarkChannelRelationshipInput = {
  create?: InputMaybe<Array<InputMaybe<SkylarkChannelInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type SkylarkChannelRelationships = {
  epg_programmes?: InputMaybe<SkylarkEpgProgrammeRelationshipInput>;
  images?: InputMaybe<SkylarkImageRelationshipInput>;
  playback_details?: InputMaybe<SkylarkPlaybackDetailRelationshipInput>;
  tags?: InputMaybe<SkylarkTagRelationshipInput>;
};

export type SkylarkChannelSetCreate = {
  object?: InputMaybe<SkylarkChannelInput>;
  position: Scalars["Int"];
};

export type SkylarkChannelSetInput = {
  create?: InputMaybe<Array<InputMaybe<SkylarkChannelSetCreate>>>;
  link?: InputMaybe<Array<InputMaybe<SetLink>>>;
  reposition?: InputMaybe<Array<InputMaybe<SetLink>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type SkylarkDrmProvider = HiddenObject & {
  __typename?: "SkylarkDRMProvider";
  _config?: Maybe<ObjectConfig>;
  _meta?: Maybe<_SkylarkDrmProviderMeta>;
  assets?: Maybe<SkylarkAssetListing>;
  availability?: Maybe<AvailabilityListing>;
  credentials?: Maybe<SkylarkProviderCredentialListing>;
  description?: Maybe<Scalars["String"]>;
  external_id?: Maybe<Scalars["String"]>;
  playback_details?: Maybe<SkylarkPlaybackDetailListing>;
  slug?: Maybe<Scalars["String"]>;
  uid: Scalars["String"];
  url?: Maybe<Scalars["String"]>;
};

export type SkylarkDrmProvider_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type SkylarkDrmProviderAssetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkDrmProviderAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkDrmProviderCredentialsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkDrmProviderPlayback_DetailsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkDrmProviderCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  description?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkDrmProviderRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  url?: InputMaybe<Scalars["AWSURL"]>;
};

export type SkylarkDrmProviderInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  description?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkDrmProviderRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  url?: InputMaybe<Scalars["AWSURL"]>;
};

export type SkylarkDrmProviderListing = Listing & {
  __typename?: "SkylarkDRMProviderListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<SkylarkDrmProvider>>>;
};

export type SkylarkDrmProviderRelationshipInput = {
  create?: InputMaybe<Array<InputMaybe<SkylarkDrmProviderInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type SkylarkDrmProviderRelationships = {
  assets?: InputMaybe<SkylarkAssetRelationshipInput>;
  credentials?: InputMaybe<SkylarkProviderCredentialRelationshipInput>;
  playback_details?: InputMaybe<SkylarkPlaybackDetailRelationshipInput>;
};

export type SkylarkEpgProgramme = Metadata &
  VisibleObject & {
    __typename?: "SkylarkEPGProgramme";
    _config?: Maybe<ObjectConfig>;
    _meta?: Maybe<_SkylarkEpgProgrammeMeta>;
    audio_tracks?: Maybe<SkylarkAudioTrackListing>;
    availability?: Maybe<AvailabilityListing>;
    channels?: Maybe<SkylarkChannelListing>;
    content_of?: Maybe<SetListing>;
    external_id?: Maybe<Scalars["String"]>;
    images?: Maybe<SkylarkImageListing>;
    name?: Maybe<Scalars["String"]>;
    playback_details?: Maybe<SkylarkPlaybackDetailListing>;
    slug?: Maybe<Scalars["String"]>;
    tags?: Maybe<SkylarkTagListing>;
    uid: Scalars["String"];
    url?: Maybe<Scalars["String"]>;
    video_tracks?: Maybe<SkylarkVideoTrackListing>;
  };

export type SkylarkEpgProgramme_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type SkylarkEpgProgrammeAudio_TracksArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkEpgProgrammeAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkEpgProgrammeChannelsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkEpgProgrammeContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkEpgProgrammeImagesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkEpgProgrammePlayback_DetailsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkEpgProgrammeTagsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkEpgProgrammeVideo_TracksArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkEpgProgrammeCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  name?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkEpgProgrammeRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  url?: InputMaybe<Scalars["AWSURL"]>;
};

export type SkylarkEpgProgrammeInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  name?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkEpgProgrammeRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  url?: InputMaybe<Scalars["AWSURL"]>;
};

export type SkylarkEpgProgrammeListing = Listing & {
  __typename?: "SkylarkEPGProgrammeListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<SkylarkEpgProgramme>>>;
};

export type SkylarkEpgProgrammeRelationshipInput = {
  create?: InputMaybe<Array<InputMaybe<SkylarkEpgProgrammeInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type SkylarkEpgProgrammeRelationships = {
  audio_tracks?: InputMaybe<SkylarkAudioTrackRelationshipInput>;
  channels?: InputMaybe<SkylarkChannelRelationshipInput>;
  images?: InputMaybe<SkylarkImageRelationshipInput>;
  playback_details?: InputMaybe<SkylarkPlaybackDetailRelationshipInput>;
  tags?: InputMaybe<SkylarkTagRelationshipInput>;
  video_tracks?: InputMaybe<SkylarkVideoTrackRelationshipInput>;
};

export type SkylarkEpgProgrammeSetCreate = {
  object?: InputMaybe<SkylarkEpgProgrammeInput>;
  position: Scalars["Int"];
};

export type SkylarkEpgProgrammeSetInput = {
  create?: InputMaybe<Array<InputMaybe<SkylarkEpgProgrammeSetCreate>>>;
  link?: InputMaybe<Array<InputMaybe<SetLink>>>;
  reposition?: InputMaybe<Array<InputMaybe<SetLink>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type SkylarkImage = MediaFile &
  Metadata &
  VisibleObject & {
    __typename?: "SkylarkImage";
    _config?: Maybe<ObjectConfig>;
    _meta?: Maybe<_SkylarkImageMeta>;
    assets?: Maybe<SkylarkAssetListing>;
    availability?: Maybe<AvailabilityListing>;
    brands?: Maybe<BrandListing>;
    channels?: Maybe<SkylarkChannelListing>;
    content_of?: Maybe<SetListing>;
    content_type?: Maybe<Scalars["String"]>;
    description?: Maybe<Scalars["String"]>;
    download_from_url?: Maybe<Scalars["String"]>;
    epg_programmes?: Maybe<SkylarkEpgProgrammeListing>;
    episodes?: Maybe<EpisodeListing>;
    external_id?: Maybe<Scalars["String"]>;
    external_url?: Maybe<Scalars["String"]>;
    file_name?: Maybe<Scalars["String"]>;
    genres?: Maybe<GenreListing>;
    movies?: Maybe<MovieListing>;
    people?: Maybe<PersonListing>;
    ratings?: Maybe<RatingListing>;
    seasons?: Maybe<SeasonListing>;
    sets?: Maybe<SkylarkSetListing>;
    slug?: Maybe<Scalars["String"]>;
    tags?: Maybe<SkylarkTagListing>;
    themes?: Maybe<ThemeListing>;
    title?: Maybe<Scalars["String"]>;
    type?: Maybe<Scalars["String"]>;
    uid: Scalars["String"];
    upload_url?: Maybe<Scalars["String"]>;
    url?: Maybe<Scalars["String"]>;
  };

export type SkylarkImage_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type SkylarkImageAssetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkImageAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkImageBrandsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkImageChannelsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkImageContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkImageEpg_ProgrammesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkImageEpisodesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkImageGenresArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkImageMoviesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkImagePeopleArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkImageRatingsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkImageSeasonsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkImageSetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkImageTagsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkImageThemesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkImageCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  content_type?: InputMaybe<Scalars["String"]>;
  description?: InputMaybe<Scalars["String"]>;
  download_from_url?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  external_url?: InputMaybe<Scalars["String"]>;
  file_name?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkImageRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  type?: InputMaybe<ImageType>;
};

export type SkylarkImageInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  content_type?: InputMaybe<Scalars["String"]>;
  description?: InputMaybe<Scalars["String"]>;
  download_from_url?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  external_url?: InputMaybe<Scalars["String"]>;
  file_name?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkImageRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  type?: InputMaybe<ImageType>;
};

export type SkylarkImageListing = Listing & {
  __typename?: "SkylarkImageListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<SkylarkImage>>>;
};

export type SkylarkImageRelationshipInput = {
  create?: InputMaybe<Array<InputMaybe<SkylarkImageInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type SkylarkImageRelationships = {
  assets?: InputMaybe<SkylarkAssetRelationshipInput>;
  brands?: InputMaybe<BrandRelationshipInput>;
  channels?: InputMaybe<SkylarkChannelRelationshipInput>;
  epg_programmes?: InputMaybe<SkylarkEpgProgrammeRelationshipInput>;
  episodes?: InputMaybe<EpisodeRelationshipInput>;
  genres?: InputMaybe<GenreRelationshipInput>;
  movies?: InputMaybe<MovieRelationshipInput>;
  people?: InputMaybe<PersonRelationshipInput>;
  ratings?: InputMaybe<RatingRelationshipInput>;
  seasons?: InputMaybe<SeasonRelationshipInput>;
  sets?: InputMaybe<SkylarkSetRelationshipInput>;
  tags?: InputMaybe<SkylarkTagRelationshipInput>;
  themes?: InputMaybe<ThemeRelationshipInput>;
};

export type SkylarkImageSetCreate = {
  object?: InputMaybe<SkylarkImageInput>;
  position: Scalars["Int"];
};

export type SkylarkImageSetInput = {
  create?: InputMaybe<Array<InputMaybe<SkylarkImageSetCreate>>>;
  link?: InputMaybe<Array<InputMaybe<SetLink>>>;
  reposition?: InputMaybe<Array<InputMaybe<SetLink>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type SkylarkPlaybackDetail = HiddenObject & {
  __typename?: "SkylarkPlaybackDetail";
  _config?: Maybe<ObjectConfig>;
  _meta?: Maybe<_SkylarkPlaybackDetailMeta>;
  assets?: Maybe<SkylarkAssetListing>;
  availability?: Maybe<AvailabilityListing>;
  channels?: Maybe<SkylarkChannelListing>;
  drm_providers?: Maybe<SkylarkDrmProviderListing>;
  epg_programmes?: Maybe<SkylarkEpgProgrammeListing>;
  external_id?: Maybe<Scalars["String"]>;
  playback_detail_attributes?: Maybe<SkylarkPlaybackDetailAttributeListing>;
  playback_providers?: Maybe<SkylarkPlaybackProviderListing>;
  slug?: Maybe<Scalars["String"]>;
  type?: Maybe<Scalars["String"]>;
  uid: Scalars["String"];
};

export type SkylarkPlaybackDetail_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type SkylarkPlaybackDetailAssetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkPlaybackDetailAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkPlaybackDetailChannelsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkPlaybackDetailDrm_ProvidersArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkPlaybackDetailEpg_ProgrammesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkPlaybackDetailPlayback_Detail_AttributesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkPlaybackDetailPlayback_ProvidersArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkPlaybackDetailAttribute = HiddenObject & {
  __typename?: "SkylarkPlaybackDetailAttribute";
  _config?: Maybe<ObjectConfig>;
  _meta?: Maybe<_SkylarkPlaybackDetailAttributeMeta>;
  availability?: Maybe<AvailabilityListing>;
  external_id?: Maybe<Scalars["String"]>;
  key?: Maybe<Scalars["String"]>;
  playback_details?: Maybe<SkylarkPlaybackDetailListing>;
  slug?: Maybe<Scalars["String"]>;
  uid: Scalars["String"];
  value?: Maybe<Scalars["String"]>;
};

export type SkylarkPlaybackDetailAttribute_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type SkylarkPlaybackDetailAttributeAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkPlaybackDetailAttributePlayback_DetailsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkPlaybackDetailAttributeCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  key?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkPlaybackDetailAttributeRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  value?: InputMaybe<Scalars["String"]>;
};

export type SkylarkPlaybackDetailAttributeInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  key?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkPlaybackDetailAttributeRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  value?: InputMaybe<Scalars["String"]>;
};

export type SkylarkPlaybackDetailAttributeListing = Listing & {
  __typename?: "SkylarkPlaybackDetailAttributeListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<SkylarkPlaybackDetailAttribute>>>;
};

export type SkylarkPlaybackDetailAttributeRelationshipInput = {
  create?: InputMaybe<Array<InputMaybe<SkylarkPlaybackDetailAttributeInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type SkylarkPlaybackDetailAttributeRelationships = {
  playback_details?: InputMaybe<SkylarkPlaybackDetailRelationshipInput>;
};

export type SkylarkPlaybackDetailCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkPlaybackDetailRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  type?: InputMaybe<PlaybackType>;
};

export type SkylarkPlaybackDetailInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkPlaybackDetailRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  type?: InputMaybe<PlaybackType>;
};

export type SkylarkPlaybackDetailListing = Listing & {
  __typename?: "SkylarkPlaybackDetailListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<SkylarkPlaybackDetail>>>;
};

export type SkylarkPlaybackDetailRelationshipInput = {
  create?: InputMaybe<Array<InputMaybe<SkylarkPlaybackDetailInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type SkylarkPlaybackDetailRelationships = {
  assets?: InputMaybe<SkylarkAssetRelationshipInput>;
  channels?: InputMaybe<SkylarkChannelRelationshipInput>;
  drm_providers?: InputMaybe<SkylarkDrmProviderRelationshipInput>;
  epg_programmes?: InputMaybe<SkylarkEpgProgrammeRelationshipInput>;
  playback_detail_attributes?: InputMaybe<SkylarkPlaybackDetailAttributeRelationshipInput>;
  playback_providers?: InputMaybe<SkylarkPlaybackProviderRelationshipInput>;
};

export type SkylarkPlaybackProvider = HiddenObject & {
  __typename?: "SkylarkPlaybackProvider";
  _config?: Maybe<ObjectConfig>;
  _meta?: Maybe<_SkylarkPlaybackProviderMeta>;
  assets?: Maybe<SkylarkAssetListing>;
  availability?: Maybe<AvailabilityListing>;
  base_url?: Maybe<Scalars["String"]>;
  credentials?: Maybe<SkylarkProviderCredentialListing>;
  description?: Maybe<Scalars["String"]>;
  external_id?: Maybe<Scalars["String"]>;
  playback_details?: Maybe<SkylarkPlaybackDetailListing>;
  playback_url_templates?: Maybe<SkylarkPlaybackUrlTemplateListing>;
  require_expiry_token?: Maybe<Scalars["Boolean"]>;
  slug?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  token_algorithm?: Maybe<Scalars["String"]>;
  token_secret_key?: Maybe<Scalars["String"]>;
  token_validity_duration_seconds?: Maybe<Scalars["Int"]>;
  uid: Scalars["String"];
};

export type SkylarkPlaybackProvider_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type SkylarkPlaybackProviderAssetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkPlaybackProviderAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkPlaybackProviderCredentialsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkPlaybackProviderPlayback_DetailsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkPlaybackProviderPlayback_Url_TemplatesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkPlaybackProviderCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  base_url?: InputMaybe<Scalars["String"]>;
  description?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkPlaybackProviderRelationships>;
  require_expiry_token?: InputMaybe<Scalars["Boolean"]>;
  slug?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  token_algorithm?: InputMaybe<TokenAlgorithm>;
  token_secret_key?: InputMaybe<Scalars["String"]>;
  token_validity_duration_seconds?: InputMaybe<Scalars["Int"]>;
};

export type SkylarkPlaybackProviderInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  base_url?: InputMaybe<Scalars["String"]>;
  description?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkPlaybackProviderRelationships>;
  require_expiry_token?: InputMaybe<Scalars["Boolean"]>;
  slug?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  token_algorithm?: InputMaybe<TokenAlgorithm>;
  token_secret_key?: InputMaybe<Scalars["String"]>;
  token_validity_duration_seconds?: InputMaybe<Scalars["Int"]>;
};

export type SkylarkPlaybackProviderListing = Listing & {
  __typename?: "SkylarkPlaybackProviderListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<SkylarkPlaybackProvider>>>;
};

export type SkylarkPlaybackProviderRelationshipInput = {
  create?: InputMaybe<Array<InputMaybe<SkylarkPlaybackProviderInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type SkylarkPlaybackProviderRelationships = {
  assets?: InputMaybe<SkylarkAssetRelationshipInput>;
  credentials?: InputMaybe<SkylarkProviderCredentialRelationshipInput>;
  playback_details?: InputMaybe<SkylarkPlaybackDetailRelationshipInput>;
  playback_url_templates?: InputMaybe<SkylarkPlaybackUrlTemplateRelationshipInput>;
};

export type SkylarkPlaybackUrlTemplate = HiddenObject & {
  __typename?: "SkylarkPlaybackURLTemplate";
  _config?: Maybe<ObjectConfig>;
  _meta?: Maybe<_SkylarkPlaybackUrlTemplateMeta>;
  availability?: Maybe<AvailabilityListing>;
  external_id?: Maybe<Scalars["String"]>;
  playback_providers?: Maybe<SkylarkPlaybackProviderListing>;
  slug?: Maybe<Scalars["String"]>;
  uid: Scalars["String"];
  url_template?: Maybe<Scalars["String"]>;
  url_type?: Maybe<Scalars["String"]>;
};

export type SkylarkPlaybackUrlTemplate_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type SkylarkPlaybackUrlTemplateAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkPlaybackUrlTemplatePlayback_ProvidersArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkPlaybackUrlTemplateCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkPlaybackUrlTemplateRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  url_template?: InputMaybe<Scalars["String"]>;
  url_type?: InputMaybe<Scalars["String"]>;
};

export type SkylarkPlaybackUrlTemplateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkPlaybackUrlTemplateRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  url_template?: InputMaybe<Scalars["String"]>;
  url_type?: InputMaybe<Scalars["String"]>;
};

export type SkylarkPlaybackUrlTemplateListing = Listing & {
  __typename?: "SkylarkPlaybackURLTemplateListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<SkylarkPlaybackUrlTemplate>>>;
};

export type SkylarkPlaybackUrlTemplateRelationshipInput = {
  create?: InputMaybe<Array<InputMaybe<SkylarkPlaybackUrlTemplateInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type SkylarkPlaybackUrlTemplateRelationships = {
  playback_providers?: InputMaybe<SkylarkPlaybackProviderRelationshipInput>;
};

export type SkylarkProviderCredential = HiddenObject & {
  __typename?: "SkylarkProviderCredential";
  _config?: Maybe<ObjectConfig>;
  _meta?: Maybe<_SkylarkProviderCredentialMeta>;
  availability?: Maybe<AvailabilityListing>;
  description?: Maybe<Scalars["String"]>;
  drm_providers?: Maybe<SkylarkDrmProviderListing>;
  external_id?: Maybe<Scalars["String"]>;
  key?: Maybe<Scalars["String"]>;
  playback_providers?: Maybe<SkylarkPlaybackProviderListing>;
  slug?: Maybe<Scalars["String"]>;
  uid: Scalars["String"];
};

export type SkylarkProviderCredential_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type SkylarkProviderCredentialAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkProviderCredentialDrm_ProvidersArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkProviderCredentialPlayback_ProvidersArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkProviderCredentialCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  description?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  key?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkProviderCredentialRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  value?: InputMaybe<Scalars["String"]>;
};

export type SkylarkProviderCredentialInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  description?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  key?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkProviderCredentialRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  value?: InputMaybe<Scalars["String"]>;
};

export type SkylarkProviderCredentialListing = Listing & {
  __typename?: "SkylarkProviderCredentialListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<SkylarkProviderCredential>>>;
};

export type SkylarkProviderCredentialRelationshipInput = {
  create?: InputMaybe<Array<InputMaybe<SkylarkProviderCredentialInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type SkylarkProviderCredentialRelationships = {
  drm_providers?: InputMaybe<SkylarkDrmProviderRelationshipInput>;
  playback_providers?: InputMaybe<SkylarkPlaybackProviderRelationshipInput>;
};

export type SkylarkSet = Metadata &
  Set &
  VisibleObject & {
    __typename?: "SkylarkSet";
    _config?: Maybe<ObjectConfig>;
    _meta?: Maybe<_SkylarkSetMeta>;
    assets?: Maybe<SkylarkAssetListing>;
    availability?: Maybe<AvailabilityListing>;
    content?: Maybe<MetadataListing>;
    content_of?: Maybe<SetListing>;
    credits?: Maybe<CreditListing>;
    description?: Maybe<Scalars["String"]>;
    external_id?: Maybe<Scalars["String"]>;
    genres?: Maybe<GenreListing>;
    images?: Maybe<SkylarkImageListing>;
    ratings?: Maybe<RatingListing>;
    release_date?: Maybe<Scalars["String"]>;
    slug?: Maybe<Scalars["String"]>;
    synopsis?: Maybe<Scalars["String"]>;
    synopsis_short?: Maybe<Scalars["String"]>;
    tags?: Maybe<SkylarkTagListing>;
    themes?: Maybe<ThemeListing>;
    title?: Maybe<Scalars["String"]>;
    title_short?: Maybe<Scalars["String"]>;
    title_sort?: Maybe<Scalars["String"]>;
    type?: Maybe<Scalars["String"]>;
    uid: Scalars["String"];
  };

export type SkylarkSet_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type SkylarkSetAssetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkSetAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkSetContentArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
  order?: InputMaybe<OrderDirections>;
};

export type SkylarkSetContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkSetCreditsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkSetGenresArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkSetImagesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkSetRatingsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkSetTagsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkSetThemesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkSetCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  content?: InputMaybe<SetContentRelationships>;
  description?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkSetRelationships>;
  release_date?: InputMaybe<Scalars["String"]>;
  slug?: InputMaybe<Scalars["String"]>;
  synopsis_short?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  title_short?: InputMaybe<Scalars["String"]>;
  type?: InputMaybe<SetType>;
};

export type SkylarkSetInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  content?: InputMaybe<SetContentRelationships>;
  description?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkSetRelationships>;
  release_date?: InputMaybe<Scalars["String"]>;
  slug?: InputMaybe<Scalars["String"]>;
  synopsis_short?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  title_short?: InputMaybe<Scalars["String"]>;
  type?: InputMaybe<SetType>;
};

export type SkylarkSetListing = {
  __typename?: "SkylarkSetListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<SkylarkSet>>>;
};

export type SkylarkSetRelationshipInput = {
  create?: InputMaybe<Array<InputMaybe<SkylarkSetInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type SkylarkSetRelationships = {
  assets?: InputMaybe<SkylarkAssetRelationshipInput>;
  credits?: InputMaybe<CreditRelationshipInput>;
  genres?: InputMaybe<GenreRelationshipInput>;
  images?: InputMaybe<SkylarkImageRelationshipInput>;
  ratings?: InputMaybe<RatingRelationshipInput>;
  tags?: InputMaybe<SkylarkTagRelationshipInput>;
  themes?: InputMaybe<ThemeRelationshipInput>;
};

export type SkylarkTag = Metadata &
  VisibleObject & {
    __typename?: "SkylarkTag";
    _config?: Maybe<ObjectConfig>;
    _meta?: Maybe<_SkylarkTagMeta>;
    assets?: Maybe<SkylarkAssetListing>;
    availability?: Maybe<AvailabilityListing>;
    brands?: Maybe<BrandListing>;
    channels?: Maybe<SkylarkChannelListing>;
    content_of?: Maybe<SetListing>;
    epg_programmes?: Maybe<SkylarkEpgProgrammeListing>;
    episodes?: Maybe<EpisodeListing>;
    external_id?: Maybe<Scalars["String"]>;
    images?: Maybe<SkylarkImageListing>;
    movies?: Maybe<MovieListing>;
    name?: Maybe<Scalars["String"]>;
    people?: Maybe<PersonListing>;
    seasons?: Maybe<SeasonListing>;
    sets?: Maybe<SkylarkSetListing>;
    slug?: Maybe<Scalars["String"]>;
    tag_category?: Maybe<Scalars["String"]>;
    uid: Scalars["String"];
  };

export type SkylarkTag_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type SkylarkTagAssetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkTagAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkTagBrandsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkTagChannelsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkTagContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkTagEpg_ProgrammesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkTagEpisodesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkTagImagesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkTagMoviesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkTagPeopleArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkTagSeasonsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkTagSetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkTagCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  name?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkTagRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  tag_category?: InputMaybe<Scalars["String"]>;
};

export type SkylarkTagInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  name?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkTagRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  tag_category?: InputMaybe<Scalars["String"]>;
};

export type SkylarkTagListing = Listing & {
  __typename?: "SkylarkTagListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<SkylarkTag>>>;
};

export type SkylarkTagRelationshipInput = {
  create?: InputMaybe<Array<InputMaybe<SkylarkTagInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type SkylarkTagRelationships = {
  assets?: InputMaybe<SkylarkAssetRelationshipInput>;
  brands?: InputMaybe<BrandRelationshipInput>;
  channels?: InputMaybe<SkylarkChannelRelationshipInput>;
  epg_programmes?: InputMaybe<SkylarkEpgProgrammeRelationshipInput>;
  episodes?: InputMaybe<EpisodeRelationshipInput>;
  images?: InputMaybe<SkylarkImageRelationshipInput>;
  movies?: InputMaybe<MovieRelationshipInput>;
  people?: InputMaybe<PersonRelationshipInput>;
  seasons?: InputMaybe<SeasonRelationshipInput>;
  sets?: InputMaybe<SkylarkSetRelationshipInput>;
};

export type SkylarkTagSetCreate = {
  object?: InputMaybe<SkylarkTagInput>;
  position: Scalars["Int"];
};

export type SkylarkTagSetInput = {
  create?: InputMaybe<Array<InputMaybe<SkylarkTagSetCreate>>>;
  link?: InputMaybe<Array<InputMaybe<SetLink>>>;
  reposition?: InputMaybe<Array<InputMaybe<SetLink>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type SkylarkTextTrack = HiddenObject &
  MediaFile & {
    __typename?: "SkylarkTextTrack";
    _config?: Maybe<ObjectConfig>;
    _meta?: Maybe<_SkylarkTextTrackMeta>;
    assets?: Maybe<SkylarkAssetListing>;
    availability?: Maybe<AvailabilityListing>;
    content_type?: Maybe<Scalars["String"]>;
    display_label?: Maybe<Scalars["String"]>;
    download_from_url?: Maybe<Scalars["String"]>;
    external_id?: Maybe<Scalars["String"]>;
    external_url?: Maybe<Scalars["String"]>;
    file_name?: Maybe<Scalars["String"]>;
    format?: Maybe<Scalars["String"]>;
    is_closed_captions?: Maybe<Scalars["Boolean"]>;
    is_default?: Maybe<Scalars["Boolean"]>;
    language_code?: Maybe<Scalars["String"]>;
    slug?: Maybe<Scalars["String"]>;
    title?: Maybe<Scalars["String"]>;
    uid: Scalars["String"];
    upload_url?: Maybe<Scalars["String"]>;
    url?: Maybe<Scalars["String"]>;
  };

export type SkylarkTextTrack_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type SkylarkTextTrackAssetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkTextTrackAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkTextTrackCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  content_type?: InputMaybe<Scalars["String"]>;
  display_label?: InputMaybe<Scalars["String"]>;
  download_from_url?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  external_url?: InputMaybe<Scalars["String"]>;
  file_name?: InputMaybe<Scalars["String"]>;
  format?: InputMaybe<TextTrackFormat>;
  is_closed_captions?: InputMaybe<Scalars["Boolean"]>;
  is_default?: InputMaybe<Scalars["Boolean"]>;
  language_code: Scalars["String"];
  relationships?: InputMaybe<SkylarkTextTrackRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  url?: InputMaybe<Scalars["AWSURL"]>;
};

export type SkylarkTextTrackInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  content_type?: InputMaybe<Scalars["String"]>;
  display_label?: InputMaybe<Scalars["String"]>;
  download_from_url?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  external_url?: InputMaybe<Scalars["String"]>;
  file_name?: InputMaybe<Scalars["String"]>;
  format?: InputMaybe<TextTrackFormat>;
  is_closed_captions?: InputMaybe<Scalars["Boolean"]>;
  is_default?: InputMaybe<Scalars["Boolean"]>;
  language_code?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<SkylarkTextTrackRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  url?: InputMaybe<Scalars["AWSURL"]>;
};

export type SkylarkTextTrackListing = Listing & {
  __typename?: "SkylarkTextTrackListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<SkylarkTextTrack>>>;
};

export type SkylarkTextTrackRelationshipInput = {
  create?: InputMaybe<Array<InputMaybe<SkylarkTextTrackInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type SkylarkTextTrackRelationships = {
  assets?: InputMaybe<SkylarkAssetRelationshipInput>;
};

export type SkylarkVideoTrack = HiddenObject & {
  __typename?: "SkylarkVideoTrack";
  _config?: Maybe<ObjectConfig>;
  _meta?: Maybe<_SkylarkVideoTrackMeta>;
  assets?: Maybe<SkylarkAssetListing>;
  availability?: Maybe<AvailabilityListing>;
  bitrate?: Maybe<Scalars["Int"]>;
  codec?: Maybe<Scalars["String"]>;
  colour?: Maybe<Scalars["String"]>;
  colour_depth?: Maybe<Scalars["String"]>;
  colour_encoding?: Maybe<Scalars["String"]>;
  epg_programmes?: Maybe<SkylarkEpgProgrammeListing>;
  external_id?: Maybe<Scalars["String"]>;
  format?: Maybe<Scalars["String"]>;
  frame_rate?: Maybe<Scalars["Float"]>;
  height?: Maybe<Scalars["Int"]>;
  slug?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  uid: Scalars["String"];
  width?: Maybe<Scalars["Int"]>;
};

export type SkylarkVideoTrack_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type SkylarkVideoTrackAssetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkVideoTrackAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkVideoTrackEpg_ProgrammesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type SkylarkVideoTrackCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  bitrate?: InputMaybe<Scalars["Int"]>;
  codec?: InputMaybe<Scalars["String"]>;
  colour?: InputMaybe<VideoColour>;
  colour_depth?: InputMaybe<VideoColourDepth>;
  colour_encoding?: InputMaybe<VideoColourEncoding>;
  external_id?: InputMaybe<Scalars["String"]>;
  format?: InputMaybe<VideoFormat>;
  frame_rate?: InputMaybe<Scalars["Float"]>;
  height?: InputMaybe<Scalars["Int"]>;
  relationships?: InputMaybe<SkylarkVideoTrackRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  width?: InputMaybe<Scalars["Int"]>;
};

export type SkylarkVideoTrackInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  bitrate?: InputMaybe<Scalars["Int"]>;
  codec?: InputMaybe<Scalars["String"]>;
  colour?: InputMaybe<VideoColour>;
  colour_depth?: InputMaybe<VideoColourDepth>;
  colour_encoding?: InputMaybe<VideoColourEncoding>;
  external_id?: InputMaybe<Scalars["String"]>;
  format?: InputMaybe<VideoFormat>;
  frame_rate?: InputMaybe<Scalars["Float"]>;
  height?: InputMaybe<Scalars["Int"]>;
  relationships?: InputMaybe<SkylarkVideoTrackRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
  width?: InputMaybe<Scalars["Int"]>;
};

export type SkylarkVideoTrackListing = Listing & {
  __typename?: "SkylarkVideoTrackListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<SkylarkVideoTrack>>>;
};

export type SkylarkVideoTrackRelationshipInput = {
  create?: InputMaybe<Array<InputMaybe<SkylarkVideoTrackInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type SkylarkVideoTrackRelationships = {
  assets?: InputMaybe<SkylarkAssetRelationshipInput>;
  epg_programmes?: InputMaybe<SkylarkEpgProgrammeRelationshipInput>;
};

export type SubSkylarkSetCreate = {
  object?: InputMaybe<SkylarkSetInput>;
  position: Scalars["Int"];
};

export type SubSkylarkSetInput = {
  create?: InputMaybe<Array<InputMaybe<SubSkylarkSetCreate>>>;
  link?: InputMaybe<Array<InputMaybe<SetLink>>>;
  reposition?: InputMaybe<Array<InputMaybe<SetLink>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export enum TextTrackFormat {
  Scc = "SCC",
  Srt = "SRT",
  Vtt = "VTT",
}

export type Theme = Metadata &
  VisibleObject & {
    __typename?: "Theme";
    _config?: Maybe<ObjectConfig>;
    _meta?: Maybe<_ThemeMeta>;
    availability?: Maybe<AvailabilityListing>;
    brands?: Maybe<BrandListing>;
    content_of?: Maybe<SetListing>;
    episodes?: Maybe<EpisodeListing>;
    external_id?: Maybe<Scalars["String"]>;
    images?: Maybe<SkylarkImageListing>;
    metadata_source?: Maybe<Scalars["String"]>;
    movies?: Maybe<MovieListing>;
    name?: Maybe<Scalars["String"]>;
    people?: Maybe<PersonListing>;
    seasons?: Maybe<SeasonListing>;
    sets?: Maybe<SkylarkSetListing>;
    slug?: Maybe<Scalars["String"]>;
    uid: Scalars["String"];
  };

export type Theme_MetaArgs = {
  global_version?: InputMaybe<Scalars["Int"]>;
  language?: InputMaybe<Scalars["String"]>;
  language_version?: InputMaybe<Scalars["Int"]>;
};

export type ThemeAvailabilityArgs = {
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type ThemeBrandsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type ThemeContent_OfArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type ThemeEpisodesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type ThemeImagesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type ThemeMoviesArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type ThemePeopleArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type ThemeSeasonsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type ThemeSetsArgs = {
  language?: InputMaybe<Scalars["String"]>;
  limit?: InputMaybe<Scalars["Int"]>;
  next_token?: InputMaybe<Scalars["String"]>;
};

export type ThemeCreateInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  metadata_source?: InputMaybe<Scalars["String"]>;
  name?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<ThemeRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
};

export type ThemeInput = {
  availability?: InputMaybe<AssignAvailabilityInput>;
  external_id?: InputMaybe<Scalars["String"]>;
  metadata_source?: InputMaybe<Scalars["String"]>;
  name?: InputMaybe<Scalars["String"]>;
  relationships?: InputMaybe<ThemeRelationships>;
  slug?: InputMaybe<Scalars["String"]>;
};

export type ThemeListing = Listing & {
  __typename?: "ThemeListing";
  count?: Maybe<Scalars["Int"]>;
  next_token?: Maybe<Scalars["String"]>;
  objects?: Maybe<Array<Maybe<Theme>>>;
};

export type ThemeRelationshipInput = {
  create?: InputMaybe<Array<InputMaybe<ThemeCreateInput>>>;
  link?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export type ThemeRelationships = {
  brands?: InputMaybe<BrandRelationshipInput>;
  episodes?: InputMaybe<EpisodeRelationshipInput>;
  images?: InputMaybe<SkylarkImageRelationshipInput>;
  movies?: InputMaybe<MovieRelationshipInput>;
  people?: InputMaybe<PersonRelationshipInput>;
  seasons?: InputMaybe<SeasonRelationshipInput>;
  sets?: InputMaybe<SkylarkSetRelationshipInput>;
};

export type ThemeSetCreate = {
  object?: InputMaybe<ThemeInput>;
  position: Scalars["Int"];
};

export type ThemeSetInput = {
  create?: InputMaybe<Array<InputMaybe<ThemeSetCreate>>>;
  link?: InputMaybe<Array<InputMaybe<SetLink>>>;
  reposition?: InputMaybe<Array<InputMaybe<SetLink>>>;
  unlink?: InputMaybe<Array<InputMaybe<Scalars["String"]>>>;
};

export enum TokenAlgorithm {
  Hs256 = "HS256",
  Rs256 = "RS256",
}

export type UpdateDimensionInput = {
  description?: InputMaybe<Scalars["String"]>;
  external_id?: InputMaybe<Scalars["String"]>;
  title?: InputMaybe<Scalars["String"]>;
};

export type UserDimension = {
  dimension: Scalars["String"];
  value: Scalars["String"];
};

export enum VideoColour {
  Bw = "BW",
  BwAndColour = "BW_AND_COLOUR",
  Colour = "COLOUR",
}

export enum VideoColourDepth {
  Hdr = "HDR",
  Sdr = "SDR",
}

export enum VideoColourEncoding {
  DolbyVision = "DOLBY_VISION",
  Hdr10 = "HDR10",
  Hdr10Plus = "HDR10_PLUS",
  HdrHlg = "HDR_HLG",
  Ntsc = "NTSC",
  Pal = "PAL",
  Secam = "SECAM",
}

export enum VideoFormat {
  FourK = "FOUR_K",
  FullHd = "FULL_HD",
  Hd = "HD",
  HdPlus = "HD_PLUS",
  Sd = "SD",
  Stereo_3DSideBySide = "STEREO_3D_SIDE_BY_SIDE",
  Stereo_3DTopAndBottom = "STEREO_3D_TOP_AND_BOTTOM",
  Uhd_4K = "UHD_4K",
  Uhd_8K = "UHD_8K",
}

export type VisibleObject = {
  external_id?: Maybe<Scalars["String"]>;
  slug?: Maybe<Scalars["String"]>;
  uid: Scalars["String"];
};

export enum VisibleObjectTypes {
  Availability = "Availability",
  Brand = "Brand",
  Credit = "Credit",
  Episode = "Episode",
  Genre = "Genre",
  Movie = "Movie",
  ParentalGuidance = "ParentalGuidance",
  Person = "Person",
  Rating = "Rating",
  Role = "Role",
  Season = "Season",
  SkylarkAsset = "SkylarkAsset",
  SkylarkChannel = "SkylarkChannel",
  SkylarkEpgProgramme = "SkylarkEPGProgramme",
  SkylarkImage = "SkylarkImage",
  SkylarkSet = "SkylarkSet",
  SkylarkTag = "SkylarkTag",
  Theme = "Theme",
}

export type _Audit = {
  __typename?: "_Audit";
  account?: Maybe<Scalars["String"]>;
  date?: Maybe<Scalars["String"]>;
  user?: Maybe<Scalars["String"]>;
};

export type _AvailabilityMeta = {
  __typename?: "_AvailabilityMeta";
  created?: Maybe<_Audit>;
  modified?: Maybe<_Audit>;
};

export type _BrandGlobal = _Global & {
  __typename?: "_BrandGlobal";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_BrandGlobal>>>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  release_date?: Maybe<Scalars["AWSDate"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _BrandLanguage = _Language & {
  __typename?: "_BrandLanguage";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_BrandLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  synopsis?: Maybe<Scalars["String"]>;
  synopsis_short?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  title_short?: Maybe<Scalars["String"]>;
  title_sort?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _BrandMeta = {
  __typename?: "_BrandMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_BrandGlobal>;
  language_data?: Maybe<_BrandLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _CreditGlobal = _Global & {
  __typename?: "_CreditGlobal";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_CreditGlobal>>>;
  modified?: Maybe<_Audit>;
  position?: Maybe<Scalars["Int"]>;
  publish_stage?: Maybe<PublishStage>;
  version?: Maybe<Scalars["Int"]>;
};

export type _CreditLanguage = _Language & {
  __typename?: "_CreditLanguage";
  character?: Maybe<Scalars["String"]>;
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_CreditLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _CreditMeta = {
  __typename?: "_CreditMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_CreditGlobal>;
  language_data?: Maybe<_CreditLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _DimensionMeta = {
  __typename?: "_DimensionMeta";
  created?: Maybe<_Audit>;
  modified?: Maybe<_Audit>;
};

export type _DimensionValueMeta = {
  __typename?: "_DimensionValueMeta";
  created?: Maybe<_Audit>;
  modified?: Maybe<_Audit>;
};

export type _EpisodeGlobal = _Global & {
  __typename?: "_EpisodeGlobal";
  created?: Maybe<_Audit>;
  episode_number?: Maybe<Scalars["Int"]>;
  history?: Maybe<Array<Maybe<_EpisodeGlobal>>>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  release_date?: Maybe<Scalars["AWSDate"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _EpisodeLanguage = _Language & {
  __typename?: "_EpisodeLanguage";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_EpisodeLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  synopsis?: Maybe<Scalars["String"]>;
  synopsis_short?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  title_short?: Maybe<Scalars["String"]>;
  title_sort?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _EpisodeMeta = {
  __typename?: "_EpisodeMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_EpisodeGlobal>;
  language_data?: Maybe<_EpisodeLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _FieldConfig = {
  __typename?: "_FieldConfig";
  name: Scalars["String"];
};

export type _GenreGlobal = _Global & {
  __typename?: "_GenreGlobal";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_GenreGlobal>>>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  version?: Maybe<Scalars["Int"]>;
};

export type _GenreLanguage = _Language & {
  __typename?: "_GenreLanguage";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_GenreLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  metadata_source?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  name?: Maybe<Scalars["String"]>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _GenreMeta = {
  __typename?: "_GenreMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_GenreGlobal>;
  language_data?: Maybe<_GenreLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _Global = {
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_Global>>>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  version?: Maybe<Scalars["Int"]>;
};

export type _Language = {
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_Language>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _MovieGlobal = _Global & {
  __typename?: "_MovieGlobal";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_MovieGlobal>>>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  release_date?: Maybe<Scalars["AWSDate"]>;
  version?: Maybe<Scalars["Int"]>;
  year_of_release?: Maybe<Scalars["Int"]>;
};

export type _MovieLanguage = _Language & {
  __typename?: "_MovieLanguage";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_MovieLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  synopsis?: Maybe<Scalars["String"]>;
  synopsis_short?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  title_short?: Maybe<Scalars["String"]>;
  title_sort?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _MovieMeta = {
  __typename?: "_MovieMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_MovieGlobal>;
  language_data?: Maybe<_MovieLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _ParentalGuidanceGlobal = _Global & {
  __typename?: "_ParentalGuidanceGlobal";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_ParentalGuidanceGlobal>>>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  version?: Maybe<Scalars["Int"]>;
};

export type _ParentalGuidanceLanguage = _Language & {
  __typename?: "_ParentalGuidanceLanguage";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_ParentalGuidanceLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  reason?: Maybe<Scalars["String"]>;
  slug?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _ParentalGuidanceMeta = {
  __typename?: "_ParentalGuidanceMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_ParentalGuidanceGlobal>;
  language_data?: Maybe<_ParentalGuidanceLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _PersonGlobal = _Global & {
  __typename?: "_PersonGlobal";
  created?: Maybe<_Audit>;
  date_of_birth?: Maybe<Scalars["AWSDate"]>;
  history?: Maybe<Array<Maybe<_PersonGlobal>>>;
  modified?: Maybe<_Audit>;
  place_of_birth?: Maybe<Scalars["AWSDate"]>;
  publish_stage?: Maybe<PublishStage>;
  version?: Maybe<Scalars["Int"]>;
};

export type _PersonLanguage = _Language & {
  __typename?: "_PersonLanguage";
  abbreviation?: Maybe<Scalars["String"]>;
  alias?: Maybe<Scalars["String"]>;
  bio_long?: Maybe<Scalars["String"]>;
  bio_medium?: Maybe<Scalars["String"]>;
  bio_short?: Maybe<Scalars["String"]>;
  created?: Maybe<_Audit>;
  genre?: Maybe<Scalars["String"]>;
  history?: Maybe<Array<Maybe<_PersonLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  name?: Maybe<Scalars["String"]>;
  name_sort?: Maybe<Scalars["String"]>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _PersonMeta = {
  __typename?: "_PersonMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_PersonGlobal>;
  language_data?: Maybe<_PersonLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _RatingGlobal = _Global & {
  __typename?: "_RatingGlobal";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_RatingGlobal>>>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  schema?: Maybe<Scalars["String"]>;
  value?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _RatingLanguage = _Language & {
  __typename?: "_RatingLanguage";
  created?: Maybe<_Audit>;
  description?: Maybe<Scalars["String"]>;
  history?: Maybe<Array<Maybe<_RatingLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _RatingMeta = {
  __typename?: "_RatingMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_RatingGlobal>;
  language_data?: Maybe<_RatingLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _RoleGlobal = _Global & {
  __typename?: "_RoleGlobal";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_RoleGlobal>>>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  version?: Maybe<Scalars["Int"]>;
};

export type _RoleLanguage = _Language & {
  __typename?: "_RoleLanguage";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_RoleLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _RoleMeta = {
  __typename?: "_RoleMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_RoleGlobal>;
  language_data?: Maybe<_RoleLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _SeasonGlobal = _Global & {
  __typename?: "_SeasonGlobal";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_SeasonGlobal>>>;
  modified?: Maybe<_Audit>;
  number_of_episodes?: Maybe<Scalars["Int"]>;
  publish_stage?: Maybe<PublishStage>;
  release_date?: Maybe<Scalars["AWSDate"]>;
  season_number?: Maybe<Scalars["Int"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SeasonLanguage = _Language & {
  __typename?: "_SeasonLanguage";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_SeasonLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  synopsis?: Maybe<Scalars["String"]>;
  synopsis_short?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  title_short?: Maybe<Scalars["String"]>;
  title_sort?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SeasonMeta = {
  __typename?: "_SeasonMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_SeasonGlobal>;
  language_data?: Maybe<_SeasonLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _SkylarkAssetGlobal = _Global & {
  __typename?: "_SkylarkAssetGlobal";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_SkylarkAssetGlobal>>>;
  ingest_file?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  type?: Maybe<Scalars["String"]>;
  url?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkAssetLanguage = _Language & {
  __typename?: "_SkylarkAssetLanguage";
  created?: Maybe<_Audit>;
  duration?: Maybe<Scalars["Int"]>;
  history?: Maybe<Array<Maybe<_SkylarkAssetLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  release_date?: Maybe<Scalars["String"]>;
  slug?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkAssetMeta = {
  __typename?: "_SkylarkAssetMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_SkylarkAssetGlobal>;
  language_data?: Maybe<_SkylarkAssetLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _SkylarkAudioTrackGlobal = _Global & {
  __typename?: "_SkylarkAudioTrackGlobal";
  bitrate?: Maybe<Scalars["Int"]>;
  channels?: Maybe<Scalars["Float"]>;
  codec?: Maybe<Scalars["String"]>;
  created?: Maybe<_Audit>;
  format?: Maybe<Scalars["String"]>;
  history?: Maybe<Array<Maybe<_SkylarkAudioTrackGlobal>>>;
  language_code?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkAudioTrackLanguage = _Language & {
  __typename?: "_SkylarkAudioTrackLanguage";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_SkylarkAudioTrackLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkAudioTrackMeta = {
  __typename?: "_SkylarkAudioTrackMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_SkylarkAudioTrackGlobal>;
  language_data?: Maybe<_SkylarkAudioTrackLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _SkylarkChannelGlobal = _Global & {
  __typename?: "_SkylarkChannelGlobal";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_SkylarkChannelGlobal>>>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  url?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkChannelLanguage = _Language & {
  __typename?: "_SkylarkChannelLanguage";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_SkylarkChannelLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  name?: Maybe<Scalars["String"]>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkChannelMeta = {
  __typename?: "_SkylarkChannelMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_SkylarkChannelGlobal>;
  language_data?: Maybe<_SkylarkChannelLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _SkylarkDrmProviderGlobal = _Global & {
  __typename?: "_SkylarkDRMProviderGlobal";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_SkylarkDrmProviderGlobal>>>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  url?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkDrmProviderLanguage = _Language & {
  __typename?: "_SkylarkDRMProviderLanguage";
  created?: Maybe<_Audit>;
  description?: Maybe<Scalars["String"]>;
  history?: Maybe<Array<Maybe<_SkylarkDrmProviderLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkDrmProviderMeta = {
  __typename?: "_SkylarkDRMProviderMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_SkylarkDrmProviderGlobal>;
  language_data?: Maybe<_SkylarkDrmProviderLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _SkylarkEpgProgrammeGlobal = _Global & {
  __typename?: "_SkylarkEPGProgrammeGlobal";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_SkylarkEpgProgrammeGlobal>>>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  url?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkEpgProgrammeLanguage = _Language & {
  __typename?: "_SkylarkEPGProgrammeLanguage";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_SkylarkEpgProgrammeLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  name?: Maybe<Scalars["String"]>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkEpgProgrammeMeta = {
  __typename?: "_SkylarkEPGProgrammeMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_SkylarkEpgProgrammeGlobal>;
  language_data?: Maybe<_SkylarkEpgProgrammeLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _SkylarkImageGlobal = _Global & {
  __typename?: "_SkylarkImageGlobal";
  content_type?: Maybe<Scalars["String"]>;
  created?: Maybe<_Audit>;
  download_from_url?: Maybe<Scalars["String"]>;
  external_url?: Maybe<Scalars["String"]>;
  file_name?: Maybe<Scalars["String"]>;
  history?: Maybe<Array<Maybe<_SkylarkImageGlobal>>>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  type?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkImageLanguage = _Language & {
  __typename?: "_SkylarkImageLanguage";
  created?: Maybe<_Audit>;
  description?: Maybe<Scalars["String"]>;
  history?: Maybe<Array<Maybe<_SkylarkImageLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkImageMeta = {
  __typename?: "_SkylarkImageMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_SkylarkImageGlobal>;
  language_data?: Maybe<_SkylarkImageLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _SkylarkPlaybackDetailAttributeGlobal = _Global & {
  __typename?: "_SkylarkPlaybackDetailAttributeGlobal";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_SkylarkPlaybackDetailAttributeGlobal>>>;
  key?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  value?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkPlaybackDetailAttributeLanguage = _Language & {
  __typename?: "_SkylarkPlaybackDetailAttributeLanguage";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_SkylarkPlaybackDetailAttributeLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkPlaybackDetailAttributeMeta = {
  __typename?: "_SkylarkPlaybackDetailAttributeMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_SkylarkPlaybackDetailAttributeGlobal>;
  language_data?: Maybe<_SkylarkPlaybackDetailAttributeLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _SkylarkPlaybackDetailGlobal = _Global & {
  __typename?: "_SkylarkPlaybackDetailGlobal";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_SkylarkPlaybackDetailGlobal>>>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  type?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkPlaybackDetailLanguage = _Language & {
  __typename?: "_SkylarkPlaybackDetailLanguage";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_SkylarkPlaybackDetailLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkPlaybackDetailMeta = {
  __typename?: "_SkylarkPlaybackDetailMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_SkylarkPlaybackDetailGlobal>;
  language_data?: Maybe<_SkylarkPlaybackDetailLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _SkylarkPlaybackProviderGlobal = _Global & {
  __typename?: "_SkylarkPlaybackProviderGlobal";
  base_url?: Maybe<Scalars["String"]>;
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_SkylarkPlaybackProviderGlobal>>>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  require_expiry_token?: Maybe<Scalars["Boolean"]>;
  token_algorithm?: Maybe<Scalars["String"]>;
  token_secret_key?: Maybe<Scalars["String"]>;
  token_validity_duration_seconds?: Maybe<Scalars["Int"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkPlaybackProviderLanguage = _Language & {
  __typename?: "_SkylarkPlaybackProviderLanguage";
  created?: Maybe<_Audit>;
  description?: Maybe<Scalars["String"]>;
  history?: Maybe<Array<Maybe<_SkylarkPlaybackProviderLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkPlaybackProviderMeta = {
  __typename?: "_SkylarkPlaybackProviderMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_SkylarkPlaybackProviderGlobal>;
  language_data?: Maybe<_SkylarkPlaybackProviderLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _SkylarkPlaybackUrlTemplateGlobal = _Global & {
  __typename?: "_SkylarkPlaybackURLTemplateGlobal";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_SkylarkPlaybackUrlTemplateGlobal>>>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  url_template?: Maybe<Scalars["String"]>;
  url_type?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkPlaybackUrlTemplateLanguage = _Language & {
  __typename?: "_SkylarkPlaybackURLTemplateLanguage";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_SkylarkPlaybackUrlTemplateLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkPlaybackUrlTemplateMeta = {
  __typename?: "_SkylarkPlaybackURLTemplateMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_SkylarkPlaybackUrlTemplateGlobal>;
  language_data?: Maybe<_SkylarkPlaybackUrlTemplateLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _SkylarkProviderCredentialGlobal = _Global & {
  __typename?: "_SkylarkProviderCredentialGlobal";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_SkylarkProviderCredentialGlobal>>>;
  key?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  value?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkProviderCredentialLanguage = _Language & {
  __typename?: "_SkylarkProviderCredentialLanguage";
  created?: Maybe<_Audit>;
  description?: Maybe<Scalars["String"]>;
  history?: Maybe<Array<Maybe<_SkylarkProviderCredentialLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkProviderCredentialMeta = {
  __typename?: "_SkylarkProviderCredentialMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_SkylarkProviderCredentialGlobal>;
  language_data?: Maybe<_SkylarkProviderCredentialLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _SkylarkSetGlobal = _Global & {
  __typename?: "_SkylarkSetGlobal";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_SkylarkSetGlobal>>>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  type?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkSetLanguage = _Language & {
  __typename?: "_SkylarkSetLanguage";
  created?: Maybe<_Audit>;
  description?: Maybe<Scalars["String"]>;
  history?: Maybe<Array<Maybe<_SkylarkSetLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  release_date?: Maybe<Scalars["String"]>;
  slug?: Maybe<Scalars["String"]>;
  synopsis?: Maybe<Scalars["String"]>;
  synopsis_short?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  title_short?: Maybe<Scalars["String"]>;
  title_sort?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkSetMeta = {
  __typename?: "_SkylarkSetMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_SkylarkSetGlobal>;
  language_data?: Maybe<_SkylarkSetLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _SkylarkTagGlobal = _Global & {
  __typename?: "_SkylarkTagGlobal";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_SkylarkTagGlobal>>>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  tag_category?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkTagLanguage = _Language & {
  __typename?: "_SkylarkTagLanguage";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_SkylarkTagLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  name?: Maybe<Scalars["String"]>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkTagMeta = {
  __typename?: "_SkylarkTagMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_SkylarkTagGlobal>;
  language_data?: Maybe<_SkylarkTagLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _SkylarkTextTrackGlobal = _Global & {
  __typename?: "_SkylarkTextTrackGlobal";
  content_type?: Maybe<Scalars["String"]>;
  created?: Maybe<_Audit>;
  display_label?: Maybe<Scalars["String"]>;
  download_from_url?: Maybe<Scalars["String"]>;
  external_url?: Maybe<Scalars["String"]>;
  file_name?: Maybe<Scalars["String"]>;
  format?: Maybe<Scalars["String"]>;
  history?: Maybe<Array<Maybe<_SkylarkTextTrackGlobal>>>;
  is_closed_captions?: Maybe<Scalars["Boolean"]>;
  is_default?: Maybe<Scalars["Boolean"]>;
  language_code?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  url?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkTextTrackLanguage = _Language & {
  __typename?: "_SkylarkTextTrackLanguage";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_SkylarkTextTrackLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkTextTrackMeta = {
  __typename?: "_SkylarkTextTrackMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_SkylarkTextTrackGlobal>;
  language_data?: Maybe<_SkylarkTextTrackLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _SkylarkVideoTrackGlobal = _Global & {
  __typename?: "_SkylarkVideoTrackGlobal";
  bitrate?: Maybe<Scalars["Int"]>;
  codec?: Maybe<Scalars["String"]>;
  colour?: Maybe<Scalars["String"]>;
  colour_depth?: Maybe<Scalars["String"]>;
  colour_encoding?: Maybe<Scalars["String"]>;
  created?: Maybe<_Audit>;
  format?: Maybe<Scalars["String"]>;
  frame_rate?: Maybe<Scalars["Float"]>;
  height?: Maybe<Scalars["Int"]>;
  history?: Maybe<Array<Maybe<_SkylarkVideoTrackGlobal>>>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  version?: Maybe<Scalars["Int"]>;
  width?: Maybe<Scalars["Int"]>;
};

export type _SkylarkVideoTrackLanguage = _Language & {
  __typename?: "_SkylarkVideoTrackLanguage";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_SkylarkVideoTrackLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _SkylarkVideoTrackMeta = {
  __typename?: "_SkylarkVideoTrackMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_SkylarkVideoTrackGlobal>;
  language_data?: Maybe<_SkylarkVideoTrackLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type _ThemeGlobal = _Global & {
  __typename?: "_ThemeGlobal";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_ThemeGlobal>>>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
  version?: Maybe<Scalars["Int"]>;
};

export type _ThemeLanguage = _Language & {
  __typename?: "_ThemeLanguage";
  created?: Maybe<_Audit>;
  history?: Maybe<Array<Maybe<_ThemeLanguage>>>;
  language?: Maybe<Scalars["String"]>;
  metadata_source?: Maybe<Scalars["String"]>;
  modified?: Maybe<_Audit>;
  name?: Maybe<Scalars["String"]>;
  publish_stage?: Maybe<PublishStage>;
  slug?: Maybe<Scalars["String"]>;
  version?: Maybe<Scalars["Int"]>;
};

export type _ThemeMeta = {
  __typename?: "_ThemeMeta";
  available_languages?: Maybe<Array<Maybe<Scalars["String"]>>>;
  created?: Maybe<_Audit>;
  field_config?: Maybe<Array<Maybe<_FieldConfig>>>;
  global_data?: Maybe<_ThemeGlobal>;
  language_data?: Maybe<_ThemeLanguage>;
  modified?: Maybe<_Audit>;
  publish_stage?: Maybe<PublishStage>;
};

export type AccountDetails = {
  __typename?: "accountDetails";
  account_id?: Maybe<Scalars["String"]>;
  skylark_version?: Maybe<Scalars["String"]>;
};

export type ActivationStatus = {
  __typename?: "activationStatus";
  active_version?: Maybe<Scalars["String"]>;
  update_in_progress?: Maybe<Scalars["Boolean"]>;
  update_started_at?: Maybe<Scalars["String"]>;
};

export type UserDetails = {
  __typename?: "userDetails";
  account?: Maybe<Scalars["String"]>;
  permissions?: Maybe<Array<Maybe<Scalars["String"]>>>;
  role?: Maybe<Scalars["String"]>;
};

/* eslint-enable */
