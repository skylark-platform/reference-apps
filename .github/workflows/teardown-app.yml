name: Teardown App
on:
  delete:
  workflow_dispatch:
    inputs:
      stack-name:
        type: string
        required: true
        description: The name of the environment to delete
      launcher-url:
        type: string
        required: true
        description: The Launcher URL for the Skylark instance
      aws-access-key-id:
        type: string
        required: false
        description: AWS account key ID to use
      aws-secret-access-key:
        type: string
        required: false
        description: AWS secret access key to use
concurrency:
  group: deploy-app-${{ inputs.launcher-url || github.event.ref || github.ref }}
env:
  pr-comment-id: reference-apps-deployment
  pr-comment-title: "Reference Apps Deployment"
jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    outputs:
      git-branch: ${{ steps.branch-and-ref.outputs.branch }}
      git-ref: ${{ steps.branch-and-ref.outputs.ref }}
    steps:
      - uses: actions/checkout@v3
      - name: Comment status on PR
        uses: ostmodern/comment-url-on-pr@v1
        with:
          title: ${{ env.pr-comment-title }}
          comment_id: ${{ env.pr-comment-id }}
          status: deleted
          github_token: ${{ github.token }}
      - name: Get branch and ref
        id: branch-and-ref
        run: |
          echo "github.event_name = ${{ github.event_name }}"
          echo "github.ref = ${{ github.ref }}"
          echo "github.event.ref = ${{ github.event.ref }}"

          # If the event is delete, use the event ref
          if [ "${{ github.event_name }}" = delete ]; then
            GitRef="${{ github.event.ref }}"
          elif [ "${{ github.event_name }}" = pull_request ]; then
            GitRef="${{ github.head_ref }}"
          else
            GitRef="${{ github.ref }}"
          fi
          GitBranch=$(echo ${GitRef#refs/heads/})

          echo "Git Ref: $GitRef"
          echo "Git Branch Name: $GitBranch"

          echo "::set-output name=ref::$GitRef"
          echo "::set-output name=branch::$GitBranch"
      - uses: ./.github/actions/parse-domain-from-url
        id: sanitize-url
        with:
          url: ${{ inputs.launcher-url }}

  teardown:
    name: Teardown
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - uses: actions/checkout@v3
      - name: Mask AWS Credentials
        uses: ./.github/actions/mask-aws-credentials
        id: mask
      - uses: ./.github/actions/destroy
        with:
          stack-name: ${{ github.event.inputs.stack-name || '' }}
          git-branch: ${{ !inputs.launcher-url && needs.prepare.outputs.git-branch || '' }}
          base-domain: ${{ needs.prepare.outputs.domain || (needs.prepare.outputs.git-branch == 'main' && 'skylark-dev.skylarkplatform.io' || 'legacy-skylark-development.skylarkplatform.io') }}
          aws-access-key-id: ${{ steps.mask.outputs.aws-access-key-id || (needs.prepare.outputs.git-branch == 'main' && secrets.AWS_ACCESS_KEY_ID_SKYLARK_DEV || secrets.AWS_ACCESS_KEY_ID_LEGACY_SKYLARK_DEVELOPMENT) }}
          aws-secret-access-key: ${{ steps.mask.outputs.aws-secret-access-key || (needs.prepare.outputs.git-branch == 'main' && secrets.AWS_SECRET_ACCESS_KEY_SKYLARK_DEV || secrets.AWS_SECRET_ACCESS_KEY_LEGACY_SKYLARK_DEVELOPMENT) }}
